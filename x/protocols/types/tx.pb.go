// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocols/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Used for WASM bindings and JSON parsing
type ProtocolCustomMsgType struct {
	CreateProtocolMsg             *MsgCreateProtocol             `protobuf:"bytes,1,opt,name=createProtocolMsg,proto3" json:"createProtocolMsg,omitempty"`
	UpdateProtocolMsg             *MsgUpdateProtocol             `protobuf:"bytes,2,opt,name=updateProtocolMsg,proto3" json:"updateProtocolMsg,omitempty"`
	DeleteProtocolMsg             *MsgDeleteProtocol             `protobuf:"bytes,3,opt,name=deleteProtocolMsg,proto3" json:"deleteProtocolMsg,omitempty"`
	SetCollectionForProtocolMsg   *MsgSetCollectionForProtocol   `protobuf:"bytes,4,opt,name=setCollectionForProtocolMsg,proto3" json:"setCollectionForProtocolMsg,omitempty"`
	UnsetCollectionForProtocolMsg *MsgUnsetCollectionForProtocol `protobuf:"bytes,5,opt,name=unsetCollectionForProtocolMsg,proto3" json:"unsetCollectionForProtocolMsg,omitempty"`
}

func (m *ProtocolCustomMsgType) Reset()         { *m = ProtocolCustomMsgType{} }
func (m *ProtocolCustomMsgType) String() string { return proto.CompactTextString(m) }
func (*ProtocolCustomMsgType) ProtoMessage()    {}
func (*ProtocolCustomMsgType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{0}
}
func (m *ProtocolCustomMsgType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtocolCustomMsgType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProtocolCustomMsgType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProtocolCustomMsgType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolCustomMsgType.Merge(m, src)
}
func (m *ProtocolCustomMsgType) XXX_Size() int {
	return m.Size()
}
func (m *ProtocolCustomMsgType) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolCustomMsgType.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolCustomMsgType proto.InternalMessageInfo

func (m *ProtocolCustomMsgType) GetCreateProtocolMsg() *MsgCreateProtocol {
	if m != nil {
		return m.CreateProtocolMsg
	}
	return nil
}

func (m *ProtocolCustomMsgType) GetUpdateProtocolMsg() *MsgUpdateProtocol {
	if m != nil {
		return m.UpdateProtocolMsg
	}
	return nil
}

func (m *ProtocolCustomMsgType) GetDeleteProtocolMsg() *MsgDeleteProtocol {
	if m != nil {
		return m.DeleteProtocolMsg
	}
	return nil
}

func (m *ProtocolCustomMsgType) GetSetCollectionForProtocolMsg() *MsgSetCollectionForProtocol {
	if m != nil {
		return m.SetCollectionForProtocolMsg
	}
	return nil
}

func (m *ProtocolCustomMsgType) GetUnsetCollectionForProtocolMsg() *MsgUnsetCollectionForProtocol {
	if m != nil {
		return m.UnsetCollectionForProtocolMsg
	}
	return nil
}

type Protocol struct {
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uri        string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	CustomData string `protobuf:"bytes,3,opt,name=customData,proto3" json:"customData,omitempty"`
	CreatedBy  string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	IsFrozen   bool   `protobuf:"varint,5,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{1}
}
func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return m.Size()
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

func (m *Protocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Protocol) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Protocol) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *Protocol) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Protocol) GetIsFrozen() bool {
	if m != nil {
		return m.IsFrozen
	}
	return false
}

type MsgCreateProtocol struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uri        string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	CustomData string `protobuf:"bytes,4,opt,name=customData,proto3" json:"customData,omitempty"`
	IsFrozen   bool   `protobuf:"varint,5,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
}

func (m *MsgCreateProtocol) Reset()         { *m = MsgCreateProtocol{} }
func (m *MsgCreateProtocol) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProtocol) ProtoMessage()    {}
func (*MsgCreateProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{2}
}
func (m *MsgCreateProtocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProtocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProtocol.Merge(m, src)
}
func (m *MsgCreateProtocol) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProtocol proto.InternalMessageInfo

func (m *MsgCreateProtocol) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateProtocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateProtocol) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MsgCreateProtocol) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *MsgCreateProtocol) GetIsFrozen() bool {
	if m != nil {
		return m.IsFrozen
	}
	return false
}

type MsgCreateProtocolResponse struct {
}

func (m *MsgCreateProtocolResponse) Reset()         { *m = MsgCreateProtocolResponse{} }
func (m *MsgCreateProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProtocolResponse) ProtoMessage()    {}
func (*MsgCreateProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{3}
}
func (m *MsgCreateProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProtocolResponse.Merge(m, src)
}
func (m *MsgCreateProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProtocolResponse proto.InternalMessageInfo

type MsgUpdateProtocol struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uri        string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	CustomData string `protobuf:"bytes,4,opt,name=customData,proto3" json:"customData,omitempty"`
	IsFrozen   bool   `protobuf:"varint,5,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
}

func (m *MsgUpdateProtocol) Reset()         { *m = MsgUpdateProtocol{} }
func (m *MsgUpdateProtocol) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProtocol) ProtoMessage()    {}
func (*MsgUpdateProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{4}
}
func (m *MsgUpdateProtocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProtocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProtocol.Merge(m, src)
}
func (m *MsgUpdateProtocol) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProtocol proto.InternalMessageInfo

func (m *MsgUpdateProtocol) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateProtocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateProtocol) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MsgUpdateProtocol) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *MsgUpdateProtocol) GetIsFrozen() bool {
	if m != nil {
		return m.IsFrozen
	}
	return false
}

type MsgUpdateProtocolResponse struct {
}

func (m *MsgUpdateProtocolResponse) Reset()         { *m = MsgUpdateProtocolResponse{} }
func (m *MsgUpdateProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProtocolResponse) ProtoMessage()    {}
func (*MsgUpdateProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{5}
}
func (m *MsgUpdateProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProtocolResponse.Merge(m, src)
}
func (m *MsgUpdateProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProtocolResponse proto.InternalMessageInfo

type MsgDeleteProtocol struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgDeleteProtocol) Reset()         { *m = MsgDeleteProtocol{} }
func (m *MsgDeleteProtocol) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProtocol) ProtoMessage()    {}
func (*MsgDeleteProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{6}
}
func (m *MsgDeleteProtocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProtocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProtocol.Merge(m, src)
}
func (m *MsgDeleteProtocol) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProtocol proto.InternalMessageInfo

func (m *MsgDeleteProtocol) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteProtocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgDeleteProtocolResponse struct {
}

func (m *MsgDeleteProtocolResponse) Reset()         { *m = MsgDeleteProtocolResponse{} }
func (m *MsgDeleteProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProtocolResponse) ProtoMessage()    {}
func (*MsgDeleteProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{7}
}
func (m *MsgDeleteProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProtocolResponse.Merge(m, src)
}
func (m *MsgDeleteProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProtocolResponse proto.InternalMessageInfo

type MsgSetCollectionForProtocol struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CollectionId Uint   `protobuf:"bytes,3,opt,name=collectionId,proto3,customtype=Uint" json:"collectionId"`
}

func (m *MsgSetCollectionForProtocol) Reset()         { *m = MsgSetCollectionForProtocol{} }
func (m *MsgSetCollectionForProtocol) String() string { return proto.CompactTextString(m) }
func (*MsgSetCollectionForProtocol) ProtoMessage()    {}
func (*MsgSetCollectionForProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{8}
}
func (m *MsgSetCollectionForProtocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCollectionForProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCollectionForProtocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCollectionForProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCollectionForProtocol.Merge(m, src)
}
func (m *MsgSetCollectionForProtocol) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCollectionForProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCollectionForProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCollectionForProtocol proto.InternalMessageInfo

func (m *MsgSetCollectionForProtocol) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetCollectionForProtocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgSetCollectionForProtocolResponse struct {
}

func (m *MsgSetCollectionForProtocolResponse) Reset()         { *m = MsgSetCollectionForProtocolResponse{} }
func (m *MsgSetCollectionForProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCollectionForProtocolResponse) ProtoMessage()    {}
func (*MsgSetCollectionForProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{9}
}
func (m *MsgSetCollectionForProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCollectionForProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCollectionForProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCollectionForProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCollectionForProtocolResponse.Merge(m, src)
}
func (m *MsgSetCollectionForProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCollectionForProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCollectionForProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCollectionForProtocolResponse proto.InternalMessageInfo

type MsgUnsetCollectionForProtocol struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgUnsetCollectionForProtocol) Reset()         { *m = MsgUnsetCollectionForProtocol{} }
func (m *MsgUnsetCollectionForProtocol) String() string { return proto.CompactTextString(m) }
func (*MsgUnsetCollectionForProtocol) ProtoMessage()    {}
func (*MsgUnsetCollectionForProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{10}
}
func (m *MsgUnsetCollectionForProtocol) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnsetCollectionForProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnsetCollectionForProtocol.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnsetCollectionForProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnsetCollectionForProtocol.Merge(m, src)
}
func (m *MsgUnsetCollectionForProtocol) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnsetCollectionForProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnsetCollectionForProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnsetCollectionForProtocol proto.InternalMessageInfo

func (m *MsgUnsetCollectionForProtocol) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUnsetCollectionForProtocol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgUnsetCollectionForProtocolResponse struct {
}

func (m *MsgUnsetCollectionForProtocolResponse) Reset()         { *m = MsgUnsetCollectionForProtocolResponse{} }
func (m *MsgUnsetCollectionForProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnsetCollectionForProtocolResponse) ProtoMessage()    {}
func (*MsgUnsetCollectionForProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ff1a8407b9f1218, []int{11}
}
func (m *MsgUnsetCollectionForProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnsetCollectionForProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnsetCollectionForProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnsetCollectionForProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnsetCollectionForProtocolResponse.Merge(m, src)
}
func (m *MsgUnsetCollectionForProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnsetCollectionForProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnsetCollectionForProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnsetCollectionForProtocolResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ProtocolCustomMsgType)(nil), "protocols.ProtocolCustomMsgType")
	proto.RegisterType((*Protocol)(nil), "protocols.Protocol")
	proto.RegisterType((*MsgCreateProtocol)(nil), "protocols.MsgCreateProtocol")
	proto.RegisterType((*MsgCreateProtocolResponse)(nil), "protocols.MsgCreateProtocolResponse")
	proto.RegisterType((*MsgUpdateProtocol)(nil), "protocols.MsgUpdateProtocol")
	proto.RegisterType((*MsgUpdateProtocolResponse)(nil), "protocols.MsgUpdateProtocolResponse")
	proto.RegisterType((*MsgDeleteProtocol)(nil), "protocols.MsgDeleteProtocol")
	proto.RegisterType((*MsgDeleteProtocolResponse)(nil), "protocols.MsgDeleteProtocolResponse")
	proto.RegisterType((*MsgSetCollectionForProtocol)(nil), "protocols.MsgSetCollectionForProtocol")
	proto.RegisterType((*MsgSetCollectionForProtocolResponse)(nil), "protocols.MsgSetCollectionForProtocolResponse")
	proto.RegisterType((*MsgUnsetCollectionForProtocol)(nil), "protocols.MsgUnsetCollectionForProtocol")
	proto.RegisterType((*MsgUnsetCollectionForProtocolResponse)(nil), "protocols.MsgUnsetCollectionForProtocolResponse")
}

func init() { proto.RegisterFile("protocols/tx.proto", fileDescriptor_5ff1a8407b9f1218) }

var fileDescriptor_5ff1a8407b9f1218 = []byte{
	// 561 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x95, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0xa5, 0x40, 0xf3, 0x98, 0x10, 0xb3, 0x40, 0x2a, 0xe9, 0x96, 0xa1, 0xc2, 0x60,
	0xa7, 0x66, 0x1a, 0xe2, 0x03, 0xd0, 0x4e, 0x93, 0x40, 0xaa, 0x40, 0x66, 0xbb, 0x70, 0x4b, 0x13,
	0x2b, 0x8d, 0xd4, 0xc6, 0x51, 0xec, 0x48, 0x2d, 0x12, 0x5f, 0x80, 0x0b, 0x7c, 0xac, 0x1d, 0x77,
	0x41, 0x42, 0x1c, 0x26, 0xd4, 0x7e, 0x06, 0xee, 0x28, 0x6e, 0x92, 0x35, 0x4e, 0x6b, 0xb5, 0xb7,
	0xdd, 0x6c, 0xf7, 0xbd, 0x9f, 0xff, 0x7d, 0xfe, 0xbf, 0x17, 0x40, 0x51, 0x4c, 0x39, 0x75, 0xe9,
	0x88, 0xd9, 0x7c, 0xd2, 0x11, 0x1b, 0x64, 0x14, 0x67, 0xe6, 0x13, 0x9f, 0xfa, 0x54, 0x6c, 0xed,
	0x74, 0xb5, 0x08, 0x68, 0xff, 0xd2, 0xe1, 0xe9, 0xa7, 0x2c, 0xa6, 0x97, 0x30, 0x4e, 0xc7, 0x7d,
	0xe6, 0x5f, 0x4c, 0x23, 0x82, 0x3e, 0xc0, 0x9e, 0x1b, 0x13, 0x87, 0x93, 0xfc, 0xe7, 0x3e, 0xf3,
	0x9b, 0xda, 0x73, 0xed, 0xf8, 0xe1, 0xe9, 0x7e, 0xa7, 0xc0, 0x76, 0xfa, 0xcc, 0xef, 0x95, 0xc2,
	0x70, 0x35, 0x2d, 0x65, 0x25, 0x91, 0x27, 0xb1, 0x76, 0x56, 0xb1, 0x2e, 0x4b, 0x61, 0xb8, 0x9a,
	0x96, 0xb2, 0x3c, 0x32, 0x22, 0x65, 0x96, 0xbe, 0x8a, 0x75, 0x56, 0x0a, 0xc3, 0xd5, 0x34, 0x34,
	0x84, 0x16, 0x23, 0xbc, 0x47, 0x47, 0x23, 0xe2, 0xf2, 0x80, 0x86, 0xe7, 0x34, 0x5e, 0xa6, 0xd6,
	0x05, 0xf5, 0x55, 0x99, 0xfa, 0x79, 0x4d, 0x02, 0x56, 0xa1, 0x50, 0x08, 0x07, 0x49, 0xa8, 0xba,
	0xeb, 0x9e, 0xb8, 0xeb, 0x58, 0xaa, 0xc6, 0xda, 0x14, 0xac, 0xc6, 0xb5, 0xbf, 0x6b, 0xd0, 0xc8,
	0xf7, 0x08, 0x41, 0x3d, 0x74, 0xc6, 0x44, 0xbc, 0x9e, 0x81, 0xc5, 0x1a, 0x3d, 0x06, 0x3d, 0x89,
	0x03, 0xf1, 0x08, 0x06, 0x4e, 0x97, 0xc8, 0x02, 0x70, 0x85, 0x03, 0xce, 0x1c, 0xee, 0x88, 0x8a,
	0x1a, 0x78, 0xe9, 0x04, 0xed, 0x83, 0xb1, 0x78, 0x59, 0xaf, 0x3b, 0x15, 0xa5, 0x31, 0xf0, 0xed,
	0x01, 0x32, 0xa1, 0x11, 0xb0, 0xf3, 0x98, 0x7e, 0x25, 0xa1, 0xf8, 0x2f, 0x0d, 0x5c, 0xec, 0xdb,
	0x3f, 0x34, 0xd8, 0xab, 0xf8, 0x04, 0x35, 0xe1, 0x81, 0x48, 0xa7, 0x71, 0x26, 0x2c, 0xdf, 0x16,
	0x7a, 0x77, 0xaa, 0x7a, 0xf5, 0x75, 0x7a, 0xeb, 0x15, 0xbd, 0x2a, 0x45, 0x2d, 0x78, 0x56, 0x35,
	0x2e, 0x61, 0x11, 0x0d, 0x19, 0xc9, 0xe5, 0x96, 0xad, 0x78, 0x07, 0xe4, 0x4a, 0xbd, 0x91, 0xcb,
	0x7d, 0x27, 0xd4, 0x96, 0xcd, 0xbe, 0x9d, 0xda, 0x8c, 0x2f, 0xf5, 0x4b, 0xce, 0xff, 0x06, 0x2d,
	0x85, 0xed, 0xb7, 0xac, 0xcb, 0x09, 0xec, 0xba, 0x05, 0xe6, 0xbd, 0xb7, 0x28, 0x50, 0x77, 0xf7,
	0xea, 0xe6, 0xb0, 0xf6, 0xe7, 0xe6, 0xb0, 0x7e, 0x19, 0x84, 0x1c, 0x97, 0x22, 0xda, 0x47, 0xf0,
	0x42, 0xd5, 0x75, 0xb9, 0xca, 0x3e, 0x1c, 0x28, 0x1b, 0x66, 0xcb, 0x8a, 0xbc, 0x86, 0x23, 0x75,
	0xff, 0x65, 0xf7, 0x9e, 0xfe, 0xd3, 0x41, 0x4f, 0x1b, 0xfc, 0x02, 0x1e, 0x49, 0xfe, 0x56, 0x4e,
	0x49, 0xf3, 0xa5, 0x72, 0x86, 0x66, 0xf4, 0x94, 0x2a, 0xd9, 0x50, 0x39, 0x2f, 0x65, 0xea, 0x6a,
	0xc7, 0xa4, 0x54, 0xc9, 0x2e, 0xca, 0xc9, 0x29, 0x53, 0x57, 0xfb, 0x04, 0xc5, 0xd0, 0x5c, 0x6b,
	0x92, 0x0d, 0x67, 0xa8, 0xd9, 0xd9, 0x70, 0xd6, 0xe6, 0x77, 0x4e, 0xc0, 0x54, 0x3c, 0xf9, 0xc6,
	0xd3, 0xd4, 0x3c, 0xd9, 0x78, 0xee, 0x66, 0x37, 0x77, 0x3f, 0x5e, 0xcd, 0x2c, 0xed, 0x7a, 0x66,
	0x69, 0x7f, 0x67, 0x96, 0xf6, 0x73, 0x6e, 0xd5, 0xae, 0xe7, 0x56, 0xed, 0xf7, 0xdc, 0xaa, 0x7d,
	0x79, 0xeb, 0x07, 0x7c, 0x98, 0x0c, 0x3a, 0x2e, 0x1d, 0xdb, 0x83, 0x80, 0x0f, 0x1c, 0xcf, 0x27,
	0xec, 0x76, 0xe5, 0x0e, 0x9d, 0x20, 0xb4, 0x27, 0xf6, 0xd2, 0xd7, 0x7a, 0x1a, 0x11, 0x36, 0xb8,
	0x2f, 0x0e, 0xde, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x52, 0xf2, 0xfd, 0xf1, 0xc7, 0x07, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateProtocol(ctx context.Context, in *MsgCreateProtocol, opts ...grpc.CallOption) (*MsgCreateProtocolResponse, error)
	UpdateProtocol(ctx context.Context, in *MsgUpdateProtocol, opts ...grpc.CallOption) (*MsgUpdateProtocolResponse, error)
	DeleteProtocol(ctx context.Context, in *MsgDeleteProtocol, opts ...grpc.CallOption) (*MsgDeleteProtocolResponse, error)
	SetCollectionForProtocol(ctx context.Context, in *MsgSetCollectionForProtocol, opts ...grpc.CallOption) (*MsgSetCollectionForProtocolResponse, error)
	UnsetCollectionForProtocol(ctx context.Context, in *MsgUnsetCollectionForProtocol, opts ...grpc.CallOption) (*MsgUnsetCollectionForProtocolResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateProtocol(ctx context.Context, in *MsgCreateProtocol, opts ...grpc.CallOption) (*MsgCreateProtocolResponse, error) {
	out := new(MsgCreateProtocolResponse)
	err := c.cc.Invoke(ctx, "/protocols.Msg/CreateProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProtocol(ctx context.Context, in *MsgUpdateProtocol, opts ...grpc.CallOption) (*MsgUpdateProtocolResponse, error) {
	out := new(MsgUpdateProtocolResponse)
	err := c.cc.Invoke(ctx, "/protocols.Msg/UpdateProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteProtocol(ctx context.Context, in *MsgDeleteProtocol, opts ...grpc.CallOption) (*MsgDeleteProtocolResponse, error) {
	out := new(MsgDeleteProtocolResponse)
	err := c.cc.Invoke(ctx, "/protocols.Msg/DeleteProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetCollectionForProtocol(ctx context.Context, in *MsgSetCollectionForProtocol, opts ...grpc.CallOption) (*MsgSetCollectionForProtocolResponse, error) {
	out := new(MsgSetCollectionForProtocolResponse)
	err := c.cc.Invoke(ctx, "/protocols.Msg/SetCollectionForProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnsetCollectionForProtocol(ctx context.Context, in *MsgUnsetCollectionForProtocol, opts ...grpc.CallOption) (*MsgUnsetCollectionForProtocolResponse, error) {
	out := new(MsgUnsetCollectionForProtocolResponse)
	err := c.cc.Invoke(ctx, "/protocols.Msg/UnsetCollectionForProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateProtocol(context.Context, *MsgCreateProtocol) (*MsgCreateProtocolResponse, error)
	UpdateProtocol(context.Context, *MsgUpdateProtocol) (*MsgUpdateProtocolResponse, error)
	DeleteProtocol(context.Context, *MsgDeleteProtocol) (*MsgDeleteProtocolResponse, error)
	SetCollectionForProtocol(context.Context, *MsgSetCollectionForProtocol) (*MsgSetCollectionForProtocolResponse, error)
	UnsetCollectionForProtocol(context.Context, *MsgUnsetCollectionForProtocol) (*MsgUnsetCollectionForProtocolResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateProtocol(ctx context.Context, req *MsgCreateProtocol) (*MsgCreateProtocolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProtocol not implemented")
}
func (*UnimplementedMsgServer) UpdateProtocol(ctx context.Context, req *MsgUpdateProtocol) (*MsgUpdateProtocolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProtocol not implemented")
}
func (*UnimplementedMsgServer) DeleteProtocol(ctx context.Context, req *MsgDeleteProtocol) (*MsgDeleteProtocolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProtocol not implemented")
}
func (*UnimplementedMsgServer) SetCollectionForProtocol(ctx context.Context, req *MsgSetCollectionForProtocol) (*MsgSetCollectionForProtocolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCollectionForProtocol not implemented")
}
func (*UnimplementedMsgServer) UnsetCollectionForProtocol(ctx context.Context, req *MsgUnsetCollectionForProtocol) (*MsgUnsetCollectionForProtocolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsetCollectionForProtocol not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProtocol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.Msg/CreateProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProtocol(ctx, req.(*MsgCreateProtocol))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProtocol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.Msg/UpdateProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProtocol(ctx, req.(*MsgUpdateProtocol))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteProtocol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.Msg/DeleteProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteProtocol(ctx, req.(*MsgDeleteProtocol))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetCollectionForProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCollectionForProtocol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCollectionForProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.Msg/SetCollectionForProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCollectionForProtocol(ctx, req.(*MsgSetCollectionForProtocol))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnsetCollectionForProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnsetCollectionForProtocol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnsetCollectionForProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.Msg/UnsetCollectionForProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnsetCollectionForProtocol(ctx, req.(*MsgUnsetCollectionForProtocol))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocols.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProtocol",
			Handler:    _Msg_CreateProtocol_Handler,
		},
		{
			MethodName: "UpdateProtocol",
			Handler:    _Msg_UpdateProtocol_Handler,
		},
		{
			MethodName: "DeleteProtocol",
			Handler:    _Msg_DeleteProtocol_Handler,
		},
		{
			MethodName: "SetCollectionForProtocol",
			Handler:    _Msg_SetCollectionForProtocol_Handler,
		},
		{
			MethodName: "UnsetCollectionForProtocol",
			Handler:    _Msg_UnsetCollectionForProtocol_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocols/tx.proto",
}

func (m *ProtocolCustomMsgType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtocolCustomMsgType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtocolCustomMsgType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnsetCollectionForProtocolMsg != nil {
		{
			size, err := m.UnsetCollectionForProtocolMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.SetCollectionForProtocolMsg != nil {
		{
			size, err := m.SetCollectionForProtocolMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.DeleteProtocolMsg != nil {
		{
			size, err := m.DeleteProtocolMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.UpdateProtocolMsg != nil {
		{
			size, err := m.UpdateProtocolMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CreateProtocolMsg != nil {
		{
			size, err := m.CreateProtocolMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Protocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Protocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Protocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsFrozen {
		i--
		if m.IsFrozen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CustomData) > 0 {
		i -= len(m.CustomData)
		copy(dAtA[i:], m.CustomData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CustomData)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProtocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProtocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProtocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsFrozen {
		i--
		if m.IsFrozen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.CustomData) > 0 {
		i -= len(m.CustomData)
		copy(dAtA[i:], m.CustomData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CustomData)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProtocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProtocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProtocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsFrozen {
		i--
		if m.IsFrozen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.CustomData) > 0 {
		i -= len(m.CustomData)
		copy(dAtA[i:], m.CustomData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CustomData)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProtocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProtocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProtocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetCollectionForProtocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCollectionForProtocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCollectionForProtocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.CollectionId.Size()
		i -= size
		if _, err := m.CollectionId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCollectionForProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCollectionForProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCollectionForProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnsetCollectionForProtocol) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnsetCollectionForProtocol) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnsetCollectionForProtocol) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnsetCollectionForProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnsetCollectionForProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnsetCollectionForProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProtocolCustomMsgType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreateProtocolMsg != nil {
		l = m.CreateProtocolMsg.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.UpdateProtocolMsg != nil {
		l = m.UpdateProtocolMsg.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.DeleteProtocolMsg != nil {
		l = m.DeleteProtocolMsg.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetCollectionForProtocolMsg != nil {
		l = m.SetCollectionForProtocolMsg.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.UnsetCollectionForProtocolMsg != nil {
		l = m.UnsetCollectionForProtocolMsg.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *Protocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CustomData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsFrozen {
		n += 2
	}
	return n
}

func (m *MsgCreateProtocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CustomData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsFrozen {
		n += 2
	}
	return n
}

func (m *MsgCreateProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateProtocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CustomData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsFrozen {
		n += 2
	}
	return n
}

func (m *MsgUpdateProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProtocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetCollectionForProtocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.CollectionId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetCollectionForProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnsetCollectionForProtocol) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnsetCollectionForProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProtocolCustomMsgType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtocolCustomMsgType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtocolCustomMsgType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateProtocolMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateProtocolMsg == nil {
				m.CreateProtocolMsg = &MsgCreateProtocol{}
			}
			if err := m.CreateProtocolMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateProtocolMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdateProtocolMsg == nil {
				m.UpdateProtocolMsg = &MsgUpdateProtocol{}
			}
			if err := m.UpdateProtocolMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteProtocolMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeleteProtocolMsg == nil {
				m.DeleteProtocolMsg = &MsgDeleteProtocol{}
			}
			if err := m.DeleteProtocolMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetCollectionForProtocolMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SetCollectionForProtocolMsg == nil {
				m.SetCollectionForProtocolMsg = &MsgSetCollectionForProtocol{}
			}
			if err := m.SetCollectionForProtocolMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnsetCollectionForProtocolMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UnsetCollectionForProtocolMsg == nil {
				m.UnsetCollectionForProtocolMsg = &MsgUnsetCollectionForProtocol{}
			}
			if err := m.UnsetCollectionForProtocolMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Protocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Protocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Protocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFrozen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFrozen = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProtocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProtocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProtocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFrozen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFrozen = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProtocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProtocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProtocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFrozen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFrozen = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProtocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProtocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProtocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCollectionForProtocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCollectionForProtocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCollectionForProtocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CollectionId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCollectionForProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCollectionForProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCollectionForProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnsetCollectionForProtocol) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnsetCollectionForProtocol: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnsetCollectionForProtocol: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnsetCollectionForProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnsetCollectionForProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnsetCollectionForProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
