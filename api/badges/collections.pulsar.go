// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package badges

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_TokenCollection_2_list)(nil)

type _TokenCollection_2_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_TokenCollection_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_2_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_2_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_3_list)(nil)

type _TokenCollection_3_list struct {
	list *[]*TokenMetadataTimeline
}

func (x *_TokenCollection_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TokenMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_3_list) AppendMutable() protoreflect.Value {
	v := new(TokenMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_3_list) NewElement() protoreflect.Value {
	v := new(TokenMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_5_list)(nil)

type _TokenCollection_5_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_TokenCollection_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_5_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_5_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_7_list)(nil)

type _TokenCollection_7_list struct {
	list *[]*CustomDataTimeline
}

func (x *_TokenCollection_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_7_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_7_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_8_list)(nil)

type _TokenCollection_8_list struct {
	list *[]*ManagerTimeline
}

func (x *_TokenCollection_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_8_list) AppendMutable() protoreflect.Value {
	v := new(ManagerTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_8_list) NewElement() protoreflect.Value {
	v := new(ManagerTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_10_list)(nil)

type _TokenCollection_10_list struct {
	list *[]*CollectionApproval
}

func (x *_TokenCollection_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_10_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_10_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_11_list)(nil)

type _TokenCollection_11_list struct {
	list *[]*StandardsTimeline
}

func (x *_TokenCollection_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_11_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_11_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_12_list)(nil)

type _TokenCollection_12_list struct {
	list *[]*IsArchivedTimeline
}

func (x *_TokenCollection_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_12_list) AppendMutable() protoreflect.Value {
	v := new(IsArchivedTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_12_list) NewElement() protoreflect.Value {
	v := new(IsArchivedTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_15_list)(nil)

type _TokenCollection_15_list struct {
	list *[]*UintRange
}

func (x *_TokenCollection_15_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_15_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_15_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_15_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_15_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_15_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_15_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_15_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TokenCollection_17_list)(nil)

type _TokenCollection_17_list struct {
	list *[]*CosmosCoinWrapperPath
}

func (x *_TokenCollection_17_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TokenCollection_17_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TokenCollection_17_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CosmosCoinWrapperPath)
	(*x.list)[i] = concreteValue
}

func (x *_TokenCollection_17_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CosmosCoinWrapperPath)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TokenCollection_17_list) AppendMutable() protoreflect.Value {
	v := new(CosmosCoinWrapperPath)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_17_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TokenCollection_17_list) NewElement() protoreflect.Value {
	v := new(CosmosCoinWrapperPath)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TokenCollection_17_list) IsValid() bool {
	return x.list != nil
}

var (
	md_TokenCollection                                  protoreflect.MessageDescriptor
	fd_TokenCollection_collectionId                     protoreflect.FieldDescriptor
	fd_TokenCollection_collectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_TokenCollection_tokenMetadataTimeline            protoreflect.FieldDescriptor
	fd_TokenCollection_balancesType                     protoreflect.FieldDescriptor
	fd_TokenCollection_offChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_TokenCollection_customDataTimeline               protoreflect.FieldDescriptor
	fd_TokenCollection_managerTimeline                  protoreflect.FieldDescriptor
	fd_TokenCollection_collectionPermissions            protoreflect.FieldDescriptor
	fd_TokenCollection_collectionApprovals              protoreflect.FieldDescriptor
	fd_TokenCollection_standardsTimeline                protoreflect.FieldDescriptor
	fd_TokenCollection_isArchivedTimeline               protoreflect.FieldDescriptor
	fd_TokenCollection_defaultBalances                  protoreflect.FieldDescriptor
	fd_TokenCollection_createdBy                        protoreflect.FieldDescriptor
	fd_TokenCollection_validTokenIds                    protoreflect.FieldDescriptor
	fd_TokenCollection_mintEscrowAddress                protoreflect.FieldDescriptor
	fd_TokenCollection_cosmosCoinWrapperPaths           protoreflect.FieldDescriptor
)

func init() {
	file_badges_collections_proto_init()
	md_TokenCollection = File_badges_collections_proto.Messages().ByName("TokenCollection")
	fd_TokenCollection_collectionId = md_TokenCollection.Fields().ByName("collectionId")
	fd_TokenCollection_collectionMetadataTimeline = md_TokenCollection.Fields().ByName("collectionMetadataTimeline")
	fd_TokenCollection_tokenMetadataTimeline = md_TokenCollection.Fields().ByName("tokenMetadataTimeline")
	fd_TokenCollection_balancesType = md_TokenCollection.Fields().ByName("balancesType")
	fd_TokenCollection_offChainBalancesMetadataTimeline = md_TokenCollection.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_TokenCollection_customDataTimeline = md_TokenCollection.Fields().ByName("customDataTimeline")
	fd_TokenCollection_managerTimeline = md_TokenCollection.Fields().ByName("managerTimeline")
	fd_TokenCollection_collectionPermissions = md_TokenCollection.Fields().ByName("collectionPermissions")
	fd_TokenCollection_collectionApprovals = md_TokenCollection.Fields().ByName("collectionApprovals")
	fd_TokenCollection_standardsTimeline = md_TokenCollection.Fields().ByName("standardsTimeline")
	fd_TokenCollection_isArchivedTimeline = md_TokenCollection.Fields().ByName("isArchivedTimeline")
	fd_TokenCollection_defaultBalances = md_TokenCollection.Fields().ByName("defaultBalances")
	fd_TokenCollection_createdBy = md_TokenCollection.Fields().ByName("createdBy")
	fd_TokenCollection_validTokenIds = md_TokenCollection.Fields().ByName("validTokenIds")
	fd_TokenCollection_mintEscrowAddress = md_TokenCollection.Fields().ByName("mintEscrowAddress")
	fd_TokenCollection_cosmosCoinWrapperPaths = md_TokenCollection.Fields().ByName("cosmosCoinWrapperPaths")
}

var _ protoreflect.Message = (*fastReflection_TokenCollection)(nil)

type fastReflection_TokenCollection TokenCollection

func (x *TokenCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenCollection)(x)
}

func (x *TokenCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_collections_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenCollection_messageType fastReflection_TokenCollection_messageType
var _ protoreflect.MessageType = fastReflection_TokenCollection_messageType{}

type fastReflection_TokenCollection_messageType struct{}

func (x fastReflection_TokenCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenCollection)(nil)
}
func (x fastReflection_TokenCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenCollection)
}
func (x fastReflection_TokenCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenCollection) Type() protoreflect.MessageType {
	return _fastReflection_TokenCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenCollection) New() protoreflect.Message {
	return new(fastReflection_TokenCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenCollection) Interface() protoreflect.ProtoMessage {
	return (*TokenCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_TokenCollection_collectionId, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_2_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_TokenCollection_collectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.TokenMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_3_list{list: &x.TokenMetadataTimeline})
		if !f(fd_TokenCollection_tokenMetadataTimeline, value) {
			return
		}
	}
	if x.BalancesType != "" {
		value := protoreflect.ValueOfString(x.BalancesType)
		if !f(fd_TokenCollection_balancesType, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_5_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_TokenCollection_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_7_list{list: &x.CustomDataTimeline})
		if !f(fd_TokenCollection_customDataTimeline, value) {
			return
		}
	}
	if len(x.ManagerTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_8_list{list: &x.ManagerTimeline})
		if !f(fd_TokenCollection_managerTimeline, value) {
			return
		}
	}
	if x.CollectionPermissions != nil {
		value := protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
		if !f(fd_TokenCollection_collectionPermissions, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_10_list{list: &x.CollectionApprovals})
		if !f(fd_TokenCollection_collectionApprovals, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_11_list{list: &x.StandardsTimeline})
		if !f(fd_TokenCollection_standardsTimeline, value) {
			return
		}
	}
	if len(x.IsArchivedTimeline) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_12_list{list: &x.IsArchivedTimeline})
		if !f(fd_TokenCollection_isArchivedTimeline, value) {
			return
		}
	}
	if x.DefaultBalances != nil {
		value := protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
		if !f(fd_TokenCollection_defaultBalances, value) {
			return
		}
	}
	if x.CreatedBy != "" {
		value := protoreflect.ValueOfString(x.CreatedBy)
		if !f(fd_TokenCollection_createdBy, value) {
			return
		}
	}
	if len(x.ValidTokenIds) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_15_list{list: &x.ValidTokenIds})
		if !f(fd_TokenCollection_validTokenIds, value) {
			return
		}
	}
	if x.MintEscrowAddress != "" {
		value := protoreflect.ValueOfString(x.MintEscrowAddress)
		if !f(fd_TokenCollection_mintEscrowAddress, value) {
			return
		}
	}
	if len(x.CosmosCoinWrapperPaths) != 0 {
		value := protoreflect.ValueOfList(&_TokenCollection_17_list{list: &x.CosmosCoinWrapperPaths})
		if !f(fd_TokenCollection_cosmosCoinWrapperPaths, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.TokenCollection.collectionId":
		return x.CollectionId != ""
	case "badges.TokenCollection.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.TokenCollection.tokenMetadataTimeline":
		return len(x.TokenMetadataTimeline) != 0
	case "badges.TokenCollection.balancesType":
		return x.BalancesType != ""
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.TokenCollection.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.TokenCollection.managerTimeline":
		return len(x.ManagerTimeline) != 0
	case "badges.TokenCollection.collectionPermissions":
		return x.CollectionPermissions != nil
	case "badges.TokenCollection.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.TokenCollection.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	case "badges.TokenCollection.isArchivedTimeline":
		return len(x.IsArchivedTimeline) != 0
	case "badges.TokenCollection.defaultBalances":
		return x.DefaultBalances != nil
	case "badges.TokenCollection.createdBy":
		return x.CreatedBy != ""
	case "badges.TokenCollection.validTokenIds":
		return len(x.ValidTokenIds) != 0
	case "badges.TokenCollection.mintEscrowAddress":
		return x.MintEscrowAddress != ""
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		return len(x.CosmosCoinWrapperPaths) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.TokenCollection.collectionId":
		x.CollectionId = ""
	case "badges.TokenCollection.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.TokenCollection.tokenMetadataTimeline":
		x.TokenMetadataTimeline = nil
	case "badges.TokenCollection.balancesType":
		x.BalancesType = ""
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.TokenCollection.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.TokenCollection.managerTimeline":
		x.ManagerTimeline = nil
	case "badges.TokenCollection.collectionPermissions":
		x.CollectionPermissions = nil
	case "badges.TokenCollection.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.TokenCollection.standardsTimeline":
		x.StandardsTimeline = nil
	case "badges.TokenCollection.isArchivedTimeline":
		x.IsArchivedTimeline = nil
	case "badges.TokenCollection.defaultBalances":
		x.DefaultBalances = nil
	case "badges.TokenCollection.createdBy":
		x.CreatedBy = ""
	case "badges.TokenCollection.validTokenIds":
		x.ValidTokenIds = nil
	case "badges.TokenCollection.mintEscrowAddress":
		x.MintEscrowAddress = ""
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		x.CosmosCoinWrapperPaths = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.TokenCollection.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.TokenCollection.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_2_list{})
		}
		listValue := &_TokenCollection_2_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.tokenMetadataTimeline":
		if len(x.TokenMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_3_list{})
		}
		listValue := &_TokenCollection_3_list{list: &x.TokenMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.balancesType":
		value := x.BalancesType
		return protoreflect.ValueOfString(value)
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_5_list{})
		}
		listValue := &_TokenCollection_5_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_7_list{})
		}
		listValue := &_TokenCollection_7_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.managerTimeline":
		if len(x.ManagerTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_8_list{})
		}
		listValue := &_TokenCollection_8_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.collectionPermissions":
		value := x.CollectionPermissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.TokenCollection.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_10_list{})
		}
		listValue := &_TokenCollection_10_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_11_list{})
		}
		listValue := &_TokenCollection_11_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.isArchivedTimeline":
		if len(x.IsArchivedTimeline) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_12_list{})
		}
		listValue := &_TokenCollection_12_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.defaultBalances":
		value := x.DefaultBalances
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.TokenCollection.createdBy":
		value := x.CreatedBy
		return protoreflect.ValueOfString(value)
	case "badges.TokenCollection.validTokenIds":
		if len(x.ValidTokenIds) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_15_list{})
		}
		listValue := &_TokenCollection_15_list{list: &x.ValidTokenIds}
		return protoreflect.ValueOfList(listValue)
	case "badges.TokenCollection.mintEscrowAddress":
		value := x.MintEscrowAddress
		return protoreflect.ValueOfString(value)
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		if len(x.CosmosCoinWrapperPaths) == 0 {
			return protoreflect.ValueOfList(&_TokenCollection_17_list{})
		}
		listValue := &_TokenCollection_17_list{list: &x.CosmosCoinWrapperPaths}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.TokenCollection.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.TokenCollection.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_2_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.TokenCollection.tokenMetadataTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_3_list)
		x.TokenMetadataTimeline = *clv.list
	case "badges.TokenCollection.balancesType":
		x.BalancesType = value.Interface().(string)
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_5_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.TokenCollection.customDataTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_7_list)
		x.CustomDataTimeline = *clv.list
	case "badges.TokenCollection.managerTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_8_list)
		x.ManagerTimeline = *clv.list
	case "badges.TokenCollection.collectionPermissions":
		x.CollectionPermissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.TokenCollection.collectionApprovals":
		lv := value.List()
		clv := lv.(*_TokenCollection_10_list)
		x.CollectionApprovals = *clv.list
	case "badges.TokenCollection.standardsTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_11_list)
		x.StandardsTimeline = *clv.list
	case "badges.TokenCollection.isArchivedTimeline":
		lv := value.List()
		clv := lv.(*_TokenCollection_12_list)
		x.IsArchivedTimeline = *clv.list
	case "badges.TokenCollection.defaultBalances":
		x.DefaultBalances = value.Message().Interface().(*UserBalanceStore)
	case "badges.TokenCollection.createdBy":
		x.CreatedBy = value.Interface().(string)
	case "badges.TokenCollection.validTokenIds":
		lv := value.List()
		clv := lv.(*_TokenCollection_15_list)
		x.ValidTokenIds = *clv.list
	case "badges.TokenCollection.mintEscrowAddress":
		x.MintEscrowAddress = value.Interface().(string)
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		lv := value.List()
		clv := lv.(*_TokenCollection_17_list)
		x.CosmosCoinWrapperPaths = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.TokenCollection.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_TokenCollection_2_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.tokenMetadataTimeline":
		if x.TokenMetadataTimeline == nil {
			x.TokenMetadataTimeline = []*TokenMetadataTimeline{}
		}
		value := &_TokenCollection_3_list{list: &x.TokenMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_TokenCollection_5_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_TokenCollection_7_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.managerTimeline":
		if x.ManagerTimeline == nil {
			x.ManagerTimeline = []*ManagerTimeline{}
		}
		value := &_TokenCollection_8_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.collectionPermissions":
		if x.CollectionPermissions == nil {
			x.CollectionPermissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
	case "badges.TokenCollection.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_TokenCollection_10_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_TokenCollection_11_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.isArchivedTimeline":
		if x.IsArchivedTimeline == nil {
			x.IsArchivedTimeline = []*IsArchivedTimeline{}
		}
		value := &_TokenCollection_12_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.defaultBalances":
		if x.DefaultBalances == nil {
			x.DefaultBalances = new(UserBalanceStore)
		}
		return protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
	case "badges.TokenCollection.validTokenIds":
		if x.ValidTokenIds == nil {
			x.ValidTokenIds = []*UintRange{}
		}
		value := &_TokenCollection_15_list{list: &x.ValidTokenIds}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		if x.CosmosCoinWrapperPaths == nil {
			x.CosmosCoinWrapperPaths = []*CosmosCoinWrapperPath{}
		}
		value := &_TokenCollection_17_list{list: &x.CosmosCoinWrapperPaths}
		return protoreflect.ValueOfList(value)
	case "badges.TokenCollection.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.TokenCollection is not mutable"))
	case "badges.TokenCollection.balancesType":
		panic(fmt.Errorf("field balancesType of message badges.TokenCollection is not mutable"))
	case "badges.TokenCollection.createdBy":
		panic(fmt.Errorf("field createdBy of message badges.TokenCollection is not mutable"))
	case "badges.TokenCollection.mintEscrowAddress":
		panic(fmt.Errorf("field mintEscrowAddress of message badges.TokenCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.TokenCollection.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.TokenCollection.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_2_list{list: &list})
	case "badges.TokenCollection.tokenMetadataTimeline":
		list := []*TokenMetadataTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_3_list{list: &list})
	case "badges.TokenCollection.balancesType":
		return protoreflect.ValueOfString("")
	case "badges.TokenCollection.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_5_list{list: &list})
	case "badges.TokenCollection.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_7_list{list: &list})
	case "badges.TokenCollection.managerTimeline":
		list := []*ManagerTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_8_list{list: &list})
	case "badges.TokenCollection.collectionPermissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.TokenCollection.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_TokenCollection_10_list{list: &list})
	case "badges.TokenCollection.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_11_list{list: &list})
	case "badges.TokenCollection.isArchivedTimeline":
		list := []*IsArchivedTimeline{}
		return protoreflect.ValueOfList(&_TokenCollection_12_list{list: &list})
	case "badges.TokenCollection.defaultBalances":
		m := new(UserBalanceStore)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.TokenCollection.createdBy":
		return protoreflect.ValueOfString("")
	case "badges.TokenCollection.validTokenIds":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_TokenCollection_15_list{list: &list})
	case "badges.TokenCollection.mintEscrowAddress":
		return protoreflect.ValueOfString("")
	case "badges.TokenCollection.cosmosCoinWrapperPaths":
		list := []*CosmosCoinWrapperPath{}
		return protoreflect.ValueOfList(&_TokenCollection_17_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.TokenCollection"))
		}
		panic(fmt.Errorf("message badges.TokenCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.TokenCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TokenMetadataTimeline) > 0 {
			for _, e := range x.TokenMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.BalancesType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ManagerTimeline) > 0 {
			for _, e := range x.ManagerTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CollectionPermissions != nil {
			l = options.Size(x.CollectionPermissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.IsArchivedTimeline) > 0 {
			for _, e := range x.IsArchivedTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.DefaultBalances != nil {
			l = options.Size(x.DefaultBalances)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CreatedBy)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ValidTokenIds) > 0 {
			for _, e := range x.ValidTokenIds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.MintEscrowAddress)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if len(x.CosmosCoinWrapperPaths) > 0 {
			for _, e := range x.CosmosCoinWrapperPaths {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CosmosCoinWrapperPaths) > 0 {
			for iNdEx := len(x.CosmosCoinWrapperPaths) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CosmosCoinWrapperPaths[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.MintEscrowAddress) > 0 {
			i -= len(x.MintEscrowAddress)
			copy(dAtA[i:], x.MintEscrowAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MintEscrowAddress)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.ValidTokenIds) > 0 {
			for iNdEx := len(x.ValidTokenIds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidTokenIds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x7a
			}
		}
		if len(x.CreatedBy) > 0 {
			i -= len(x.CreatedBy)
			copy(dAtA[i:], x.CreatedBy)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatedBy)))
			i--
			dAtA[i] = 0x72
		}
		if x.DefaultBalances != nil {
			encoded, err := options.Marshal(x.DefaultBalances)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.IsArchivedTimeline) > 0 {
			for iNdEx := len(x.IsArchivedTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IsArchivedTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.CollectionPermissions != nil {
			encoded, err := options.Marshal(x.CollectionPermissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.ManagerTimeline) > 0 {
			for iNdEx := len(x.ManagerTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ManagerTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.BalancesType) > 0 {
			i -= len(x.BalancesType)
			copy(dAtA[i:], x.BalancesType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BalancesType)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenMetadataTimeline) > 0 {
			for iNdEx := len(x.TokenMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenMetadataTimeline = append(x.TokenMetadataTimeline, &TokenMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenMetadataTimeline[len(x.TokenMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BalancesType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BalancesType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ManagerTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ManagerTimeline = append(x.ManagerTimeline, &ManagerTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ManagerTimeline[len(x.ManagerTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionPermissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CollectionPermissions == nil {
					x.CollectionPermissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionPermissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchivedTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IsArchivedTimeline = append(x.IsArchivedTimeline, &IsArchivedTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IsArchivedTimeline[len(x.IsArchivedTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultBalances", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DefaultBalances == nil {
					x.DefaultBalances = &UserBalanceStore{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultBalances); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatedBy = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidTokenIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidTokenIds = append(x.ValidTokenIds, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidTokenIds[len(x.ValidTokenIds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MintEscrowAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MintEscrowAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CosmosCoinWrapperPaths", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CosmosCoinWrapperPaths = append(x.CosmosCoinWrapperPaths, &CosmosCoinWrapperPath{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CosmosCoinWrapperPaths[len(x.CosmosCoinWrapperPaths)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CosmosCoinWrapperPath_3_list)(nil)

type _CosmosCoinWrapperPath_3_list struct {
	list *[]*UintRange
}

func (x *_CosmosCoinWrapperPath_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CosmosCoinWrapperPath_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_CosmosCoinWrapperPath_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CosmosCoinWrapperPath_3_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CosmosCoinWrapperPath_3_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_CosmosCoinWrapperPath_4_list)(nil)

type _CosmosCoinWrapperPath_4_list struct {
	list *[]*UintRange
}

func (x *_CosmosCoinWrapperPath_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CosmosCoinWrapperPath_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_CosmosCoinWrapperPath_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CosmosCoinWrapperPath_4_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CosmosCoinWrapperPath_4_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_CosmosCoinWrapperPath_6_list)(nil)

type _CosmosCoinWrapperPath_6_list struct {
	list *[]*DenomUnit
}

func (x *_CosmosCoinWrapperPath_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CosmosCoinWrapperPath_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DenomUnit)
	(*x.list)[i] = concreteValue
}

func (x *_CosmosCoinWrapperPath_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DenomUnit)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CosmosCoinWrapperPath_6_list) AppendMutable() protoreflect.Value {
	v := new(DenomUnit)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CosmosCoinWrapperPath_6_list) NewElement() protoreflect.Value {
	v := new(DenomUnit)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CosmosCoinWrapperPath_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CosmosCoinWrapperPath                protoreflect.MessageDescriptor
	fd_CosmosCoinWrapperPath_address        protoreflect.FieldDescriptor
	fd_CosmosCoinWrapperPath_denom          protoreflect.FieldDescriptor
	fd_CosmosCoinWrapperPath_ownershipTimes protoreflect.FieldDescriptor
	fd_CosmosCoinWrapperPath_tokenIds       protoreflect.FieldDescriptor
	fd_CosmosCoinWrapperPath_symbol         protoreflect.FieldDescriptor
	fd_CosmosCoinWrapperPath_denomUnits     protoreflect.FieldDescriptor
)

func init() {
	file_badges_collections_proto_init()
	md_CosmosCoinWrapperPath = File_badges_collections_proto.Messages().ByName("CosmosCoinWrapperPath")
	fd_CosmosCoinWrapperPath_address = md_CosmosCoinWrapperPath.Fields().ByName("address")
	fd_CosmosCoinWrapperPath_denom = md_CosmosCoinWrapperPath.Fields().ByName("denom")
	fd_CosmosCoinWrapperPath_ownershipTimes = md_CosmosCoinWrapperPath.Fields().ByName("ownershipTimes")
	fd_CosmosCoinWrapperPath_tokenIds = md_CosmosCoinWrapperPath.Fields().ByName("tokenIds")
	fd_CosmosCoinWrapperPath_symbol = md_CosmosCoinWrapperPath.Fields().ByName("symbol")
	fd_CosmosCoinWrapperPath_denomUnits = md_CosmosCoinWrapperPath.Fields().ByName("denomUnits")
}

var _ protoreflect.Message = (*fastReflection_CosmosCoinWrapperPath)(nil)

type fastReflection_CosmosCoinWrapperPath CosmosCoinWrapperPath

func (x *CosmosCoinWrapperPath) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CosmosCoinWrapperPath)(x)
}

func (x *CosmosCoinWrapperPath) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_collections_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CosmosCoinWrapperPath_messageType fastReflection_CosmosCoinWrapperPath_messageType
var _ protoreflect.MessageType = fastReflection_CosmosCoinWrapperPath_messageType{}

type fastReflection_CosmosCoinWrapperPath_messageType struct{}

func (x fastReflection_CosmosCoinWrapperPath_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CosmosCoinWrapperPath)(nil)
}
func (x fastReflection_CosmosCoinWrapperPath_messageType) New() protoreflect.Message {
	return new(fastReflection_CosmosCoinWrapperPath)
}
func (x fastReflection_CosmosCoinWrapperPath_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CosmosCoinWrapperPath
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CosmosCoinWrapperPath) Descriptor() protoreflect.MessageDescriptor {
	return md_CosmosCoinWrapperPath
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CosmosCoinWrapperPath) Type() protoreflect.MessageType {
	return _fastReflection_CosmosCoinWrapperPath_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CosmosCoinWrapperPath) New() protoreflect.Message {
	return new(fastReflection_CosmosCoinWrapperPath)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CosmosCoinWrapperPath) Interface() protoreflect.ProtoMessage {
	return (*CosmosCoinWrapperPath)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CosmosCoinWrapperPath) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_CosmosCoinWrapperPath_address, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_CosmosCoinWrapperPath_denom, value) {
			return
		}
	}
	if len(x.OwnershipTimes) != 0 {
		value := protoreflect.ValueOfList(&_CosmosCoinWrapperPath_3_list{list: &x.OwnershipTimes})
		if !f(fd_CosmosCoinWrapperPath_ownershipTimes, value) {
			return
		}
	}
	if len(x.TokenIds) != 0 {
		value := protoreflect.ValueOfList(&_CosmosCoinWrapperPath_4_list{list: &x.TokenIds})
		if !f(fd_CosmosCoinWrapperPath_tokenIds, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_CosmosCoinWrapperPath_symbol, value) {
			return
		}
	}
	if len(x.DenomUnits) != 0 {
		value := protoreflect.ValueOfList(&_CosmosCoinWrapperPath_6_list{list: &x.DenomUnits})
		if !f(fd_CosmosCoinWrapperPath_denomUnits, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CosmosCoinWrapperPath) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.CosmosCoinWrapperPath.address":
		return x.Address != ""
	case "badges.CosmosCoinWrapperPath.denom":
		return x.Denom != ""
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		return len(x.OwnershipTimes) != 0
	case "badges.CosmosCoinWrapperPath.tokenIds":
		return len(x.TokenIds) != 0
	case "badges.CosmosCoinWrapperPath.symbol":
		return x.Symbol != ""
	case "badges.CosmosCoinWrapperPath.denomUnits":
		return len(x.DenomUnits) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CosmosCoinWrapperPath) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.CosmosCoinWrapperPath.address":
		x.Address = ""
	case "badges.CosmosCoinWrapperPath.denom":
		x.Denom = ""
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		x.OwnershipTimes = nil
	case "badges.CosmosCoinWrapperPath.tokenIds":
		x.TokenIds = nil
	case "badges.CosmosCoinWrapperPath.symbol":
		x.Symbol = ""
	case "badges.CosmosCoinWrapperPath.denomUnits":
		x.DenomUnits = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CosmosCoinWrapperPath) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.CosmosCoinWrapperPath.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "badges.CosmosCoinWrapperPath.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		if len(x.OwnershipTimes) == 0 {
			return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_3_list{})
		}
		listValue := &_CosmosCoinWrapperPath_3_list{list: &x.OwnershipTimes}
		return protoreflect.ValueOfList(listValue)
	case "badges.CosmosCoinWrapperPath.tokenIds":
		if len(x.TokenIds) == 0 {
			return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_4_list{})
		}
		listValue := &_CosmosCoinWrapperPath_4_list{list: &x.TokenIds}
		return protoreflect.ValueOfList(listValue)
	case "badges.CosmosCoinWrapperPath.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "badges.CosmosCoinWrapperPath.denomUnits":
		if len(x.DenomUnits) == 0 {
			return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_6_list{})
		}
		listValue := &_CosmosCoinWrapperPath_6_list{list: &x.DenomUnits}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CosmosCoinWrapperPath) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.CosmosCoinWrapperPath.address":
		x.Address = value.Interface().(string)
	case "badges.CosmosCoinWrapperPath.denom":
		x.Denom = value.Interface().(string)
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		lv := value.List()
		clv := lv.(*_CosmosCoinWrapperPath_3_list)
		x.OwnershipTimes = *clv.list
	case "badges.CosmosCoinWrapperPath.tokenIds":
		lv := value.List()
		clv := lv.(*_CosmosCoinWrapperPath_4_list)
		x.TokenIds = *clv.list
	case "badges.CosmosCoinWrapperPath.symbol":
		x.Symbol = value.Interface().(string)
	case "badges.CosmosCoinWrapperPath.denomUnits":
		lv := value.List()
		clv := lv.(*_CosmosCoinWrapperPath_6_list)
		x.DenomUnits = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CosmosCoinWrapperPath) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		if x.OwnershipTimes == nil {
			x.OwnershipTimes = []*UintRange{}
		}
		value := &_CosmosCoinWrapperPath_3_list{list: &x.OwnershipTimes}
		return protoreflect.ValueOfList(value)
	case "badges.CosmosCoinWrapperPath.tokenIds":
		if x.TokenIds == nil {
			x.TokenIds = []*UintRange{}
		}
		value := &_CosmosCoinWrapperPath_4_list{list: &x.TokenIds}
		return protoreflect.ValueOfList(value)
	case "badges.CosmosCoinWrapperPath.denomUnits":
		if x.DenomUnits == nil {
			x.DenomUnits = []*DenomUnit{}
		}
		value := &_CosmosCoinWrapperPath_6_list{list: &x.DenomUnits}
		return protoreflect.ValueOfList(value)
	case "badges.CosmosCoinWrapperPath.address":
		panic(fmt.Errorf("field address of message badges.CosmosCoinWrapperPath is not mutable"))
	case "badges.CosmosCoinWrapperPath.denom":
		panic(fmt.Errorf("field denom of message badges.CosmosCoinWrapperPath is not mutable"))
	case "badges.CosmosCoinWrapperPath.symbol":
		panic(fmt.Errorf("field symbol of message badges.CosmosCoinWrapperPath is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CosmosCoinWrapperPath) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.CosmosCoinWrapperPath.address":
		return protoreflect.ValueOfString("")
	case "badges.CosmosCoinWrapperPath.denom":
		return protoreflect.ValueOfString("")
	case "badges.CosmosCoinWrapperPath.ownershipTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_3_list{list: &list})
	case "badges.CosmosCoinWrapperPath.tokenIds":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_4_list{list: &list})
	case "badges.CosmosCoinWrapperPath.symbol":
		return protoreflect.ValueOfString("")
	case "badges.CosmosCoinWrapperPath.denomUnits":
		list := []*DenomUnit{}
		return protoreflect.ValueOfList(&_CosmosCoinWrapperPath_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.CosmosCoinWrapperPath"))
		}
		panic(fmt.Errorf("message badges.CosmosCoinWrapperPath does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CosmosCoinWrapperPath) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.CosmosCoinWrapperPath", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CosmosCoinWrapperPath) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CosmosCoinWrapperPath) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CosmosCoinWrapperPath) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CosmosCoinWrapperPath) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CosmosCoinWrapperPath)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OwnershipTimes) > 0 {
			for _, e := range x.OwnershipTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TokenIds) > 0 {
			for _, e := range x.TokenIds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.DenomUnits) > 0 {
			for _, e := range x.DenomUnits {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CosmosCoinWrapperPath)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DenomUnits) > 0 {
			for iNdEx := len(x.DenomUnits) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DenomUnits[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.TokenIds) > 0 {
			for iNdEx := len(x.TokenIds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenIds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.OwnershipTimes) > 0 {
			for iNdEx := len(x.OwnershipTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OwnershipTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CosmosCoinWrapperPath)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CosmosCoinWrapperPath: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CosmosCoinWrapperPath: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OwnershipTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OwnershipTimes = append(x.OwnershipTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OwnershipTimes[len(x.OwnershipTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenIds = append(x.TokenIds, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenIds[len(x.TokenIds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DenomUnits", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DenomUnits = append(x.DenomUnits, &DenomUnit{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DenomUnits[len(x.DenomUnits)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DenomUnit                  protoreflect.MessageDescriptor
	fd_DenomUnit_decimals         protoreflect.FieldDescriptor
	fd_DenomUnit_symbol           protoreflect.FieldDescriptor
	fd_DenomUnit_isDefaultDisplay protoreflect.FieldDescriptor
)

func init() {
	file_badges_collections_proto_init()
	md_DenomUnit = File_badges_collections_proto.Messages().ByName("DenomUnit")
	fd_DenomUnit_decimals = md_DenomUnit.Fields().ByName("decimals")
	fd_DenomUnit_symbol = md_DenomUnit.Fields().ByName("symbol")
	fd_DenomUnit_isDefaultDisplay = md_DenomUnit.Fields().ByName("isDefaultDisplay")
}

var _ protoreflect.Message = (*fastReflection_DenomUnit)(nil)

type fastReflection_DenomUnit DenomUnit

func (x *DenomUnit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DenomUnit)(x)
}

func (x *DenomUnit) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_collections_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DenomUnit_messageType fastReflection_DenomUnit_messageType
var _ protoreflect.MessageType = fastReflection_DenomUnit_messageType{}

type fastReflection_DenomUnit_messageType struct{}

func (x fastReflection_DenomUnit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DenomUnit)(nil)
}
func (x fastReflection_DenomUnit_messageType) New() protoreflect.Message {
	return new(fastReflection_DenomUnit)
}
func (x fastReflection_DenomUnit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DenomUnit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DenomUnit) Descriptor() protoreflect.MessageDescriptor {
	return md_DenomUnit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DenomUnit) Type() protoreflect.MessageType {
	return _fastReflection_DenomUnit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DenomUnit) New() protoreflect.Message {
	return new(fastReflection_DenomUnit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DenomUnit) Interface() protoreflect.ProtoMessage {
	return (*DenomUnit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DenomUnit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Decimals != "" {
		value := protoreflect.ValueOfString(x.Decimals)
		if !f(fd_DenomUnit_decimals, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_DenomUnit_symbol, value) {
			return
		}
	}
	if x.IsDefaultDisplay != false {
		value := protoreflect.ValueOfBool(x.IsDefaultDisplay)
		if !f(fd_DenomUnit_isDefaultDisplay, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DenomUnit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.DenomUnit.decimals":
		return x.Decimals != ""
	case "badges.DenomUnit.symbol":
		return x.Symbol != ""
	case "badges.DenomUnit.isDefaultDisplay":
		return x.IsDefaultDisplay != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DenomUnit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.DenomUnit.decimals":
		x.Decimals = ""
	case "badges.DenomUnit.symbol":
		x.Symbol = ""
	case "badges.DenomUnit.isDefaultDisplay":
		x.IsDefaultDisplay = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DenomUnit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.DenomUnit.decimals":
		value := x.Decimals
		return protoreflect.ValueOfString(value)
	case "badges.DenomUnit.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "badges.DenomUnit.isDefaultDisplay":
		value := x.IsDefaultDisplay
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DenomUnit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.DenomUnit.decimals":
		x.Decimals = value.Interface().(string)
	case "badges.DenomUnit.symbol":
		x.Symbol = value.Interface().(string)
	case "badges.DenomUnit.isDefaultDisplay":
		x.IsDefaultDisplay = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DenomUnit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.DenomUnit.decimals":
		panic(fmt.Errorf("field decimals of message badges.DenomUnit is not mutable"))
	case "badges.DenomUnit.symbol":
		panic(fmt.Errorf("field symbol of message badges.DenomUnit is not mutable"))
	case "badges.DenomUnit.isDefaultDisplay":
		panic(fmt.Errorf("field isDefaultDisplay of message badges.DenomUnit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DenomUnit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.DenomUnit.decimals":
		return protoreflect.ValueOfString("")
	case "badges.DenomUnit.symbol":
		return protoreflect.ValueOfString("")
	case "badges.DenomUnit.isDefaultDisplay":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.DenomUnit"))
		}
		panic(fmt.Errorf("message badges.DenomUnit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DenomUnit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.DenomUnit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DenomUnit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DenomUnit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DenomUnit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DenomUnit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DenomUnit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Decimals)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IsDefaultDisplay {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DenomUnit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsDefaultDisplay {
			i--
			if x.IsDefaultDisplay {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Decimals) > 0 {
			i -= len(x.Decimals)
			copy(dAtA[i:], x.Decimals)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Decimals)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DenomUnit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DenomUnit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DenomUnit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimals", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Decimals = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsDefaultDisplay", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsDefaultDisplay = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: badges/collections.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A TokenCollection is the top-level object for a collection of tokens.
// It defines everything about the collection, such as the manager, metadata, etc.
//
// All collections are identified by a collectionId assigned by the blockchain, which is a uint64 that increments (i.e. the first collection has ID 1).
//
// All collections can have a manager who is responsible for managing the collection and can be granted certain admin
// permissions, such as the ability to mint new tokens.
//
// Certain fields are timeline-based, which means they may have different values at different block heights.
// We fetch the value according to the current time.
// For example, we may set the manager to be Alice from Time1 to Time2, and then set the manager to be Bob from Time2 to Time3.
//
// Collections may have different balance types: standard vs. off-chain - indexed vs. inherited.vs off-chain - non-indexed vs non-public.
//
// See documentation for more details.
type TokenCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier for this collection. This is assigned by the blockchain. First collection has ID 1.
	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// The metadata for the collection itself, which can vary over time.
	CollectionMetadataTimeline []*CollectionMetadataTimeline `protobuf:"bytes,2,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	// The metadata for each token in the collection, also subject to changes over time.
	TokenMetadataTimeline []*TokenMetadataTimeline `protobuf:"bytes,3,rep,name=tokenMetadataTimeline,proto3" json:"tokenMetadataTimeline,omitempty"`
	// The type of balances this collection uses ("Standard", "Off-Chain - Indexed", "Off-Chain - Non-Indexed", or "Non-Public").
	BalancesType string `protobuf:"bytes,4,opt,name=balancesType,proto3" json:"balancesType,omitempty"`
	// Metadata for fetching balances for collections with off-chain balances, subject to changes over time.
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,5,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	// An arbitrary field that can store any data, subject to changes over time.
	CustomDataTimeline []*CustomDataTimeline `protobuf:"bytes,7,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	// The address of the manager of this collection, subject to changes over time.
	ManagerTimeline []*ManagerTimeline `protobuf:"bytes,8,rep,name=managerTimeline,proto3" json:"managerTimeline,omitempty"`
	// Permissions that define what the manager of the collection can do or not do.
	CollectionPermissions *CollectionPermissions `protobuf:"bytes,9,opt,name=collectionPermissions,proto3" json:"collectionPermissions,omitempty"`
	// Transferability of the collection for collections with standard balances, subject to changes over time.
	// Overrides user approvals for a transfer if specified.
	// Transfer must satisfy both user and collection-level approvals.
	// Only applicable to on-chain balances.
	CollectionApprovals []*CollectionApproval `protobuf:"bytes,10,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	// Standards that define how to interpret the fields of the collection, subject to changes over time.
	StandardsTimeline []*StandardsTimeline `protobuf:"bytes,11,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
	// Whether the collection is archived or not, subject to changes over time.
	// When archived, it becomes read-only, and no transactions can be processed until it is unarchived.
	IsArchivedTimeline []*IsArchivedTimeline `protobuf:"bytes,12,rep,name=isArchivedTimeline,proto3" json:"isArchivedTimeline,omitempty"`
	// The default store of a balance for a user, upon genesis.
	DefaultBalances *UserBalanceStore `protobuf:"bytes,13,opt,name=defaultBalances,proto3" json:"defaultBalances,omitempty"`
	// The user or entity who created the collection.
	CreatedBy string `protobuf:"bytes,14,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	// The valid token IDs for this collection.
	ValidTokenIds []*UintRange `protobuf:"bytes,15,rep,name=validTokenIds,proto3" json:"validTokenIds,omitempty"`
	// The generated address of the collection. Also used to escrow Mint balances.
	MintEscrowAddress string `protobuf:"bytes,16,opt,name=mintEscrowAddress,proto3" json:"mintEscrowAddress,omitempty"`
	// The IBC wrapper (sdk.coin) paths for the collection.
	CosmosCoinWrapperPaths []*CosmosCoinWrapperPath `protobuf:"bytes,17,rep,name=cosmosCoinWrapperPaths,proto3" json:"cosmosCoinWrapperPaths,omitempty"`
}

func (x *TokenCollection) Reset() {
	*x = TokenCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_collections_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCollection) ProtoMessage() {}

// Deprecated: Use TokenCollection.ProtoReflect.Descriptor instead.
func (*TokenCollection) Descriptor() ([]byte, []int) {
	return file_badges_collections_proto_rawDescGZIP(), []int{0}
}

func (x *TokenCollection) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *TokenCollection) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *TokenCollection) GetTokenMetadataTimeline() []*TokenMetadataTimeline {
	if x != nil {
		return x.TokenMetadataTimeline
	}
	return nil
}

func (x *TokenCollection) GetBalancesType() string {
	if x != nil {
		return x.BalancesType
	}
	return ""
}

func (x *TokenCollection) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *TokenCollection) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *TokenCollection) GetManagerTimeline() []*ManagerTimeline {
	if x != nil {
		return x.ManagerTimeline
	}
	return nil
}

func (x *TokenCollection) GetCollectionPermissions() *CollectionPermissions {
	if x != nil {
		return x.CollectionPermissions
	}
	return nil
}

func (x *TokenCollection) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *TokenCollection) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

func (x *TokenCollection) GetIsArchivedTimeline() []*IsArchivedTimeline {
	if x != nil {
		return x.IsArchivedTimeline
	}
	return nil
}

func (x *TokenCollection) GetDefaultBalances() *UserBalanceStore {
	if x != nil {
		return x.DefaultBalances
	}
	return nil
}

func (x *TokenCollection) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *TokenCollection) GetValidTokenIds() []*UintRange {
	if x != nil {
		return x.ValidTokenIds
	}
	return nil
}

func (x *TokenCollection) GetMintEscrowAddress() string {
	if x != nil {
		return x.MintEscrowAddress
	}
	return ""
}

func (x *TokenCollection) GetCosmosCoinWrapperPaths() []*CosmosCoinWrapperPath {
	if x != nil {
		return x.CosmosCoinWrapperPaths
	}
	return nil
}

type CosmosCoinWrapperPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Denom          string       `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	OwnershipTimes []*UintRange `protobuf:"bytes,3,rep,name=ownershipTimes,proto3" json:"ownershipTimes,omitempty"`
	TokenIds       []*UintRange `protobuf:"bytes,4,rep,name=tokenIds,proto3" json:"tokenIds,omitempty"`
	Symbol         string       `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DenomUnits     []*DenomUnit `protobuf:"bytes,6,rep,name=denomUnits,proto3" json:"denomUnits,omitempty"`
}

func (x *CosmosCoinWrapperPath) Reset() {
	*x = CosmosCoinWrapperPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_collections_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosCoinWrapperPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosCoinWrapperPath) ProtoMessage() {}

// Deprecated: Use CosmosCoinWrapperPath.ProtoReflect.Descriptor instead.
func (*CosmosCoinWrapperPath) Descriptor() ([]byte, []int) {
	return file_badges_collections_proto_rawDescGZIP(), []int{1}
}

func (x *CosmosCoinWrapperPath) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CosmosCoinWrapperPath) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CosmosCoinWrapperPath) GetOwnershipTimes() []*UintRange {
	if x != nil {
		return x.OwnershipTimes
	}
	return nil
}

func (x *CosmosCoinWrapperPath) GetTokenIds() []*UintRange {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *CosmosCoinWrapperPath) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CosmosCoinWrapperPath) GetDenomUnits() []*DenomUnit {
	if x != nil {
		return x.DenomUnits
	}
	return nil
}

type DenomUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decimals         string `protobuf:"bytes,1,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol           string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	IsDefaultDisplay bool   `protobuf:"varint,3,opt,name=isDefaultDisplay,proto3" json:"isDefaultDisplay,omitempty"`
}

func (x *DenomUnit) Reset() {
	*x = DenomUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_collections_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenomUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenomUnit) ProtoMessage() {}

// Deprecated: Use DenomUnit.ProtoReflect.Descriptor instead.
func (*DenomUnit) Descriptor() ([]byte, []int) {
	return file_badges_collections_proto_rawDescGZIP(), []int{2}
}

func (x *DenomUnit) GetDecimals() string {
	if x != nil {
		return x.Decimals
	}
	return ""
}

func (x *DenomUnit) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DenomUnit) GetIsDefaultDisplay() bool {
	if x != nil {
		return x.IsDefaultDisplay
	}
	return false
}

var File_badges_collections_proto protoreflect.FileDescriptor

var file_badges_collections_proto_rawDesc = []byte{
	0x0a, 0x18, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x08, 0x0a, 0x0f,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55,
	0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x62, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x74,
	0x0a, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x41, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x4a, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x37, 0x0a,
	0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x74, 0x45, 0x73,
	0x63, 0x72, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x74, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x55, 0x0a, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x43, 0x6f,
	0x69, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x15,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0a,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x79, 0x0a, 0x09, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x71, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x42, 0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x19, 0x62, 0x69, 0x74, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x73, 0xca, 0x02, 0x06, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0xe2, 0x02, 0x12, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x06, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badges_collections_proto_rawDescOnce sync.Once
	file_badges_collections_proto_rawDescData = file_badges_collections_proto_rawDesc
)

func file_badges_collections_proto_rawDescGZIP() []byte {
	file_badges_collections_proto_rawDescOnce.Do(func() {
		file_badges_collections_proto_rawDescData = protoimpl.X.CompressGZIP(file_badges_collections_proto_rawDescData)
	})
	return file_badges_collections_proto_rawDescData
}

var file_badges_collections_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_badges_collections_proto_goTypes = []interface{}{
	(*TokenCollection)(nil),                  // 0: badges.TokenCollection
	(*CosmosCoinWrapperPath)(nil),            // 1: badges.CosmosCoinWrapperPath
	(*DenomUnit)(nil),                        // 2: badges.DenomUnit
	(*CollectionMetadataTimeline)(nil),       // 3: badges.CollectionMetadataTimeline
	(*TokenMetadataTimeline)(nil),            // 4: badges.TokenMetadataTimeline
	(*OffChainBalancesMetadataTimeline)(nil), // 5: badges.OffChainBalancesMetadataTimeline
	(*CustomDataTimeline)(nil),               // 6: badges.CustomDataTimeline
	(*ManagerTimeline)(nil),                  // 7: badges.ManagerTimeline
	(*CollectionPermissions)(nil),            // 8: badges.CollectionPermissions
	(*CollectionApproval)(nil),               // 9: badges.CollectionApproval
	(*StandardsTimeline)(nil),                // 10: badges.StandardsTimeline
	(*IsArchivedTimeline)(nil),               // 11: badges.IsArchivedTimeline
	(*UserBalanceStore)(nil),                 // 12: badges.UserBalanceStore
	(*UintRange)(nil),                        // 13: badges.UintRange
}
var file_badges_collections_proto_depIdxs = []int32{
	3,  // 0: badges.TokenCollection.collectionMetadataTimeline:type_name -> badges.CollectionMetadataTimeline
	4,  // 1: badges.TokenCollection.tokenMetadataTimeline:type_name -> badges.TokenMetadataTimeline
	5,  // 2: badges.TokenCollection.offChainBalancesMetadataTimeline:type_name -> badges.OffChainBalancesMetadataTimeline
	6,  // 3: badges.TokenCollection.customDataTimeline:type_name -> badges.CustomDataTimeline
	7,  // 4: badges.TokenCollection.managerTimeline:type_name -> badges.ManagerTimeline
	8,  // 5: badges.TokenCollection.collectionPermissions:type_name -> badges.CollectionPermissions
	9,  // 6: badges.TokenCollection.collectionApprovals:type_name -> badges.CollectionApproval
	10, // 7: badges.TokenCollection.standardsTimeline:type_name -> badges.StandardsTimeline
	11, // 8: badges.TokenCollection.isArchivedTimeline:type_name -> badges.IsArchivedTimeline
	12, // 9: badges.TokenCollection.defaultBalances:type_name -> badges.UserBalanceStore
	13, // 10: badges.TokenCollection.validTokenIds:type_name -> badges.UintRange
	1,  // 11: badges.TokenCollection.cosmosCoinWrapperPaths:type_name -> badges.CosmosCoinWrapperPath
	13, // 12: badges.CosmosCoinWrapperPath.ownershipTimes:type_name -> badges.UintRange
	13, // 13: badges.CosmosCoinWrapperPath.tokenIds:type_name -> badges.UintRange
	2,  // 14: badges.CosmosCoinWrapperPath.denomUnits:type_name -> badges.DenomUnit
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_badges_collections_proto_init() }
func file_badges_collections_proto_init() {
	if File_badges_collections_proto != nil {
		return
	}
	file_badges_transfers_proto_init()
	file_badges_balances_proto_init()
	file_badges_permissions_proto_init()
	file_badges_metadata_proto_init()
	file_badges_timelines_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_badges_collections_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_collections_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosCoinWrapperPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_collections_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenomUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badges_collections_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_badges_collections_proto_goTypes,
		DependencyIndexes: file_badges_collections_proto_depIdxs,
		MessageInfos:      file_badges_collections_proto_msgTypes,
	}.Build()
	File_badges_collections_proto = out.File
	file_badges_collections_proto_rawDesc = nil
	file_badges_collections_proto_goTypes = nil
	file_badges_collections_proto_depIdxs = nil
}
