// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package v0

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_CollectionMetadataTimeline_2_list)(nil)

type _CollectionMetadataTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_CollectionMetadataTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CollectionMetadataTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CollectionMetadataTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_CollectionMetadataTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CollectionMetadataTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionMetadataTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CollectionMetadataTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionMetadataTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CollectionMetadataTimeline                    protoreflect.MessageDescriptor
	fd_CollectionMetadataTimeline_collectionMetadata protoreflect.FieldDescriptor
	fd_CollectionMetadataTimeline_timelineTimes      protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_CollectionMetadataTimeline = File_badges_v0_timelines_proto.Messages().ByName("CollectionMetadataTimeline")
	fd_CollectionMetadataTimeline_collectionMetadata = md_CollectionMetadataTimeline.Fields().ByName("collectionMetadata")
	fd_CollectionMetadataTimeline_timelineTimes = md_CollectionMetadataTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_CollectionMetadataTimeline)(nil)

type fastReflection_CollectionMetadataTimeline CollectionMetadataTimeline

func (x *CollectionMetadataTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CollectionMetadataTimeline)(x)
}

func (x *CollectionMetadataTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CollectionMetadataTimeline_messageType fastReflection_CollectionMetadataTimeline_messageType
var _ protoreflect.MessageType = fastReflection_CollectionMetadataTimeline_messageType{}

type fastReflection_CollectionMetadataTimeline_messageType struct{}

func (x fastReflection_CollectionMetadataTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CollectionMetadataTimeline)(nil)
}
func (x fastReflection_CollectionMetadataTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_CollectionMetadataTimeline)
}
func (x fastReflection_CollectionMetadataTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CollectionMetadataTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CollectionMetadataTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_CollectionMetadataTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CollectionMetadataTimeline) Type() protoreflect.MessageType {
	return _fastReflection_CollectionMetadataTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CollectionMetadataTimeline) New() protoreflect.Message {
	return new(fastReflection_CollectionMetadataTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CollectionMetadataTimeline) Interface() protoreflect.ProtoMessage {
	return (*CollectionMetadataTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CollectionMetadataTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionMetadata != nil {
		value := protoreflect.ValueOfMessage(x.CollectionMetadata.ProtoReflect())
		if !f(fd_CollectionMetadataTimeline_collectionMetadata, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_CollectionMetadataTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_CollectionMetadataTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CollectionMetadataTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		return x.CollectionMetadata != nil
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionMetadataTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		x.CollectionMetadata = nil
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CollectionMetadataTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		value := x.CollectionMetadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_CollectionMetadataTimeline_2_list{})
		}
		listValue := &_CollectionMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionMetadataTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		x.CollectionMetadata = value.Message().Interface().(*CollectionMetadata)
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_CollectionMetadataTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionMetadataTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		if x.CollectionMetadata == nil {
			x.CollectionMetadata = new(CollectionMetadata)
		}
		return protoreflect.ValueOfMessage(x.CollectionMetadata.ProtoReflect())
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_CollectionMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CollectionMetadataTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CollectionMetadataTimeline.collectionMetadata":
		m := new(CollectionMetadata)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.v0.CollectionMetadataTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_CollectionMetadataTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CollectionMetadataTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.CollectionMetadataTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CollectionMetadataTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionMetadataTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CollectionMetadataTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CollectionMetadataTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CollectionMetadataTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CollectionMetadata != nil {
			l = options.Size(x.CollectionMetadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CollectionMetadataTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.CollectionMetadata != nil {
			encoded, err := options.Marshal(x.CollectionMetadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CollectionMetadataTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CollectionMetadataTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CollectionMetadataTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CollectionMetadata == nil {
					x.CollectionMetadata = &CollectionMetadata{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_BadgeMetadataTimeline_1_list)(nil)

type _BadgeMetadataTimeline_1_list struct {
	list *[]*BadgeMetadata
}

func (x *_BadgeMetadataTimeline_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BadgeMetadataTimeline_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_BadgeMetadataTimeline_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadata)
	(*x.list)[i] = concreteValue
}

func (x *_BadgeMetadataTimeline_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadata)
	*x.list = append(*x.list, concreteValue)
}

func (x *_BadgeMetadataTimeline_1_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadata)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BadgeMetadataTimeline_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_BadgeMetadataTimeline_1_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadata)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BadgeMetadataTimeline_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_BadgeMetadataTimeline_2_list)(nil)

type _BadgeMetadataTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_BadgeMetadataTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BadgeMetadataTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_BadgeMetadataTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_BadgeMetadataTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_BadgeMetadataTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BadgeMetadataTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_BadgeMetadataTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_BadgeMetadataTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_BadgeMetadataTimeline               protoreflect.MessageDescriptor
	fd_BadgeMetadataTimeline_badgeMetadata protoreflect.FieldDescriptor
	fd_BadgeMetadataTimeline_timelineTimes protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_BadgeMetadataTimeline = File_badges_v0_timelines_proto.Messages().ByName("BadgeMetadataTimeline")
	fd_BadgeMetadataTimeline_badgeMetadata = md_BadgeMetadataTimeline.Fields().ByName("badgeMetadata")
	fd_BadgeMetadataTimeline_timelineTimes = md_BadgeMetadataTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_BadgeMetadataTimeline)(nil)

type fastReflection_BadgeMetadataTimeline BadgeMetadataTimeline

func (x *BadgeMetadataTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BadgeMetadataTimeline)(x)
}

func (x *BadgeMetadataTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BadgeMetadataTimeline_messageType fastReflection_BadgeMetadataTimeline_messageType
var _ protoreflect.MessageType = fastReflection_BadgeMetadataTimeline_messageType{}

type fastReflection_BadgeMetadataTimeline_messageType struct{}

func (x fastReflection_BadgeMetadataTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BadgeMetadataTimeline)(nil)
}
func (x fastReflection_BadgeMetadataTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_BadgeMetadataTimeline)
}
func (x fastReflection_BadgeMetadataTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BadgeMetadataTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BadgeMetadataTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_BadgeMetadataTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BadgeMetadataTimeline) Type() protoreflect.MessageType {
	return _fastReflection_BadgeMetadataTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BadgeMetadataTimeline) New() protoreflect.Message {
	return new(fastReflection_BadgeMetadataTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BadgeMetadataTimeline) Interface() protoreflect.ProtoMessage {
	return (*BadgeMetadataTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BadgeMetadataTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.BadgeMetadata) != 0 {
		value := protoreflect.ValueOfList(&_BadgeMetadataTimeline_1_list{list: &x.BadgeMetadata})
		if !f(fd_BadgeMetadataTimeline_badgeMetadata, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_BadgeMetadataTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_BadgeMetadataTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BadgeMetadataTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		return len(x.BadgeMetadata) != 0
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeMetadataTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		x.BadgeMetadata = nil
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BadgeMetadataTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		if len(x.BadgeMetadata) == 0 {
			return protoreflect.ValueOfList(&_BadgeMetadataTimeline_1_list{})
		}
		listValue := &_BadgeMetadataTimeline_1_list{list: &x.BadgeMetadata}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_BadgeMetadataTimeline_2_list{})
		}
		listValue := &_BadgeMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeMetadataTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		lv := value.List()
		clv := lv.(*_BadgeMetadataTimeline_1_list)
		x.BadgeMetadata = *clv.list
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_BadgeMetadataTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeMetadataTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		if x.BadgeMetadata == nil {
			x.BadgeMetadata = []*BadgeMetadata{}
		}
		value := &_BadgeMetadataTimeline_1_list{list: &x.BadgeMetadata}
		return protoreflect.ValueOfList(value)
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_BadgeMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BadgeMetadataTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.BadgeMetadataTimeline.badgeMetadata":
		list := []*BadgeMetadata{}
		return protoreflect.ValueOfList(&_BadgeMetadataTimeline_1_list{list: &list})
	case "badges.v0.BadgeMetadataTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_BadgeMetadataTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.BadgeMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.BadgeMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BadgeMetadataTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.BadgeMetadataTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BadgeMetadataTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeMetadataTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BadgeMetadataTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BadgeMetadataTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BadgeMetadataTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.BadgeMetadata) > 0 {
			for _, e := range x.BadgeMetadata {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BadgeMetadataTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.BadgeMetadata) > 0 {
			for iNdEx := len(x.BadgeMetadata) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadata[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BadgeMetadataTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BadgeMetadataTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BadgeMetadataTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadata = append(x.BadgeMetadata, &BadgeMetadata{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadata[len(x.BadgeMetadata)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_OffChainBalancesMetadataTimeline_2_list)(nil)

type _OffChainBalancesMetadataTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_OffChainBalancesMetadataTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OffChainBalancesMetadataTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OffChainBalancesMetadataTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_OffChainBalancesMetadataTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OffChainBalancesMetadataTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OffChainBalancesMetadataTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OffChainBalancesMetadataTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OffChainBalancesMetadataTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OffChainBalancesMetadataTimeline                          protoreflect.MessageDescriptor
	fd_OffChainBalancesMetadataTimeline_offChainBalancesMetadata protoreflect.FieldDescriptor
	fd_OffChainBalancesMetadataTimeline_timelineTimes            protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_OffChainBalancesMetadataTimeline = File_badges_v0_timelines_proto.Messages().ByName("OffChainBalancesMetadataTimeline")
	fd_OffChainBalancesMetadataTimeline_offChainBalancesMetadata = md_OffChainBalancesMetadataTimeline.Fields().ByName("offChainBalancesMetadata")
	fd_OffChainBalancesMetadataTimeline_timelineTimes = md_OffChainBalancesMetadataTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_OffChainBalancesMetadataTimeline)(nil)

type fastReflection_OffChainBalancesMetadataTimeline OffChainBalancesMetadataTimeline

func (x *OffChainBalancesMetadataTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OffChainBalancesMetadataTimeline)(x)
}

func (x *OffChainBalancesMetadataTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OffChainBalancesMetadataTimeline_messageType fastReflection_OffChainBalancesMetadataTimeline_messageType
var _ protoreflect.MessageType = fastReflection_OffChainBalancesMetadataTimeline_messageType{}

type fastReflection_OffChainBalancesMetadataTimeline_messageType struct{}

func (x fastReflection_OffChainBalancesMetadataTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OffChainBalancesMetadataTimeline)(nil)
}
func (x fastReflection_OffChainBalancesMetadataTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_OffChainBalancesMetadataTimeline)
}
func (x fastReflection_OffChainBalancesMetadataTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OffChainBalancesMetadataTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_OffChainBalancesMetadataTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Type() protoreflect.MessageType {
	return _fastReflection_OffChainBalancesMetadataTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OffChainBalancesMetadataTimeline) New() protoreflect.Message {
	return new(fastReflection_OffChainBalancesMetadataTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Interface() protoreflect.ProtoMessage {
	return (*OffChainBalancesMetadataTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OffChainBalancesMetadata != nil {
		value := protoreflect.ValueOfMessage(x.OffChainBalancesMetadata.ProtoReflect())
		if !f(fd_OffChainBalancesMetadataTimeline_offChainBalancesMetadata, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_OffChainBalancesMetadataTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_OffChainBalancesMetadataTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		return x.OffChainBalancesMetadata != nil
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		x.OffChainBalancesMetadata = nil
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		value := x.OffChainBalancesMetadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_OffChainBalancesMetadataTimeline_2_list{})
		}
		listValue := &_OffChainBalancesMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		x.OffChainBalancesMetadata = value.Message().Interface().(*OffChainBalancesMetadata)
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_OffChainBalancesMetadataTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OffChainBalancesMetadataTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		if x.OffChainBalancesMetadata == nil {
			x.OffChainBalancesMetadata = new(OffChainBalancesMetadata)
		}
		return protoreflect.ValueOfMessage(x.OffChainBalancesMetadata.ProtoReflect())
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_OffChainBalancesMetadataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OffChainBalancesMetadataTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata":
		m := new(OffChainBalancesMetadata)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.v0.OffChainBalancesMetadataTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_OffChainBalancesMetadataTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.OffChainBalancesMetadataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.OffChainBalancesMetadataTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OffChainBalancesMetadataTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.OffChainBalancesMetadataTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OffChainBalancesMetadataTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OffChainBalancesMetadataTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OffChainBalancesMetadataTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OffChainBalancesMetadataTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OffChainBalancesMetadataTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.OffChainBalancesMetadata != nil {
			l = options.Size(x.OffChainBalancesMetadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OffChainBalancesMetadataTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.OffChainBalancesMetadata != nil {
			encoded, err := options.Marshal(x.OffChainBalancesMetadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OffChainBalancesMetadataTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OffChainBalancesMetadataTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OffChainBalancesMetadataTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OffChainBalancesMetadata == nil {
					x.OffChainBalancesMetadata = &OffChainBalancesMetadata{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CustomDataTimeline_2_list)(nil)

type _CustomDataTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_CustomDataTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CustomDataTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CustomDataTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_CustomDataTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CustomDataTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CustomDataTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CustomDataTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CustomDataTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CustomDataTimeline               protoreflect.MessageDescriptor
	fd_CustomDataTimeline_customData    protoreflect.FieldDescriptor
	fd_CustomDataTimeline_timelineTimes protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_CustomDataTimeline = File_badges_v0_timelines_proto.Messages().ByName("CustomDataTimeline")
	fd_CustomDataTimeline_customData = md_CustomDataTimeline.Fields().ByName("customData")
	fd_CustomDataTimeline_timelineTimes = md_CustomDataTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_CustomDataTimeline)(nil)

type fastReflection_CustomDataTimeline CustomDataTimeline

func (x *CustomDataTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CustomDataTimeline)(x)
}

func (x *CustomDataTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CustomDataTimeline_messageType fastReflection_CustomDataTimeline_messageType
var _ protoreflect.MessageType = fastReflection_CustomDataTimeline_messageType{}

type fastReflection_CustomDataTimeline_messageType struct{}

func (x fastReflection_CustomDataTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CustomDataTimeline)(nil)
}
func (x fastReflection_CustomDataTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_CustomDataTimeline)
}
func (x fastReflection_CustomDataTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CustomDataTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CustomDataTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_CustomDataTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CustomDataTimeline) Type() protoreflect.MessageType {
	return _fastReflection_CustomDataTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CustomDataTimeline) New() protoreflect.Message {
	return new(fastReflection_CustomDataTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CustomDataTimeline) Interface() protoreflect.ProtoMessage {
	return (*CustomDataTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CustomDataTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CustomData != "" {
		value := protoreflect.ValueOfString(x.CustomData)
		if !f(fd_CustomDataTimeline_customData, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_CustomDataTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_CustomDataTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CustomDataTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.CustomDataTimeline.customData":
		return x.CustomData != ""
	case "badges.v0.CustomDataTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CustomDataTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.CustomDataTimeline.customData":
		x.CustomData = ""
	case "badges.v0.CustomDataTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CustomDataTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.CustomDataTimeline.customData":
		value := x.CustomData
		return protoreflect.ValueOfString(value)
	case "badges.v0.CustomDataTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_CustomDataTimeline_2_list{})
		}
		listValue := &_CustomDataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CustomDataTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.CustomDataTimeline.customData":
		x.CustomData = value.Interface().(string)
	case "badges.v0.CustomDataTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_CustomDataTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CustomDataTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CustomDataTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_CustomDataTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	case "badges.v0.CustomDataTimeline.customData":
		panic(fmt.Errorf("field customData of message badges.v0.CustomDataTimeline is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CustomDataTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CustomDataTimeline.customData":
		return protoreflect.ValueOfString("")
	case "badges.v0.CustomDataTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_CustomDataTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CustomDataTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CustomDataTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CustomDataTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.CustomDataTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CustomDataTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CustomDataTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CustomDataTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CustomDataTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CustomDataTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CustomData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CustomDataTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.CustomData) > 0 {
			i -= len(x.CustomData)
			copy(dAtA[i:], x.CustomData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CustomData)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CustomDataTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CustomDataTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CustomDataTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomData", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomData = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ManagerTimeline_2_list)(nil)

type _ManagerTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_ManagerTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ManagerTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ManagerTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_ManagerTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ManagerTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ManagerTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ManagerTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ManagerTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ManagerTimeline               protoreflect.MessageDescriptor
	fd_ManagerTimeline_manager       protoreflect.FieldDescriptor
	fd_ManagerTimeline_timelineTimes protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_ManagerTimeline = File_badges_v0_timelines_proto.Messages().ByName("ManagerTimeline")
	fd_ManagerTimeline_manager = md_ManagerTimeline.Fields().ByName("manager")
	fd_ManagerTimeline_timelineTimes = md_ManagerTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_ManagerTimeline)(nil)

type fastReflection_ManagerTimeline ManagerTimeline

func (x *ManagerTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ManagerTimeline)(x)
}

func (x *ManagerTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ManagerTimeline_messageType fastReflection_ManagerTimeline_messageType
var _ protoreflect.MessageType = fastReflection_ManagerTimeline_messageType{}

type fastReflection_ManagerTimeline_messageType struct{}

func (x fastReflection_ManagerTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ManagerTimeline)(nil)
}
func (x fastReflection_ManagerTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_ManagerTimeline)
}
func (x fastReflection_ManagerTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ManagerTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ManagerTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_ManagerTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ManagerTimeline) Type() protoreflect.MessageType {
	return _fastReflection_ManagerTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ManagerTimeline) New() protoreflect.Message {
	return new(fastReflection_ManagerTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ManagerTimeline) Interface() protoreflect.ProtoMessage {
	return (*ManagerTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ManagerTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Manager != "" {
		value := protoreflect.ValueOfString(x.Manager)
		if !f(fd_ManagerTimeline_manager, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_ManagerTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_ManagerTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ManagerTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.ManagerTimeline.manager":
		return x.Manager != ""
	case "badges.v0.ManagerTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ManagerTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.ManagerTimeline.manager":
		x.Manager = ""
	case "badges.v0.ManagerTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ManagerTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.ManagerTimeline.manager":
		value := x.Manager
		return protoreflect.ValueOfString(value)
	case "badges.v0.ManagerTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_ManagerTimeline_2_list{})
		}
		listValue := &_ManagerTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ManagerTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.ManagerTimeline.manager":
		x.Manager = value.Interface().(string)
	case "badges.v0.ManagerTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_ManagerTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ManagerTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.ManagerTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_ManagerTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	case "badges.v0.ManagerTimeline.manager":
		panic(fmt.Errorf("field manager of message badges.v0.ManagerTimeline is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ManagerTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.ManagerTimeline.manager":
		return protoreflect.ValueOfString("")
	case "badges.v0.ManagerTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_ManagerTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ManagerTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ManagerTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ManagerTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.ManagerTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ManagerTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ManagerTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ManagerTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ManagerTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ManagerTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Manager)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ManagerTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Manager) > 0 {
			i -= len(x.Manager)
			copy(dAtA[i:], x.Manager)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Manager)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ManagerTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ManagerTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ManagerTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Manager", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Manager = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_IsArchivedTimeline_2_list)(nil)

type _IsArchivedTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_IsArchivedTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_IsArchivedTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_IsArchivedTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_IsArchivedTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_IsArchivedTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_IsArchivedTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_IsArchivedTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_IsArchivedTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_IsArchivedTimeline               protoreflect.MessageDescriptor
	fd_IsArchivedTimeline_isArchived    protoreflect.FieldDescriptor
	fd_IsArchivedTimeline_timelineTimes protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_IsArchivedTimeline = File_badges_v0_timelines_proto.Messages().ByName("IsArchivedTimeline")
	fd_IsArchivedTimeline_isArchived = md_IsArchivedTimeline.Fields().ByName("isArchived")
	fd_IsArchivedTimeline_timelineTimes = md_IsArchivedTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_IsArchivedTimeline)(nil)

type fastReflection_IsArchivedTimeline IsArchivedTimeline

func (x *IsArchivedTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsArchivedTimeline)(x)
}

func (x *IsArchivedTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsArchivedTimeline_messageType fastReflection_IsArchivedTimeline_messageType
var _ protoreflect.MessageType = fastReflection_IsArchivedTimeline_messageType{}

type fastReflection_IsArchivedTimeline_messageType struct{}

func (x fastReflection_IsArchivedTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsArchivedTimeline)(nil)
}
func (x fastReflection_IsArchivedTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_IsArchivedTimeline)
}
func (x fastReflection_IsArchivedTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsArchivedTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsArchivedTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_IsArchivedTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsArchivedTimeline) Type() protoreflect.MessageType {
	return _fastReflection_IsArchivedTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsArchivedTimeline) New() protoreflect.Message {
	return new(fastReflection_IsArchivedTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsArchivedTimeline) Interface() protoreflect.ProtoMessage {
	return (*IsArchivedTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsArchivedTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsArchived != false {
		value := protoreflect.ValueOfBool(x.IsArchived)
		if !f(fd_IsArchivedTimeline_isArchived, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_IsArchivedTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_IsArchivedTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsArchivedTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.IsArchivedTimeline.isArchived":
		return x.IsArchived != false
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsArchivedTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.IsArchivedTimeline.isArchived":
		x.IsArchived = false
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsArchivedTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.IsArchivedTimeline.isArchived":
		value := x.IsArchived
		return protoreflect.ValueOfBool(value)
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_IsArchivedTimeline_2_list{})
		}
		listValue := &_IsArchivedTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsArchivedTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.IsArchivedTimeline.isArchived":
		x.IsArchived = value.Bool()
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_IsArchivedTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsArchivedTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_IsArchivedTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	case "badges.v0.IsArchivedTimeline.isArchived":
		panic(fmt.Errorf("field isArchived of message badges.v0.IsArchivedTimeline is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsArchivedTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.IsArchivedTimeline.isArchived":
		return protoreflect.ValueOfBool(false)
	case "badges.v0.IsArchivedTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_IsArchivedTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.IsArchivedTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.IsArchivedTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsArchivedTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.IsArchivedTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsArchivedTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsArchivedTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsArchivedTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsArchivedTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsArchivedTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsArchived {
			n += 2
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsArchivedTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.IsArchived {
			i--
			if x.IsArchived {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsArchivedTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsArchivedTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsArchivedTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchived", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsArchived = bool(v != 0)
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ContractAddressTimeline_2_list)(nil)

type _ContractAddressTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_ContractAddressTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ContractAddressTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ContractAddressTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_ContractAddressTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ContractAddressTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ContractAddressTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ContractAddressTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ContractAddressTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ContractAddressTimeline                 protoreflect.MessageDescriptor
	fd_ContractAddressTimeline_contractAddress protoreflect.FieldDescriptor
	fd_ContractAddressTimeline_timelineTimes   protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_ContractAddressTimeline = File_badges_v0_timelines_proto.Messages().ByName("ContractAddressTimeline")
	fd_ContractAddressTimeline_contractAddress = md_ContractAddressTimeline.Fields().ByName("contractAddress")
	fd_ContractAddressTimeline_timelineTimes = md_ContractAddressTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_ContractAddressTimeline)(nil)

type fastReflection_ContractAddressTimeline ContractAddressTimeline

func (x *ContractAddressTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ContractAddressTimeline)(x)
}

func (x *ContractAddressTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ContractAddressTimeline_messageType fastReflection_ContractAddressTimeline_messageType
var _ protoreflect.MessageType = fastReflection_ContractAddressTimeline_messageType{}

type fastReflection_ContractAddressTimeline_messageType struct{}

func (x fastReflection_ContractAddressTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ContractAddressTimeline)(nil)
}
func (x fastReflection_ContractAddressTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_ContractAddressTimeline)
}
func (x fastReflection_ContractAddressTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ContractAddressTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ContractAddressTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_ContractAddressTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ContractAddressTimeline) Type() protoreflect.MessageType {
	return _fastReflection_ContractAddressTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ContractAddressTimeline) New() protoreflect.Message {
	return new(fastReflection_ContractAddressTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ContractAddressTimeline) Interface() protoreflect.ProtoMessage {
	return (*ContractAddressTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ContractAddressTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ContractAddress != "" {
		value := protoreflect.ValueOfString(x.ContractAddress)
		if !f(fd_ContractAddressTimeline_contractAddress, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_ContractAddressTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_ContractAddressTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ContractAddressTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.ContractAddressTimeline.contractAddress":
		return x.ContractAddress != ""
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ContractAddressTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.ContractAddressTimeline.contractAddress":
		x.ContractAddress = ""
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ContractAddressTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.ContractAddressTimeline.contractAddress":
		value := x.ContractAddress
		return protoreflect.ValueOfString(value)
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_ContractAddressTimeline_2_list{})
		}
		listValue := &_ContractAddressTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ContractAddressTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.ContractAddressTimeline.contractAddress":
		x.ContractAddress = value.Interface().(string)
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_ContractAddressTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ContractAddressTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_ContractAddressTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	case "badges.v0.ContractAddressTimeline.contractAddress":
		panic(fmt.Errorf("field contractAddress of message badges.v0.ContractAddressTimeline is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ContractAddressTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.ContractAddressTimeline.contractAddress":
		return protoreflect.ValueOfString("")
	case "badges.v0.ContractAddressTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_ContractAddressTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.ContractAddressTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.ContractAddressTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ContractAddressTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.ContractAddressTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ContractAddressTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ContractAddressTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ContractAddressTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ContractAddressTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ContractAddressTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ContractAddressTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.ContractAddress) > 0 {
			i -= len(x.ContractAddress)
			copy(dAtA[i:], x.ContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ContractAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ContractAddressTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ContractAddressTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ContractAddressTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_StandardsTimeline_1_list)(nil)

type _StandardsTimeline_1_list struct {
	list *[]string
}

func (x *_StandardsTimeline_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_StandardsTimeline_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_StandardsTimeline_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_StandardsTimeline_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_StandardsTimeline_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message StandardsTimeline at list field Standards as it is not of Message kind"))
}

func (x *_StandardsTimeline_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_StandardsTimeline_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_StandardsTimeline_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_StandardsTimeline_2_list)(nil)

type _StandardsTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_StandardsTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_StandardsTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_StandardsTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_StandardsTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_StandardsTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_StandardsTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_StandardsTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_StandardsTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_StandardsTimeline               protoreflect.MessageDescriptor
	fd_StandardsTimeline_standards     protoreflect.FieldDescriptor
	fd_StandardsTimeline_timelineTimes protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_timelines_proto_init()
	md_StandardsTimeline = File_badges_v0_timelines_proto.Messages().ByName("StandardsTimeline")
	fd_StandardsTimeline_standards = md_StandardsTimeline.Fields().ByName("standards")
	fd_StandardsTimeline_timelineTimes = md_StandardsTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_StandardsTimeline)(nil)

type fastReflection_StandardsTimeline StandardsTimeline

func (x *StandardsTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_StandardsTimeline)(x)
}

func (x *StandardsTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_timelines_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_StandardsTimeline_messageType fastReflection_StandardsTimeline_messageType
var _ protoreflect.MessageType = fastReflection_StandardsTimeline_messageType{}

type fastReflection_StandardsTimeline_messageType struct{}

func (x fastReflection_StandardsTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_StandardsTimeline)(nil)
}
func (x fastReflection_StandardsTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_StandardsTimeline)
}
func (x fastReflection_StandardsTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_StandardsTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_StandardsTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_StandardsTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_StandardsTimeline) Type() protoreflect.MessageType {
	return _fastReflection_StandardsTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_StandardsTimeline) New() protoreflect.Message {
	return new(fastReflection_StandardsTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_StandardsTimeline) Interface() protoreflect.ProtoMessage {
	return (*StandardsTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_StandardsTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Standards) != 0 {
		value := protoreflect.ValueOfList(&_StandardsTimeline_1_list{list: &x.Standards})
		if !f(fd_StandardsTimeline_standards, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_StandardsTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_StandardsTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_StandardsTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		return len(x.Standards) != 0
	case "badges.v0.StandardsTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StandardsTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		x.Standards = nil
	case "badges.v0.StandardsTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_StandardsTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		if len(x.Standards) == 0 {
			return protoreflect.ValueOfList(&_StandardsTimeline_1_list{})
		}
		listValue := &_StandardsTimeline_1_list{list: &x.Standards}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.StandardsTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_StandardsTimeline_2_list{})
		}
		listValue := &_StandardsTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StandardsTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		lv := value.List()
		clv := lv.(*_StandardsTimeline_1_list)
		x.Standards = *clv.list
	case "badges.v0.StandardsTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_StandardsTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StandardsTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		if x.Standards == nil {
			x.Standards = []string{}
		}
		value := &_StandardsTimeline_1_list{list: &x.Standards}
		return protoreflect.ValueOfList(value)
	case "badges.v0.StandardsTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_StandardsTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_StandardsTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.StandardsTimeline.standards":
		list := []string{}
		return protoreflect.ValueOfList(&_StandardsTimeline_1_list{list: &list})
	case "badges.v0.StandardsTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_StandardsTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.StandardsTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.StandardsTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_StandardsTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.StandardsTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_StandardsTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StandardsTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_StandardsTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_StandardsTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*StandardsTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Standards) > 0 {
			for _, s := range x.Standards {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*StandardsTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Standards) > 0 {
			for iNdEx := len(x.Standards) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Standards[iNdEx])
				copy(dAtA[i:], x.Standards[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Standards[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*StandardsTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StandardsTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StandardsTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Standards", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Standards = append(x.Standards, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: badges/v0/timelines.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CollectionMetadataTimeline defines the metadata for a collection at different timeline times.
type CollectionMetadataTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The collection metadata for a specific timeline element.
	CollectionMetadata *CollectionMetadata `protobuf:"bytes,1,opt,name=collectionMetadata,proto3" json:"collectionMetadata,omitempty"`
	// The timeline times when the collection metadata is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *CollectionMetadataTimeline) Reset() {
	*x = CollectionMetadataTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionMetadataTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionMetadataTimeline) ProtoMessage() {}

// Deprecated: Use CollectionMetadataTimeline.ProtoReflect.Descriptor instead.
func (*CollectionMetadataTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{0}
}

func (x *CollectionMetadataTimeline) GetCollectionMetadata() *CollectionMetadata {
	if x != nil {
		return x.CollectionMetadata
	}
	return nil
}

func (x *CollectionMetadataTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// BadgeMetadataTimeline defines the metadata for badges at different timeline times.
type BadgeMetadataTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The badge metadata for a specific timeline element.
	BadgeMetadata []*BadgeMetadata `protobuf:"bytes,1,rep,name=badgeMetadata,proto3" json:"badgeMetadata,omitempty"`
	// The timeline times when the badge metadata is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *BadgeMetadataTimeline) Reset() {
	*x = BadgeMetadataTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeMetadataTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeMetadataTimeline) ProtoMessage() {}

// Deprecated: Use BadgeMetadataTimeline.ProtoReflect.Descriptor instead.
func (*BadgeMetadataTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{1}
}

func (x *BadgeMetadataTimeline) GetBadgeMetadata() []*BadgeMetadata {
	if x != nil {
		return x.BadgeMetadata
	}
	return nil
}

func (x *BadgeMetadataTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// OffChainBalancesMetadataTimeline defines the metadata for off-chain balances at different timeline times.
type OffChainBalancesMetadataTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The off-chain balances metadata for a specific timeline element.
	OffChainBalancesMetadata *OffChainBalancesMetadata `protobuf:"bytes,1,opt,name=offChainBalancesMetadata,proto3" json:"offChainBalancesMetadata,omitempty"`
	// The timeline times when the off-chain balances metadata is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *OffChainBalancesMetadataTimeline) Reset() {
	*x = OffChainBalancesMetadataTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffChainBalancesMetadataTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffChainBalancesMetadataTimeline) ProtoMessage() {}

// Deprecated: Use OffChainBalancesMetadataTimeline.ProtoReflect.Descriptor instead.
func (*OffChainBalancesMetadataTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{2}
}

func (x *OffChainBalancesMetadataTimeline) GetOffChainBalancesMetadata() *OffChainBalancesMetadata {
	if x != nil {
		return x.OffChainBalancesMetadata
	}
	return nil
}

func (x *OffChainBalancesMetadataTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// CustomDataTimeline defines custom data at different timeline times.
type CustomDataTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The custom data for a specific timeline element.
	CustomData string `protobuf:"bytes,1,opt,name=customData,proto3" json:"customData,omitempty"`
	// The timeline times when the custom data is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *CustomDataTimeline) Reset() {
	*x = CustomDataTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDataTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDataTimeline) ProtoMessage() {}

// Deprecated: Use CustomDataTimeline.ProtoReflect.Descriptor instead.
func (*CustomDataTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{3}
}

func (x *CustomDataTimeline) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *CustomDataTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// ManagerTimeline defines the manager address at different timeline times.
type ManagerTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The manager address for a specific timeline element.
	Manager string `protobuf:"bytes,1,opt,name=manager,proto3" json:"manager,omitempty"`
	// The timeline times when the manager address is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *ManagerTimeline) Reset() {
	*x = ManagerTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerTimeline) ProtoMessage() {}

// Deprecated: Use ManagerTimeline.ProtoReflect.Descriptor instead.
func (*ManagerTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{4}
}

func (x *ManagerTimeline) GetManager() string {
	if x != nil {
		return x.Manager
	}
	return ""
}

func (x *ManagerTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// IsArchivedTimeline defines whether a collection is archived at different timeline times.
type IsArchivedTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates whether the collection is archived for a specific timeline element.
	IsArchived bool `protobuf:"varint,1,opt,name=isArchived,proto3" json:"isArchived,omitempty"`
	// The timeline times when the archived status is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *IsArchivedTimeline) Reset() {
	*x = IsArchivedTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsArchivedTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsArchivedTimeline) ProtoMessage() {}

// Deprecated: Use IsArchivedTimeline.ProtoReflect.Descriptor instead.
func (*IsArchivedTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{5}
}

func (x *IsArchivedTimeline) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *IsArchivedTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// ContractAddressTimeline defines the contract address at different timeline times.
type ContractAddressTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The contract address for a specific timeline element.
	ContractAddress string `protobuf:"bytes,1,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	// The timeline times when the contract address is valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *ContractAddressTimeline) Reset() {
	*x = ContractAddressTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractAddressTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractAddressTimeline) ProtoMessage() {}

// Deprecated: Use ContractAddressTimeline.ProtoReflect.Descriptor instead.
func (*ContractAddressTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{6}
}

func (x *ContractAddressTimeline) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ContractAddressTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

// StandardsTimeline defines the standards used for a collection at different timeline times.
type StandardsTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The standards applied to the collection for a specific timeline element.
	Standards []string `protobuf:"bytes,1,rep,name=standards,proto3" json:"standards,omitempty"`
	// The timeline times when the standards are valid. Can not overlap with other timeline elements in same array.
	TimelineTimes []*UintRange `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *StandardsTimeline) Reset() {
	*x = StandardsTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_timelines_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardsTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardsTimeline) ProtoMessage() {}

// Deprecated: Use StandardsTimeline.ProtoReflect.Descriptor instead.
func (*StandardsTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_timelines_proto_rawDescGZIP(), []int{7}
}

func (x *StandardsTimeline) GetStandards() []string {
	if x != nil {
		return x.Standards
	}
	return nil
}

func (x *StandardsTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

var File_badges_v0_timelines_proto protoreflect.FileDescriptor

var file_badges_v0_timelines_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76,
	0x30, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x12, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x93, 0x01,
	0x0a, 0x15, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x20, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x5f, 0x0a, 0x18, 0x6f, 0x66, 0x66, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x18, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x0f, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x22, 0x70, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x7f, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x42, 0x82, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x76, 0x30, 0x42, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1c, 0x62, 0x69, 0x74, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2f, 0x76, 0x30, 0xa2, 0x02, 0x03, 0x42, 0x56, 0x58, 0xaa, 0x02, 0x09, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x56, 0x30, 0xca, 0x02, 0x09, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x5c,
	0x56, 0x30, 0xe2, 0x02, 0x15, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x5c, 0x56, 0x30, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badges_v0_timelines_proto_rawDescOnce sync.Once
	file_badges_v0_timelines_proto_rawDescData = file_badges_v0_timelines_proto_rawDesc
)

func file_badges_v0_timelines_proto_rawDescGZIP() []byte {
	file_badges_v0_timelines_proto_rawDescOnce.Do(func() {
		file_badges_v0_timelines_proto_rawDescData = protoimpl.X.CompressGZIP(file_badges_v0_timelines_proto_rawDescData)
	})
	return file_badges_v0_timelines_proto_rawDescData
}

var file_badges_v0_timelines_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_badges_v0_timelines_proto_goTypes = []interface{}{
	(*CollectionMetadataTimeline)(nil),       // 0: badges.v0.CollectionMetadataTimeline
	(*BadgeMetadataTimeline)(nil),            // 1: badges.v0.BadgeMetadataTimeline
	(*OffChainBalancesMetadataTimeline)(nil), // 2: badges.v0.OffChainBalancesMetadataTimeline
	(*CustomDataTimeline)(nil),               // 3: badges.v0.CustomDataTimeline
	(*ManagerTimeline)(nil),                  // 4: badges.v0.ManagerTimeline
	(*IsArchivedTimeline)(nil),               // 5: badges.v0.IsArchivedTimeline
	(*ContractAddressTimeline)(nil),          // 6: badges.v0.ContractAddressTimeline
	(*StandardsTimeline)(nil),                // 7: badges.v0.StandardsTimeline
	(*CollectionMetadata)(nil),               // 8: badges.v0.CollectionMetadata
	(*UintRange)(nil),                        // 9: badges.v0.UintRange
	(*BadgeMetadata)(nil),                    // 10: badges.v0.BadgeMetadata
	(*OffChainBalancesMetadata)(nil),         // 11: badges.v0.OffChainBalancesMetadata
}
var file_badges_v0_timelines_proto_depIdxs = []int32{
	8,  // 0: badges.v0.CollectionMetadataTimeline.collectionMetadata:type_name -> badges.v0.CollectionMetadata
	9,  // 1: badges.v0.CollectionMetadataTimeline.timelineTimes:type_name -> badges.v0.UintRange
	10, // 2: badges.v0.BadgeMetadataTimeline.badgeMetadata:type_name -> badges.v0.BadgeMetadata
	9,  // 3: badges.v0.BadgeMetadataTimeline.timelineTimes:type_name -> badges.v0.UintRange
	11, // 4: badges.v0.OffChainBalancesMetadataTimeline.offChainBalancesMetadata:type_name -> badges.v0.OffChainBalancesMetadata
	9,  // 5: badges.v0.OffChainBalancesMetadataTimeline.timelineTimes:type_name -> badges.v0.UintRange
	9,  // 6: badges.v0.CustomDataTimeline.timelineTimes:type_name -> badges.v0.UintRange
	9,  // 7: badges.v0.ManagerTimeline.timelineTimes:type_name -> badges.v0.UintRange
	9,  // 8: badges.v0.IsArchivedTimeline.timelineTimes:type_name -> badges.v0.UintRange
	9,  // 9: badges.v0.ContractAddressTimeline.timelineTimes:type_name -> badges.v0.UintRange
	9,  // 10: badges.v0.StandardsTimeline.timelineTimes:type_name -> badges.v0.UintRange
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_badges_v0_timelines_proto_init() }
func file_badges_v0_timelines_proto_init() {
	if File_badges_v0_timelines_proto != nil {
		return
	}
	file_badges_v0_transfers_proto_init()
	file_badges_v0_balances_proto_init()
	file_badges_v0_permissions_proto_init()
	file_badges_v0_metadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_badges_v0_timelines_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionMetadataTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeMetadataTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffChainBalancesMetadataTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDataTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsArchivedTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractAddressTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_timelines_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardsTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badges_v0_timelines_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_badges_v0_timelines_proto_goTypes,
		DependencyIndexes: file_badges_v0_timelines_proto_depIdxs,
		MessageInfos:      file_badges_v0_timelines_proto_msgTypes,
	}.Build()
	File_badges_v0_timelines_proto = out.File
	file_badges_v0_timelines_proto_rawDesc = nil
	file_badges_v0_timelines_proto_goTypes = nil
	file_badges_v0_timelines_proto_depIdxs = nil
}
