// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package v0

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_UserOutgoingApprovalTimeline_1_list)(nil)

type _UserOutgoingApprovalTimeline_1_list struct {
	list *[]*UserOutgoingApproval
}

func (x *_UserOutgoingApprovalTimeline_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOutgoingApprovalTimeline_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_UserOutgoingApprovalTimeline_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOutgoingApprovalTimeline_1_list) AppendMutable() protoreflect.Value {
	v := new(UserOutgoingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOutgoingApprovalTimeline_1_list) NewElement() protoreflect.Value {
	v := new(UserOutgoingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_UserOutgoingApprovalTimeline_2_list)(nil)

type _UserOutgoingApprovalTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_UserOutgoingApprovalTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOutgoingApprovalTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_UserOutgoingApprovalTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOutgoingApprovalTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOutgoingApprovalTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOutgoingApprovalTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UserOutgoingApprovalTimeline                   protoreflect.MessageDescriptor
	fd_UserOutgoingApprovalTimeline_outgoingApprovals protoreflect.FieldDescriptor
	fd_UserOutgoingApprovalTimeline_timelineTimes     protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_UserOutgoingApprovalTimeline = File_badges_v0_legacytx_proto.Messages().ByName("UserOutgoingApprovalTimeline")
	fd_UserOutgoingApprovalTimeline_outgoingApprovals = md_UserOutgoingApprovalTimeline.Fields().ByName("outgoingApprovals")
	fd_UserOutgoingApprovalTimeline_timelineTimes = md_UserOutgoingApprovalTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_UserOutgoingApprovalTimeline)(nil)

type fastReflection_UserOutgoingApprovalTimeline UserOutgoingApprovalTimeline

func (x *UserOutgoingApprovalTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UserOutgoingApprovalTimeline)(x)
}

func (x *UserOutgoingApprovalTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UserOutgoingApprovalTimeline_messageType fastReflection_UserOutgoingApprovalTimeline_messageType
var _ protoreflect.MessageType = fastReflection_UserOutgoingApprovalTimeline_messageType{}

type fastReflection_UserOutgoingApprovalTimeline_messageType struct{}

func (x fastReflection_UserOutgoingApprovalTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UserOutgoingApprovalTimeline)(nil)
}
func (x fastReflection_UserOutgoingApprovalTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_UserOutgoingApprovalTimeline)
}
func (x fastReflection_UserOutgoingApprovalTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOutgoingApprovalTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UserOutgoingApprovalTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOutgoingApprovalTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UserOutgoingApprovalTimeline) Type() protoreflect.MessageType {
	return _fastReflection_UserOutgoingApprovalTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UserOutgoingApprovalTimeline) New() protoreflect.Message {
	return new(fastReflection_UserOutgoingApprovalTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UserOutgoingApprovalTimeline) Interface() protoreflect.ProtoMessage {
	return (*UserOutgoingApprovalTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UserOutgoingApprovalTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.OutgoingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_1_list{list: &x.OutgoingApprovals})
		if !f(fd_UserOutgoingApprovalTimeline_outgoingApprovals, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_UserOutgoingApprovalTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UserOutgoingApprovalTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		return len(x.OutgoingApprovals) != 0
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOutgoingApprovalTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		x.OutgoingApprovals = nil
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UserOutgoingApprovalTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		if len(x.OutgoingApprovals) == 0 {
			return protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_1_list{})
		}
		listValue := &_UserOutgoingApprovalTimeline_1_list{list: &x.OutgoingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_2_list{})
		}
		listValue := &_UserOutgoingApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOutgoingApprovalTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		lv := value.List()
		clv := lv.(*_UserOutgoingApprovalTimeline_1_list)
		x.OutgoingApprovals = *clv.list
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_UserOutgoingApprovalTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOutgoingApprovalTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		if x.OutgoingApprovals == nil {
			x.OutgoingApprovals = []*UserOutgoingApproval{}
		}
		value := &_UserOutgoingApprovalTimeline_1_list{list: &x.OutgoingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_UserOutgoingApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UserOutgoingApprovalTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals":
		list := []*UserOutgoingApproval{}
		return protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_1_list{list: &list})
	case "badges.v0.UserOutgoingApprovalTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_UserOutgoingApprovalTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserOutgoingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserOutgoingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UserOutgoingApprovalTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.UserOutgoingApprovalTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UserOutgoingApprovalTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOutgoingApprovalTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UserOutgoingApprovalTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UserOutgoingApprovalTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UserOutgoingApprovalTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.OutgoingApprovals) > 0 {
			for _, e := range x.OutgoingApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UserOutgoingApprovalTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.OutgoingApprovals) > 0 {
			for iNdEx := len(x.OutgoingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutgoingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UserOutgoingApprovalTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOutgoingApprovalTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOutgoingApprovalTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutgoingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutgoingApprovals = append(x.OutgoingApprovals, &UserOutgoingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutgoingApprovals[len(x.OutgoingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UserIncomingApprovalTimeline_1_list)(nil)

type _UserIncomingApprovalTimeline_1_list struct {
	list *[]*UserIncomingApproval
}

func (x *_UserIncomingApprovalTimeline_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserIncomingApprovalTimeline_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_UserIncomingApprovalTimeline_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserIncomingApprovalTimeline_1_list) AppendMutable() protoreflect.Value {
	v := new(UserIncomingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserIncomingApprovalTimeline_1_list) NewElement() protoreflect.Value {
	v := new(UserIncomingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_UserIncomingApprovalTimeline_2_list)(nil)

type _UserIncomingApprovalTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_UserIncomingApprovalTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserIncomingApprovalTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_UserIncomingApprovalTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserIncomingApprovalTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserIncomingApprovalTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserIncomingApprovalTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UserIncomingApprovalTimeline                   protoreflect.MessageDescriptor
	fd_UserIncomingApprovalTimeline_incomingApprovals protoreflect.FieldDescriptor
	fd_UserIncomingApprovalTimeline_timelineTimes     protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_UserIncomingApprovalTimeline = File_badges_v0_legacytx_proto.Messages().ByName("UserIncomingApprovalTimeline")
	fd_UserIncomingApprovalTimeline_incomingApprovals = md_UserIncomingApprovalTimeline.Fields().ByName("incomingApprovals")
	fd_UserIncomingApprovalTimeline_timelineTimes = md_UserIncomingApprovalTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_UserIncomingApprovalTimeline)(nil)

type fastReflection_UserIncomingApprovalTimeline UserIncomingApprovalTimeline

func (x *UserIncomingApprovalTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UserIncomingApprovalTimeline)(x)
}

func (x *UserIncomingApprovalTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UserIncomingApprovalTimeline_messageType fastReflection_UserIncomingApprovalTimeline_messageType
var _ protoreflect.MessageType = fastReflection_UserIncomingApprovalTimeline_messageType{}

type fastReflection_UserIncomingApprovalTimeline_messageType struct{}

func (x fastReflection_UserIncomingApprovalTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UserIncomingApprovalTimeline)(nil)
}
func (x fastReflection_UserIncomingApprovalTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_UserIncomingApprovalTimeline)
}
func (x fastReflection_UserIncomingApprovalTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UserIncomingApprovalTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UserIncomingApprovalTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_UserIncomingApprovalTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UserIncomingApprovalTimeline) Type() protoreflect.MessageType {
	return _fastReflection_UserIncomingApprovalTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UserIncomingApprovalTimeline) New() protoreflect.Message {
	return new(fastReflection_UserIncomingApprovalTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UserIncomingApprovalTimeline) Interface() protoreflect.ProtoMessage {
	return (*UserIncomingApprovalTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UserIncomingApprovalTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.IncomingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_1_list{list: &x.IncomingApprovals})
		if !f(fd_UserIncomingApprovalTimeline_incomingApprovals, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_UserIncomingApprovalTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UserIncomingApprovalTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		return len(x.IncomingApprovals) != 0
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserIncomingApprovalTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		x.IncomingApprovals = nil
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UserIncomingApprovalTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		if len(x.IncomingApprovals) == 0 {
			return protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_1_list{})
		}
		listValue := &_UserIncomingApprovalTimeline_1_list{list: &x.IncomingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_2_list{})
		}
		listValue := &_UserIncomingApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserIncomingApprovalTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		lv := value.List()
		clv := lv.(*_UserIncomingApprovalTimeline_1_list)
		x.IncomingApprovals = *clv.list
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_UserIncomingApprovalTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserIncomingApprovalTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		if x.IncomingApprovals == nil {
			x.IncomingApprovals = []*UserIncomingApproval{}
		}
		value := &_UserIncomingApprovalTimeline_1_list{list: &x.IncomingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_UserIncomingApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UserIncomingApprovalTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.UserIncomingApprovalTimeline.incomingApprovals":
		list := []*UserIncomingApproval{}
		return protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_1_list{list: &list})
	case "badges.v0.UserIncomingApprovalTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_UserIncomingApprovalTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.UserIncomingApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.UserIncomingApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UserIncomingApprovalTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.UserIncomingApprovalTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UserIncomingApprovalTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserIncomingApprovalTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UserIncomingApprovalTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UserIncomingApprovalTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UserIncomingApprovalTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.IncomingApprovals) > 0 {
			for _, e := range x.IncomingApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UserIncomingApprovalTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.IncomingApprovals) > 0 {
			for iNdEx := len(x.IncomingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IncomingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UserIncomingApprovalTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserIncomingApprovalTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserIncomingApprovalTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IncomingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IncomingApprovals = append(x.IncomingApprovals, &UserIncomingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IncomingApprovals[len(x.IncomingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CollectionApprovalTimeline_1_list)(nil)

type _CollectionApprovalTimeline_1_list struct {
	list *[]*CollectionApproval
}

func (x *_CollectionApprovalTimeline_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CollectionApprovalTimeline_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CollectionApprovalTimeline_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_CollectionApprovalTimeline_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CollectionApprovalTimeline_1_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionApprovalTimeline_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CollectionApprovalTimeline_1_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionApprovalTimeline_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_CollectionApprovalTimeline_2_list)(nil)

type _CollectionApprovalTimeline_2_list struct {
	list *[]*UintRange
}

func (x *_CollectionApprovalTimeline_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CollectionApprovalTimeline_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CollectionApprovalTimeline_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_CollectionApprovalTimeline_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CollectionApprovalTimeline_2_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionApprovalTimeline_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CollectionApprovalTimeline_2_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CollectionApprovalTimeline_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CollectionApprovalTimeline                     protoreflect.MessageDescriptor
	fd_CollectionApprovalTimeline_collectionApprovals protoreflect.FieldDescriptor
	fd_CollectionApprovalTimeline_timelineTimes       protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_CollectionApprovalTimeline = File_badges_v0_legacytx_proto.Messages().ByName("CollectionApprovalTimeline")
	fd_CollectionApprovalTimeline_collectionApprovals = md_CollectionApprovalTimeline.Fields().ByName("collectionApprovals")
	fd_CollectionApprovalTimeline_timelineTimes = md_CollectionApprovalTimeline.Fields().ByName("timelineTimes")
}

var _ protoreflect.Message = (*fastReflection_CollectionApprovalTimeline)(nil)

type fastReflection_CollectionApprovalTimeline CollectionApprovalTimeline

func (x *CollectionApprovalTimeline) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CollectionApprovalTimeline)(x)
}

func (x *CollectionApprovalTimeline) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CollectionApprovalTimeline_messageType fastReflection_CollectionApprovalTimeline_messageType
var _ protoreflect.MessageType = fastReflection_CollectionApprovalTimeline_messageType{}

type fastReflection_CollectionApprovalTimeline_messageType struct{}

func (x fastReflection_CollectionApprovalTimeline_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CollectionApprovalTimeline)(nil)
}
func (x fastReflection_CollectionApprovalTimeline_messageType) New() protoreflect.Message {
	return new(fastReflection_CollectionApprovalTimeline)
}
func (x fastReflection_CollectionApprovalTimeline_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CollectionApprovalTimeline
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CollectionApprovalTimeline) Descriptor() protoreflect.MessageDescriptor {
	return md_CollectionApprovalTimeline
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CollectionApprovalTimeline) Type() protoreflect.MessageType {
	return _fastReflection_CollectionApprovalTimeline_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CollectionApprovalTimeline) New() protoreflect.Message {
	return new(fastReflection_CollectionApprovalTimeline)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CollectionApprovalTimeline) Interface() protoreflect.ProtoMessage {
	return (*CollectionApprovalTimeline)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CollectionApprovalTimeline) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_CollectionApprovalTimeline_1_list{list: &x.CollectionApprovals})
		if !f(fd_CollectionApprovalTimeline_collectionApprovals, value) {
			return
		}
	}
	if len(x.TimelineTimes) != 0 {
		value := protoreflect.ValueOfList(&_CollectionApprovalTimeline_2_list{list: &x.TimelineTimes})
		if !f(fd_CollectionApprovalTimeline_timelineTimes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CollectionApprovalTimeline) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		return len(x.TimelineTimes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionApprovalTimeline) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		x.TimelineTimes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CollectionApprovalTimeline) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_CollectionApprovalTimeline_1_list{})
		}
		listValue := &_CollectionApprovalTimeline_1_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		if len(x.TimelineTimes) == 0 {
			return protoreflect.ValueOfList(&_CollectionApprovalTimeline_2_list{})
		}
		listValue := &_CollectionApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionApprovalTimeline) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		lv := value.List()
		clv := lv.(*_CollectionApprovalTimeline_1_list)
		x.CollectionApprovals = *clv.list
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		lv := value.List()
		clv := lv.(*_CollectionApprovalTimeline_2_list)
		x.TimelineTimes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionApprovalTimeline) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_CollectionApprovalTimeline_1_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		if x.TimelineTimes == nil {
			x.TimelineTimes = []*UintRange{}
		}
		value := &_CollectionApprovalTimeline_2_list{list: &x.TimelineTimes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CollectionApprovalTimeline) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.CollectionApprovalTimeline.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_CollectionApprovalTimeline_1_list{list: &list})
	case "badges.v0.CollectionApprovalTimeline.timelineTimes":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_CollectionApprovalTimeline_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.CollectionApprovalTimeline"))
		}
		panic(fmt.Errorf("message badges.v0.CollectionApprovalTimeline does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CollectionApprovalTimeline) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.CollectionApprovalTimeline", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CollectionApprovalTimeline) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CollectionApprovalTimeline) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CollectionApprovalTimeline) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CollectionApprovalTimeline) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CollectionApprovalTimeline)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TimelineTimes) > 0 {
			for _, e := range x.TimelineTimes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CollectionApprovalTimeline)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TimelineTimes) > 0 {
			for iNdEx := len(x.TimelineTimes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TimelineTimes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CollectionApprovalTimeline)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CollectionApprovalTimeline: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CollectionApprovalTimeline: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimelineTimes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TimelineTimes = append(x.TimelineTimes, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimelineTimes[len(x.TimelineTimes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNewCollection_2_list)(nil)

type _MsgNewCollection_2_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgNewCollection_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_2_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_2_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_3_list)(nil)

type _MsgNewCollection_3_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgNewCollection_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_3_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_3_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_4_list)(nil)

type _MsgNewCollection_4_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgNewCollection_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_4_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_4_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_5_list)(nil)

type _MsgNewCollection_5_list struct {
	list *[]*CustomDataTimeline
}

func (x *_MsgNewCollection_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_5_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_5_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_8_list)(nil)

type _MsgNewCollection_8_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgNewCollection_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_8_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_8_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_10_list)(nil)

type _MsgNewCollection_10_list struct {
	list *[]*StandardsTimeline
}

func (x *_MsgNewCollection_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_10_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_10_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_11_list)(nil)

type _MsgNewCollection_11_list struct {
	list *[]*Balance
}

func (x *_MsgNewCollection_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_11_list) AppendMutable() protoreflect.Value {
	v := new(Balance)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_11_list) NewElement() protoreflect.Value {
	v := new(Balance)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_12_list)(nil)

type _MsgNewCollection_12_list struct {
	list *[]*Transfer
}

func (x *_MsgNewCollection_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_12_list) AppendMutable() protoreflect.Value {
	v := new(Transfer)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_12_list) NewElement() protoreflect.Value {
	v := new(Transfer)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_13_list)(nil)

type _MsgNewCollection_13_list struct {
	list *[]*ContractAddressTimeline
}

func (x *_MsgNewCollection_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ContractAddressTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ContractAddressTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_13_list) AppendMutable() protoreflect.Value {
	v := new(ContractAddressTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_13_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_13_list) NewElement() protoreflect.Value {
	v := new(ContractAddressTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_13_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_14_list)(nil)

type _MsgNewCollection_14_list struct {
	list *[]*AddressList
}

func (x *_MsgNewCollection_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_14_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_14_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_14_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_15_list)(nil)

type _MsgNewCollection_15_list struct {
	list *[]*UserOutgoingApproval
}

func (x *_MsgNewCollection_15_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_15_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_15_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_15_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_15_list) AppendMutable() protoreflect.Value {
	v := new(UserOutgoingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_15_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_15_list) NewElement() protoreflect.Value {
	v := new(UserOutgoingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_15_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_16_list)(nil)

type _MsgNewCollection_16_list struct {
	list *[]*UserIncomingApproval
}

func (x *_MsgNewCollection_16_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_16_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_16_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_16_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_16_list) AppendMutable() protoreflect.Value {
	v := new(UserIncomingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_16_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_16_list) NewElement() protoreflect.Value {
	v := new(UserIncomingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_16_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgNewCollection_18_list)(nil)

type _MsgNewCollection_18_list struct {
	list *[]*Balance
}

func (x *_MsgNewCollection_18_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewCollection_18_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgNewCollection_18_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewCollection_18_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewCollection_18_list) AppendMutable() protoreflect.Value {
	v := new(Balance)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_18_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewCollection_18_list) NewElement() protoreflect.Value {
	v := new(Balance)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgNewCollection_18_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNewCollection                                  protoreflect.MessageDescriptor
	fd_MsgNewCollection_creator                          protoreflect.FieldDescriptor
	fd_MsgNewCollection_collectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgNewCollection_badgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgNewCollection_offChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgNewCollection_customDataTimeline               protoreflect.FieldDescriptor
	fd_MsgNewCollection_balancesType                     protoreflect.FieldDescriptor
	fd_MsgNewCollection_collectionApprovals              protoreflect.FieldDescriptor
	fd_MsgNewCollection_permissions                      protoreflect.FieldDescriptor
	fd_MsgNewCollection_standardsTimeline                protoreflect.FieldDescriptor
	fd_MsgNewCollection_badgesToCreate                   protoreflect.FieldDescriptor
	fd_MsgNewCollection_transfers                        protoreflect.FieldDescriptor
	fd_MsgNewCollection_contractAddressTimeline          protoreflect.FieldDescriptor
	fd_MsgNewCollection_addressLists                     protoreflect.FieldDescriptor
	fd_MsgNewCollection_defaultOutgoingApprovals         protoreflect.FieldDescriptor
	fd_MsgNewCollection_defaultIncomingApprovals         protoreflect.FieldDescriptor
	fd_MsgNewCollection_defaultDisapproveSelfInitiated   protoreflect.FieldDescriptor
	fd_MsgNewCollection_defaultBalances                  protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgNewCollection = File_badges_v0_legacytx_proto.Messages().ByName("MsgNewCollection")
	fd_MsgNewCollection_creator = md_MsgNewCollection.Fields().ByName("creator")
	fd_MsgNewCollection_collectionMetadataTimeline = md_MsgNewCollection.Fields().ByName("collectionMetadataTimeline")
	fd_MsgNewCollection_badgeMetadataTimeline = md_MsgNewCollection.Fields().ByName("badgeMetadataTimeline")
	fd_MsgNewCollection_offChainBalancesMetadataTimeline = md_MsgNewCollection.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgNewCollection_customDataTimeline = md_MsgNewCollection.Fields().ByName("customDataTimeline")
	fd_MsgNewCollection_balancesType = md_MsgNewCollection.Fields().ByName("balancesType")
	fd_MsgNewCollection_collectionApprovals = md_MsgNewCollection.Fields().ByName("collectionApprovals")
	fd_MsgNewCollection_permissions = md_MsgNewCollection.Fields().ByName("permissions")
	fd_MsgNewCollection_standardsTimeline = md_MsgNewCollection.Fields().ByName("standardsTimeline")
	fd_MsgNewCollection_badgesToCreate = md_MsgNewCollection.Fields().ByName("badgesToCreate")
	fd_MsgNewCollection_transfers = md_MsgNewCollection.Fields().ByName("transfers")
	fd_MsgNewCollection_contractAddressTimeline = md_MsgNewCollection.Fields().ByName("contractAddressTimeline")
	fd_MsgNewCollection_addressLists = md_MsgNewCollection.Fields().ByName("addressLists")
	fd_MsgNewCollection_defaultOutgoingApprovals = md_MsgNewCollection.Fields().ByName("defaultOutgoingApprovals")
	fd_MsgNewCollection_defaultIncomingApprovals = md_MsgNewCollection.Fields().ByName("defaultIncomingApprovals")
	fd_MsgNewCollection_defaultDisapproveSelfInitiated = md_MsgNewCollection.Fields().ByName("defaultDisapproveSelfInitiated")
	fd_MsgNewCollection_defaultBalances = md_MsgNewCollection.Fields().ByName("defaultBalances")
}

var _ protoreflect.Message = (*fastReflection_MsgNewCollection)(nil)

type fastReflection_MsgNewCollection MsgNewCollection

func (x *MsgNewCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewCollection)(x)
}

func (x *MsgNewCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewCollection_messageType fastReflection_MsgNewCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewCollection_messageType{}

type fastReflection_MsgNewCollection_messageType struct{}

func (x fastReflection_MsgNewCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewCollection)(nil)
}
func (x fastReflection_MsgNewCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewCollection)
}
func (x fastReflection_MsgNewCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewCollection) New() protoreflect.Message {
	return new(fastReflection_MsgNewCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgNewCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewCollection_creator, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_2_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgNewCollection_collectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_3_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgNewCollection_badgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_4_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgNewCollection_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_5_list{list: &x.CustomDataTimeline})
		if !f(fd_MsgNewCollection_customDataTimeline, value) {
			return
		}
	}
	if x.BalancesType != "" {
		value := protoreflect.ValueOfString(x.BalancesType)
		if !f(fd_MsgNewCollection_balancesType, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_8_list{list: &x.CollectionApprovals})
		if !f(fd_MsgNewCollection_collectionApprovals, value) {
			return
		}
	}
	if x.Permissions != nil {
		value := protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
		if !f(fd_MsgNewCollection_permissions, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_10_list{list: &x.StandardsTimeline})
		if !f(fd_MsgNewCollection_standardsTimeline, value) {
			return
		}
	}
	if len(x.BadgesToCreate) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_11_list{list: &x.BadgesToCreate})
		if !f(fd_MsgNewCollection_badgesToCreate, value) {
			return
		}
	}
	if len(x.Transfers) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_12_list{list: &x.Transfers})
		if !f(fd_MsgNewCollection_transfers, value) {
			return
		}
	}
	if len(x.ContractAddressTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_13_list{list: &x.ContractAddressTimeline})
		if !f(fd_MsgNewCollection_contractAddressTimeline, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_14_list{list: &x.AddressLists})
		if !f(fd_MsgNewCollection_addressLists, value) {
			return
		}
	}
	if len(x.DefaultOutgoingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_15_list{list: &x.DefaultOutgoingApprovals})
		if !f(fd_MsgNewCollection_defaultOutgoingApprovals, value) {
			return
		}
	}
	if len(x.DefaultIncomingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_16_list{list: &x.DefaultIncomingApprovals})
		if !f(fd_MsgNewCollection_defaultIncomingApprovals, value) {
			return
		}
	}
	if x.DefaultDisapproveSelfInitiated != false {
		value := protoreflect.ValueOfBool(x.DefaultDisapproveSelfInitiated)
		if !f(fd_MsgNewCollection_defaultDisapproveSelfInitiated, value) {
			return
		}
	}
	if len(x.DefaultBalances) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewCollection_18_list{list: &x.DefaultBalances})
		if !f(fd_MsgNewCollection_defaultBalances, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollection.creator":
		return x.Creator != ""
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.v0.MsgNewCollection.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.v0.MsgNewCollection.balancesType":
		return x.BalancesType != ""
	case "badges.v0.MsgNewCollection.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.v0.MsgNewCollection.permissions":
		return x.Permissions != nil
	case "badges.v0.MsgNewCollection.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	case "badges.v0.MsgNewCollection.badgesToCreate":
		return len(x.BadgesToCreate) != 0
	case "badges.v0.MsgNewCollection.transfers":
		return len(x.Transfers) != 0
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		return len(x.ContractAddressTimeline) != 0
	case "badges.v0.MsgNewCollection.addressLists":
		return len(x.AddressLists) != 0
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		return len(x.DefaultOutgoingApprovals) != 0
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		return len(x.DefaultIncomingApprovals) != 0
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		return x.DefaultDisapproveSelfInitiated != false
	case "badges.v0.MsgNewCollection.defaultBalances":
		return len(x.DefaultBalances) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollection.creator":
		x.Creator = ""
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.v0.MsgNewCollection.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.v0.MsgNewCollection.balancesType":
		x.BalancesType = ""
	case "badges.v0.MsgNewCollection.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.v0.MsgNewCollection.permissions":
		x.Permissions = nil
	case "badges.v0.MsgNewCollection.standardsTimeline":
		x.StandardsTimeline = nil
	case "badges.v0.MsgNewCollection.badgesToCreate":
		x.BadgesToCreate = nil
	case "badges.v0.MsgNewCollection.transfers":
		x.Transfers = nil
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		x.ContractAddressTimeline = nil
	case "badges.v0.MsgNewCollection.addressLists":
		x.AddressLists = nil
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		x.DefaultOutgoingApprovals = nil
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		x.DefaultIncomingApprovals = nil
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		x.DefaultDisapproveSelfInitiated = false
	case "badges.v0.MsgNewCollection.defaultBalances":
		x.DefaultBalances = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgNewCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_2_list{})
		}
		listValue := &_MsgNewCollection_2_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_3_list{})
		}
		listValue := &_MsgNewCollection_3_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_4_list{})
		}
		listValue := &_MsgNewCollection_4_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_5_list{})
		}
		listValue := &_MsgNewCollection_5_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.balancesType":
		value := x.BalancesType
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgNewCollection.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_8_list{})
		}
		listValue := &_MsgNewCollection_8_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.permissions":
		value := x.Permissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.v0.MsgNewCollection.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_10_list{})
		}
		listValue := &_MsgNewCollection_10_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.badgesToCreate":
		if len(x.BadgesToCreate) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_11_list{})
		}
		listValue := &_MsgNewCollection_11_list{list: &x.BadgesToCreate}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.transfers":
		if len(x.Transfers) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_12_list{})
		}
		listValue := &_MsgNewCollection_12_list{list: &x.Transfers}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		if len(x.ContractAddressTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_13_list{})
		}
		listValue := &_MsgNewCollection_13_list{list: &x.ContractAddressTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_14_list{})
		}
		listValue := &_MsgNewCollection_14_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		if len(x.DefaultOutgoingApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_15_list{})
		}
		listValue := &_MsgNewCollection_15_list{list: &x.DefaultOutgoingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		if len(x.DefaultIncomingApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_16_list{})
		}
		listValue := &_MsgNewCollection_16_list{list: &x.DefaultIncomingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		value := x.DefaultDisapproveSelfInitiated
		return protoreflect.ValueOfBool(value)
	case "badges.v0.MsgNewCollection.defaultBalances":
		if len(x.DefaultBalances) == 0 {
			return protoreflect.ValueOfList(&_MsgNewCollection_18_list{})
		}
		listValue := &_MsgNewCollection_18_list{list: &x.DefaultBalances}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_2_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_3_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_4_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.v0.MsgNewCollection.customDataTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_5_list)
		x.CustomDataTimeline = *clv.list
	case "badges.v0.MsgNewCollection.balancesType":
		x.BalancesType = value.Interface().(string)
	case "badges.v0.MsgNewCollection.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_8_list)
		x.CollectionApprovals = *clv.list
	case "badges.v0.MsgNewCollection.permissions":
		x.Permissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.v0.MsgNewCollection.standardsTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_10_list)
		x.StandardsTimeline = *clv.list
	case "badges.v0.MsgNewCollection.badgesToCreate":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_11_list)
		x.BadgesToCreate = *clv.list
	case "badges.v0.MsgNewCollection.transfers":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_12_list)
		x.Transfers = *clv.list
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_13_list)
		x.ContractAddressTimeline = *clv.list
	case "badges.v0.MsgNewCollection.addressLists":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_14_list)
		x.AddressLists = *clv.list
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_15_list)
		x.DefaultOutgoingApprovals = *clv.list
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_16_list)
		x.DefaultIncomingApprovals = *clv.list
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		x.DefaultDisapproveSelfInitiated = value.Bool()
	case "badges.v0.MsgNewCollection.defaultBalances":
		lv := value.List()
		clv := lv.(*_MsgNewCollection_18_list)
		x.DefaultBalances = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgNewCollection_2_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgNewCollection_3_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgNewCollection_4_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_MsgNewCollection_5_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgNewCollection_8_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.permissions":
		if x.Permissions == nil {
			x.Permissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
	case "badges.v0.MsgNewCollection.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_MsgNewCollection_10_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.badgesToCreate":
		if x.BadgesToCreate == nil {
			x.BadgesToCreate = []*Balance{}
		}
		value := &_MsgNewCollection_11_list{list: &x.BadgesToCreate}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.transfers":
		if x.Transfers == nil {
			x.Transfers = []*Transfer{}
		}
		value := &_MsgNewCollection_12_list{list: &x.Transfers}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		if x.ContractAddressTimeline == nil {
			x.ContractAddressTimeline = []*ContractAddressTimeline{}
		}
		value := &_MsgNewCollection_13_list{list: &x.ContractAddressTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgNewCollection_14_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		if x.DefaultOutgoingApprovals == nil {
			x.DefaultOutgoingApprovals = []*UserOutgoingApproval{}
		}
		value := &_MsgNewCollection_15_list{list: &x.DefaultOutgoingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		if x.DefaultIncomingApprovals == nil {
			x.DefaultIncomingApprovals = []*UserIncomingApproval{}
		}
		value := &_MsgNewCollection_16_list{list: &x.DefaultIncomingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.defaultBalances":
		if x.DefaultBalances == nil {
			x.DefaultBalances = []*Balance{}
		}
		value := &_MsgNewCollection_18_list{list: &x.DefaultBalances}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgNewCollection.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgNewCollection is not mutable"))
	case "badges.v0.MsgNewCollection.balancesType":
		panic(fmt.Errorf("field balancesType of message badges.v0.MsgNewCollection is not mutable"))
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		panic(fmt.Errorf("field defaultDisapproveSelfInitiated of message badges.v0.MsgNewCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgNewCollection.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_2_list{list: &list})
	case "badges.v0.MsgNewCollection.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_3_list{list: &list})
	case "badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_4_list{list: &list})
	case "badges.v0.MsgNewCollection.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_5_list{list: &list})
	case "badges.v0.MsgNewCollection.balancesType":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgNewCollection.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgNewCollection_8_list{list: &list})
	case "badges.v0.MsgNewCollection.permissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.v0.MsgNewCollection.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_10_list{list: &list})
	case "badges.v0.MsgNewCollection.badgesToCreate":
		list := []*Balance{}
		return protoreflect.ValueOfList(&_MsgNewCollection_11_list{list: &list})
	case "badges.v0.MsgNewCollection.transfers":
		list := []*Transfer{}
		return protoreflect.ValueOfList(&_MsgNewCollection_12_list{list: &list})
	case "badges.v0.MsgNewCollection.contractAddressTimeline":
		list := []*ContractAddressTimeline{}
		return protoreflect.ValueOfList(&_MsgNewCollection_13_list{list: &list})
	case "badges.v0.MsgNewCollection.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgNewCollection_14_list{list: &list})
	case "badges.v0.MsgNewCollection.defaultOutgoingApprovals":
		list := []*UserOutgoingApproval{}
		return protoreflect.ValueOfList(&_MsgNewCollection_15_list{list: &list})
	case "badges.v0.MsgNewCollection.defaultIncomingApprovals":
		list := []*UserIncomingApproval{}
		return protoreflect.ValueOfList(&_MsgNewCollection_16_list{list: &list})
	case "badges.v0.MsgNewCollection.defaultDisapproveSelfInitiated":
		return protoreflect.ValueOfBool(false)
	case "badges.v0.MsgNewCollection.defaultBalances":
		list := []*Balance{}
		return protoreflect.ValueOfList(&_MsgNewCollection_18_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgNewCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.BalancesType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Permissions != nil {
			l = options.Size(x.Permissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BadgesToCreate) > 0 {
			for _, e := range x.BadgesToCreate {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Transfers) > 0 {
			for _, e := range x.Transfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ContractAddressTimeline) > 0 {
			for _, e := range x.ContractAddressTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DefaultOutgoingApprovals) > 0 {
			for _, e := range x.DefaultOutgoingApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DefaultIncomingApprovals) > 0 {
			for _, e := range x.DefaultIncomingApprovals {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.DefaultDisapproveSelfInitiated {
			n += 3
		}
		if len(x.DefaultBalances) > 0 {
			for _, e := range x.DefaultBalances {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DefaultBalances) > 0 {
			for iNdEx := len(x.DefaultBalances) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DefaultBalances[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x92
			}
		}
		if x.DefaultDisapproveSelfInitiated {
			i--
			if x.DefaultDisapproveSelfInitiated {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if len(x.DefaultIncomingApprovals) > 0 {
			for iNdEx := len(x.DefaultIncomingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DefaultIncomingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.DefaultOutgoingApprovals) > 0 {
			for iNdEx := len(x.DefaultOutgoingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DefaultOutgoingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x7a
			}
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if len(x.ContractAddressTimeline) > 0 {
			for iNdEx := len(x.ContractAddressTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ContractAddressTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.Transfers) > 0 {
			for iNdEx := len(x.Transfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Transfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.BadgesToCreate) > 0 {
			for iNdEx := len(x.BadgesToCreate) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgesToCreate[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.Permissions != nil {
			encoded, err := options.Marshal(x.Permissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.BalancesType) > 0 {
			i -= len(x.BalancesType)
			copy(dAtA[i:], x.BalancesType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BalancesType)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BalancesType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BalancesType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Permissions == nil {
					x.Permissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Permissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgesToCreate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgesToCreate = append(x.BadgesToCreate, &Balance{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgesToCreate[len(x.BadgesToCreate)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transfers = append(x.Transfers, &Transfer{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Transfers[len(x.Transfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractAddressTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContractAddressTimeline = append(x.ContractAddressTimeline, &ContractAddressTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ContractAddressTimeline[len(x.ContractAddressTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultOutgoingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DefaultOutgoingApprovals = append(x.DefaultOutgoingApprovals, &UserOutgoingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultOutgoingApprovals[len(x.DefaultOutgoingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultIncomingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DefaultIncomingApprovals = append(x.DefaultIncomingApprovals, &UserIncomingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultIncomingApprovals[len(x.DefaultIncomingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultDisapproveSelfInitiated", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.DefaultDisapproveSelfInitiated = bool(v != 0)
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultBalances", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DefaultBalances = append(x.DefaultBalances, &Balance{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultBalances[len(x.DefaultBalances)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewCollectionResponse              protoreflect.MessageDescriptor
	fd_MsgNewCollectionResponse_collectionId protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgNewCollectionResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgNewCollectionResponse")
	fd_MsgNewCollectionResponse_collectionId = md_MsgNewCollectionResponse.Fields().ByName("collectionId")
}

var _ protoreflect.Message = (*fastReflection_MsgNewCollectionResponse)(nil)

type fastReflection_MsgNewCollectionResponse MsgNewCollectionResponse

func (x *MsgNewCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewCollectionResponse)(x)
}

func (x *MsgNewCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewCollectionResponse_messageType fastReflection_MsgNewCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewCollectionResponse_messageType{}

type fastReflection_MsgNewCollectionResponse_messageType struct{}

func (x fastReflection_MsgNewCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewCollectionResponse)(nil)
}
func (x fastReflection_MsgNewCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewCollectionResponse)
}
func (x fastReflection_MsgNewCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgNewCollectionResponse_collectionId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		return x.CollectionId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		x.CollectionId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		x.CollectionId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgNewCollectionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgNewCollectionResponse.collectionId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgNewCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgNewCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgNewCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_3_list)(nil)

type _MsgMintAndDistributeBadges_3_list struct {
	list *[]*Balance
}

func (x *_MsgMintAndDistributeBadges_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Balance)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_3_list) AppendMutable() protoreflect.Value {
	v := new(Balance)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_3_list) NewElement() protoreflect.Value {
	v := new(Balance)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_4_list)(nil)

type _MsgMintAndDistributeBadges_4_list struct {
	list *[]*Transfer
}

func (x *_MsgMintAndDistributeBadges_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_4_list) AppendMutable() protoreflect.Value {
	v := new(Transfer)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_4_list) NewElement() protoreflect.Value {
	v := new(Transfer)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_6_list)(nil)

type _MsgMintAndDistributeBadges_6_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgMintAndDistributeBadges_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_6_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_6_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_7_list)(nil)

type _MsgMintAndDistributeBadges_7_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgMintAndDistributeBadges_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_7_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_7_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_8_list)(nil)

type _MsgMintAndDistributeBadges_8_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgMintAndDistributeBadges_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_8_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_8_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_9_list)(nil)

type _MsgMintAndDistributeBadges_9_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgMintAndDistributeBadges_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_9_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_9_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgMintAndDistributeBadges_10_list)(nil)

type _MsgMintAndDistributeBadges_10_list struct {
	list *[]*AddressList
}

func (x *_MsgMintAndDistributeBadges_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMintAndDistributeBadges_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgMintAndDistributeBadges_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMintAndDistributeBadges_10_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgMintAndDistributeBadges_10_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgMintAndDistributeBadges_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgMintAndDistributeBadges                                  protoreflect.MessageDescriptor
	fd_MsgMintAndDistributeBadges_creator                          protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_collectionId                     protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_badgesToCreate                   protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_transfers                        protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_collectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_badgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_offChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_collectionApprovals              protoreflect.FieldDescriptor
	fd_MsgMintAndDistributeBadges_addressLists                     protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgMintAndDistributeBadges = File_badges_v0_legacytx_proto.Messages().ByName("MsgMintAndDistributeBadges")
	fd_MsgMintAndDistributeBadges_creator = md_MsgMintAndDistributeBadges.Fields().ByName("creator")
	fd_MsgMintAndDistributeBadges_collectionId = md_MsgMintAndDistributeBadges.Fields().ByName("collectionId")
	fd_MsgMintAndDistributeBadges_badgesToCreate = md_MsgMintAndDistributeBadges.Fields().ByName("badgesToCreate")
	fd_MsgMintAndDistributeBadges_transfers = md_MsgMintAndDistributeBadges.Fields().ByName("transfers")
	fd_MsgMintAndDistributeBadges_collectionMetadataTimeline = md_MsgMintAndDistributeBadges.Fields().ByName("collectionMetadataTimeline")
	fd_MsgMintAndDistributeBadges_badgeMetadataTimeline = md_MsgMintAndDistributeBadges.Fields().ByName("badgeMetadataTimeline")
	fd_MsgMintAndDistributeBadges_offChainBalancesMetadataTimeline = md_MsgMintAndDistributeBadges.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgMintAndDistributeBadges_collectionApprovals = md_MsgMintAndDistributeBadges.Fields().ByName("collectionApprovals")
	fd_MsgMintAndDistributeBadges_addressLists = md_MsgMintAndDistributeBadges.Fields().ByName("addressLists")
}

var _ protoreflect.Message = (*fastReflection_MsgMintAndDistributeBadges)(nil)

type fastReflection_MsgMintAndDistributeBadges MsgMintAndDistributeBadges

func (x *MsgMintAndDistributeBadges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMintAndDistributeBadges)(x)
}

func (x *MsgMintAndDistributeBadges) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMintAndDistributeBadges_messageType fastReflection_MsgMintAndDistributeBadges_messageType
var _ protoreflect.MessageType = fastReflection_MsgMintAndDistributeBadges_messageType{}

type fastReflection_MsgMintAndDistributeBadges_messageType struct{}

func (x fastReflection_MsgMintAndDistributeBadges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMintAndDistributeBadges)(nil)
}
func (x fastReflection_MsgMintAndDistributeBadges_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMintAndDistributeBadges)
}
func (x fastReflection_MsgMintAndDistributeBadges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMintAndDistributeBadges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMintAndDistributeBadges) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMintAndDistributeBadges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMintAndDistributeBadges) Type() protoreflect.MessageType {
	return _fastReflection_MsgMintAndDistributeBadges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMintAndDistributeBadges) New() protoreflect.Message {
	return new(fastReflection_MsgMintAndDistributeBadges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMintAndDistributeBadges) Interface() protoreflect.ProtoMessage {
	return (*MsgMintAndDistributeBadges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMintAndDistributeBadges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgMintAndDistributeBadges_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgMintAndDistributeBadges_collectionId, value) {
			return
		}
	}
	if len(x.BadgesToCreate) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_3_list{list: &x.BadgesToCreate})
		if !f(fd_MsgMintAndDistributeBadges_badgesToCreate, value) {
			return
		}
	}
	if len(x.Transfers) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_4_list{list: &x.Transfers})
		if !f(fd_MsgMintAndDistributeBadges_transfers, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_6_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgMintAndDistributeBadges_collectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_7_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgMintAndDistributeBadges_badgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_8_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgMintAndDistributeBadges_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_9_list{list: &x.CollectionApprovals})
		if !f(fd_MsgMintAndDistributeBadges_collectionApprovals, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_10_list{list: &x.AddressLists})
		if !f(fd_MsgMintAndDistributeBadges_addressLists, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMintAndDistributeBadges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		return x.Creator != ""
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		return len(x.BadgesToCreate) != 0
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		return len(x.Transfers) != 0
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		return len(x.AddressLists) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		x.Creator = ""
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		x.BadgesToCreate = nil
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		x.Transfers = nil
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		x.AddressLists = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMintAndDistributeBadges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		if len(x.BadgesToCreate) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_3_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_3_list{list: &x.BadgesToCreate}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		if len(x.Transfers) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_4_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_4_list{list: &x.Transfers}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_6_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_6_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_7_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_7_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_8_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_8_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_9_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_9_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_10_list{})
		}
		listValue := &_MsgMintAndDistributeBadges_10_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_3_list)
		x.BadgesToCreate = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_4_list)
		x.Transfers = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_6_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_7_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_8_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_9_list)
		x.CollectionApprovals = *clv.list
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		lv := value.List()
		clv := lv.(*_MsgMintAndDistributeBadges_10_list)
		x.AddressLists = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		if x.BadgesToCreate == nil {
			x.BadgesToCreate = []*Balance{}
		}
		value := &_MsgMintAndDistributeBadges_3_list{list: &x.BadgesToCreate}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		if x.Transfers == nil {
			x.Transfers = []*Transfer{}
		}
		value := &_MsgMintAndDistributeBadges_4_list{list: &x.Transfers}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgMintAndDistributeBadges_6_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgMintAndDistributeBadges_7_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgMintAndDistributeBadges_8_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgMintAndDistributeBadges_9_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgMintAndDistributeBadges_10_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgMintAndDistributeBadges is not mutable"))
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgMintAndDistributeBadges is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMintAndDistributeBadges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgMintAndDistributeBadges.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgMintAndDistributeBadges.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgMintAndDistributeBadges.badgesToCreate":
		list := []*Balance{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_3_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.transfers":
		list := []*Transfer{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_4_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_6_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_7_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_8_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_9_list{list: &list})
	case "badges.v0.MsgMintAndDistributeBadges.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgMintAndDistributeBadges_10_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadges"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMintAndDistributeBadges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgMintAndDistributeBadges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMintAndDistributeBadges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMintAndDistributeBadges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMintAndDistributeBadges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMintAndDistributeBadges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.BadgesToCreate) > 0 {
			for _, e := range x.BadgesToCreate {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Transfers) > 0 {
			for _, e := range x.Transfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMintAndDistributeBadges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Transfers) > 0 {
			for iNdEx := len(x.Transfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Transfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.BadgesToCreate) > 0 {
			for iNdEx := len(x.BadgesToCreate) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgesToCreate[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMintAndDistributeBadges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMintAndDistributeBadges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMintAndDistributeBadges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgesToCreate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgesToCreate = append(x.BadgesToCreate, &Balance{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgesToCreate[len(x.BadgesToCreate)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transfers = append(x.Transfers, &Transfer{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Transfers[len(x.Transfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgMintAndDistributeBadgesResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgMintAndDistributeBadgesResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgMintAndDistributeBadgesResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgMintAndDistributeBadgesResponse)(nil)

type fastReflection_MsgMintAndDistributeBadgesResponse MsgMintAndDistributeBadgesResponse

func (x *MsgMintAndDistributeBadgesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMintAndDistributeBadgesResponse)(x)
}

func (x *MsgMintAndDistributeBadgesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMintAndDistributeBadgesResponse_messageType fastReflection_MsgMintAndDistributeBadgesResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgMintAndDistributeBadgesResponse_messageType{}

type fastReflection_MsgMintAndDistributeBadgesResponse_messageType struct{}

func (x fastReflection_MsgMintAndDistributeBadgesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMintAndDistributeBadgesResponse)(nil)
}
func (x fastReflection_MsgMintAndDistributeBadgesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMintAndDistributeBadgesResponse)
}
func (x fastReflection_MsgMintAndDistributeBadgesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMintAndDistributeBadgesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMintAndDistributeBadgesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgMintAndDistributeBadgesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) New() protoreflect.Message {
	return new(fastReflection_MsgMintAndDistributeBadgesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgMintAndDistributeBadgesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgMintAndDistributeBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgMintAndDistributeBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgMintAndDistributeBadgesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMintAndDistributeBadgesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMintAndDistributeBadgesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMintAndDistributeBadgesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMintAndDistributeBadgesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMintAndDistributeBadgesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMintAndDistributeBadgesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollectionApprovals_3_list)(nil)

type _MsgUniversalUpdateCollectionApprovals_3_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollectionApprovals_4_list)(nil)

type _MsgUniversalUpdateCollectionApprovals_4_list struct {
	list *[]*AddressList
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionApprovals_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUniversalUpdateCollectionApprovals                     protoreflect.MessageDescriptor
	fd_MsgUniversalUpdateCollectionApprovals_creator             protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionApprovals_collectionId        protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionApprovals_collectionApprovals protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionApprovals_addressLists        protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUniversalUpdateCollectionApprovals = File_badges_v0_legacytx_proto.Messages().ByName("MsgUniversalUpdateCollectionApprovals")
	fd_MsgUniversalUpdateCollectionApprovals_creator = md_MsgUniversalUpdateCollectionApprovals.Fields().ByName("creator")
	fd_MsgUniversalUpdateCollectionApprovals_collectionId = md_MsgUniversalUpdateCollectionApprovals.Fields().ByName("collectionId")
	fd_MsgUniversalUpdateCollectionApprovals_collectionApprovals = md_MsgUniversalUpdateCollectionApprovals.Fields().ByName("collectionApprovals")
	fd_MsgUniversalUpdateCollectionApprovals_addressLists = md_MsgUniversalUpdateCollectionApprovals.Fields().ByName("addressLists")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollectionApprovals)(nil)

type fastReflection_MsgUniversalUpdateCollectionApprovals MsgUniversalUpdateCollectionApprovals

func (x *MsgUniversalUpdateCollectionApprovals) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionApprovals)(x)
}

func (x *MsgUniversalUpdateCollectionApprovals) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollectionApprovals_messageType fastReflection_MsgUniversalUpdateCollectionApprovals_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollectionApprovals_messageType{}

type fastReflection_MsgUniversalUpdateCollectionApprovals_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollectionApprovals_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionApprovals)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollectionApprovals_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionApprovals)
}
func (x fastReflection_MsgUniversalUpdateCollectionApprovals_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionApprovals
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionApprovals
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollectionApprovals_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionApprovals)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollectionApprovals)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUniversalUpdateCollectionApprovals_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUniversalUpdateCollectionApprovals_collectionId, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_3_list{list: &x.CollectionApprovals})
		if !f(fd_MsgUniversalUpdateCollectionApprovals_collectionApprovals, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_4_list{list: &x.AddressLists})
		if !f(fd_MsgUniversalUpdateCollectionApprovals_addressLists, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		return x.Creator != ""
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		return len(x.AddressLists) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		x.Creator = ""
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		x.AddressLists = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_3_list{})
		}
		listValue := &_MsgUniversalUpdateCollectionApprovals_3_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_4_list{})
		}
		listValue := &_MsgUniversalUpdateCollectionApprovals_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollectionApprovals_3_list)
		x.CollectionApprovals = *clv.list
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollectionApprovals_4_list)
		x.AddressLists = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgUniversalUpdateCollectionApprovals_3_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgUniversalUpdateCollectionApprovals_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgUniversalUpdateCollectionApprovals is not mutable"))
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgUniversalUpdateCollectionApprovals is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_3_list{list: &list})
	case "badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionApprovals_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovals"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovals does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUniversalUpdateCollectionApprovals", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovals) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovals)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovals)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovals)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionApprovals: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionApprovals: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUniversalUpdateCollectionApprovalsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUniversalUpdateCollectionApprovalsResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgUniversalUpdateCollectionApprovalsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollectionApprovalsResponse)(nil)

type fastReflection_MsgUniversalUpdateCollectionApprovalsResponse MsgUniversalUpdateCollectionApprovalsResponse

func (x *MsgUniversalUpdateCollectionApprovalsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionApprovalsResponse)(x)
}

func (x *MsgUniversalUpdateCollectionApprovalsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType{}

type fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionApprovalsResponse)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionApprovalsResponse)
}
func (x fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionApprovalsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionApprovalsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollectionApprovalsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionApprovalsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollectionApprovalsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUniversalUpdateCollectionApprovalsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollectionApprovalsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovalsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovalsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionApprovalsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionApprovalsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionApprovalsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateMetadata_3_list)(nil)

type _MsgUpdateMetadata_3_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgUpdateMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_3_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_3_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateMetadata_4_list)(nil)

type _MsgUpdateMetadata_4_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgUpdateMetadata_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_4_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_4_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateMetadata_5_list)(nil)

type _MsgUpdateMetadata_5_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgUpdateMetadata_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_5_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_5_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateMetadata_6_list)(nil)

type _MsgUpdateMetadata_6_list struct {
	list *[]*CustomDataTimeline
}

func (x *_MsgUpdateMetadata_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_6_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_6_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateMetadata_7_list)(nil)

type _MsgUpdateMetadata_7_list struct {
	list *[]*ContractAddressTimeline
}

func (x *_MsgUpdateMetadata_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ContractAddressTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ContractAddressTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_7_list) AppendMutable() protoreflect.Value {
	v := new(ContractAddressTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_7_list) NewElement() protoreflect.Value {
	v := new(ContractAddressTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateMetadata_8_list)(nil)

type _MsgUpdateMetadata_8_list struct {
	list *[]*StandardsTimeline
}

func (x *_MsgUpdateMetadata_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateMetadata_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateMetadata_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateMetadata_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateMetadata_8_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateMetadata_8_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateMetadata_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateMetadata                                  protoreflect.MessageDescriptor
	fd_MsgUpdateMetadata_creator                          protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_collectionId                     protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_collectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_badgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_offChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_customDataTimeline               protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_contractAddressTimeline          protoreflect.FieldDescriptor
	fd_MsgUpdateMetadata_standardsTimeline                protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateMetadata = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateMetadata")
	fd_MsgUpdateMetadata_creator = md_MsgUpdateMetadata.Fields().ByName("creator")
	fd_MsgUpdateMetadata_collectionId = md_MsgUpdateMetadata.Fields().ByName("collectionId")
	fd_MsgUpdateMetadata_collectionMetadataTimeline = md_MsgUpdateMetadata.Fields().ByName("collectionMetadataTimeline")
	fd_MsgUpdateMetadata_badgeMetadataTimeline = md_MsgUpdateMetadata.Fields().ByName("badgeMetadataTimeline")
	fd_MsgUpdateMetadata_offChainBalancesMetadataTimeline = md_MsgUpdateMetadata.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgUpdateMetadata_customDataTimeline = md_MsgUpdateMetadata.Fields().ByName("customDataTimeline")
	fd_MsgUpdateMetadata_contractAddressTimeline = md_MsgUpdateMetadata.Fields().ByName("contractAddressTimeline")
	fd_MsgUpdateMetadata_standardsTimeline = md_MsgUpdateMetadata.Fields().ByName("standardsTimeline")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateMetadata)(nil)

type fastReflection_MsgUpdateMetadata MsgUpdateMetadata

func (x *MsgUpdateMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateMetadata)(x)
}

func (x *MsgUpdateMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateMetadata_messageType fastReflection_MsgUpdateMetadata_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateMetadata_messageType{}

type fastReflection_MsgUpdateMetadata_messageType struct{}

func (x fastReflection_MsgUpdateMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateMetadata)(nil)
}
func (x fastReflection_MsgUpdateMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateMetadata)
}
func (x fastReflection_MsgUpdateMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateMetadata) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateMetadata) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateMetadata) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateMetadata_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateMetadata_collectionId, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_3_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgUpdateMetadata_collectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_4_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgUpdateMetadata_badgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_5_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgUpdateMetadata_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_6_list{list: &x.CustomDataTimeline})
		if !f(fd_MsgUpdateMetadata_customDataTimeline, value) {
			return
		}
	}
	if len(x.ContractAddressTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_7_list{list: &x.ContractAddressTimeline})
		if !f(fd_MsgUpdateMetadata_contractAddressTimeline, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateMetadata_8_list{list: &x.StandardsTimeline})
		if !f(fd_MsgUpdateMetadata_standardsTimeline, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateMetadata.creator":
		return x.Creator != ""
	case "badges.v0.MsgUpdateMetadata.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		return len(x.ContractAddressTimeline) != 0
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateMetadata.creator":
		x.Creator = ""
	case "badges.v0.MsgUpdateMetadata.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		x.ContractAddressTimeline = nil
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		x.StandardsTimeline = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgUpdateMetadata.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateMetadata.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_3_list{})
		}
		listValue := &_MsgUpdateMetadata_3_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_4_list{})
		}
		listValue := &_MsgUpdateMetadata_4_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_5_list{})
		}
		listValue := &_MsgUpdateMetadata_5_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_6_list{})
		}
		listValue := &_MsgUpdateMetadata_6_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		if len(x.ContractAddressTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_7_list{})
		}
		listValue := &_MsgUpdateMetadata_7_list{list: &x.ContractAddressTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateMetadata_8_list{})
		}
		listValue := &_MsgUpdateMetadata_8_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateMetadata.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgUpdateMetadata.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_3_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_4_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_5_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_6_list)
		x.CustomDataTimeline = *clv.list
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_7_list)
		x.ContractAddressTimeline = *clv.list
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateMetadata_8_list)
		x.StandardsTimeline = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgUpdateMetadata_3_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgUpdateMetadata_4_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgUpdateMetadata_5_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_MsgUpdateMetadata_6_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		if x.ContractAddressTimeline == nil {
			x.ContractAddressTimeline = []*ContractAddressTimeline{}
		}
		value := &_MsgUpdateMetadata_7_list{list: &x.ContractAddressTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_MsgUpdateMetadata_8_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateMetadata.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgUpdateMetadata is not mutable"))
	case "badges.v0.MsgUpdateMetadata.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgUpdateMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateMetadata.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateMetadata.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateMetadata.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_3_list{list: &list})
	case "badges.v0.MsgUpdateMetadata.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_4_list{list: &list})
	case "badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_5_list{list: &list})
	case "badges.v0.MsgUpdateMetadata.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_6_list{list: &list})
	case "badges.v0.MsgUpdateMetadata.contractAddressTimeline":
		list := []*ContractAddressTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_7_list{list: &list})
	case "badges.v0.MsgUpdateMetadata.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateMetadata_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadata"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ContractAddressTimeline) > 0 {
			for _, e := range x.ContractAddressTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.ContractAddressTimeline) > 0 {
			for iNdEx := len(x.ContractAddressTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ContractAddressTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractAddressTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContractAddressTimeline = append(x.ContractAddressTimeline, &ContractAddressTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ContractAddressTimeline[len(x.ContractAddressTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateMetadataResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateMetadataResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateMetadataResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateMetadataResponse)(nil)

type fastReflection_MsgUpdateMetadataResponse MsgUpdateMetadataResponse

func (x *MsgUpdateMetadataResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateMetadataResponse)(x)
}

func (x *MsgUpdateMetadataResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateMetadataResponse_messageType fastReflection_MsgUpdateMetadataResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateMetadataResponse_messageType{}

type fastReflection_MsgUpdateMetadataResponse_messageType struct{}

func (x fastReflection_MsgUpdateMetadataResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateMetadataResponse)(nil)
}
func (x fastReflection_MsgUpdateMetadataResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateMetadataResponse)
}
func (x fastReflection_MsgUpdateMetadataResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateMetadataResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateMetadataResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateMetadataResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateMetadataResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateMetadataResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateMetadataResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateMetadataResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateMetadataResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateMetadataResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateMetadataResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateMetadataResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadataResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateMetadataResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadataResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadataResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateMetadataResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateMetadataResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateMetadataResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateMetadataResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateMetadataResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateMetadataResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateMetadataResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateMetadataResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateMetadataResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateMetadataResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateMetadataResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateMetadataResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateMetadataResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollectionPermissions_4_list)(nil)

type _MsgUniversalUpdateCollectionPermissions_4_list struct {
	list *[]*AddressList
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollectionPermissions_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUniversalUpdateCollectionPermissions              protoreflect.MessageDescriptor
	fd_MsgUniversalUpdateCollectionPermissions_creator      protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionPermissions_collectionId protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionPermissions_permissions  protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollectionPermissions_addressLists protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUniversalUpdateCollectionPermissions = File_badges_v0_legacytx_proto.Messages().ByName("MsgUniversalUpdateCollectionPermissions")
	fd_MsgUniversalUpdateCollectionPermissions_creator = md_MsgUniversalUpdateCollectionPermissions.Fields().ByName("creator")
	fd_MsgUniversalUpdateCollectionPermissions_collectionId = md_MsgUniversalUpdateCollectionPermissions.Fields().ByName("collectionId")
	fd_MsgUniversalUpdateCollectionPermissions_permissions = md_MsgUniversalUpdateCollectionPermissions.Fields().ByName("permissions")
	fd_MsgUniversalUpdateCollectionPermissions_addressLists = md_MsgUniversalUpdateCollectionPermissions.Fields().ByName("addressLists")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollectionPermissions)(nil)

type fastReflection_MsgUniversalUpdateCollectionPermissions MsgUniversalUpdateCollectionPermissions

func (x *MsgUniversalUpdateCollectionPermissions) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionPermissions)(x)
}

func (x *MsgUniversalUpdateCollectionPermissions) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollectionPermissions_messageType fastReflection_MsgUniversalUpdateCollectionPermissions_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollectionPermissions_messageType{}

type fastReflection_MsgUniversalUpdateCollectionPermissions_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollectionPermissions_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionPermissions)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollectionPermissions_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionPermissions)
}
func (x fastReflection_MsgUniversalUpdateCollectionPermissions_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionPermissions
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionPermissions
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollectionPermissions_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionPermissions)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollectionPermissions)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUniversalUpdateCollectionPermissions_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUniversalUpdateCollectionPermissions_collectionId, value) {
			return
		}
	}
	if x.Permissions != nil {
		value := protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
		if !f(fd_MsgUniversalUpdateCollectionPermissions_permissions, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionPermissions_4_list{list: &x.AddressLists})
		if !f(fd_MsgUniversalUpdateCollectionPermissions_addressLists, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		return x.Creator != ""
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		return x.Permissions != nil
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		return len(x.AddressLists) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		x.Creator = ""
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		x.Permissions = nil
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		x.AddressLists = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		value := x.Permissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionPermissions_4_list{})
		}
		listValue := &_MsgUniversalUpdateCollectionPermissions_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		x.Permissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollectionPermissions_4_list)
		x.AddressLists = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		if x.Permissions == nil {
			x.Permissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgUniversalUpdateCollectionPermissions_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgUniversalUpdateCollectionPermissions is not mutable"))
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgUniversalUpdateCollectionPermissions is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.permissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollectionPermissions_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissions does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUniversalUpdateCollectionPermissions", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissions) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissions)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Permissions != nil {
			l = options.Size(x.Permissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissions)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.Permissions != nil {
			encoded, err := options.Marshal(x.Permissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissions)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionPermissions: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionPermissions: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Permissions == nil {
					x.Permissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Permissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUniversalUpdateCollectionPermissionsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUniversalUpdateCollectionPermissionsResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgUniversalUpdateCollectionPermissionsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollectionPermissionsResponse)(nil)

type fastReflection_MsgUniversalUpdateCollectionPermissionsResponse MsgUniversalUpdateCollectionPermissionsResponse

func (x *MsgUniversalUpdateCollectionPermissionsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionPermissionsResponse)(x)
}

func (x *MsgUniversalUpdateCollectionPermissionsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType{}

type fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionPermissionsResponse)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionPermissionsResponse)
}
func (x fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionPermissionsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionPermissionsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollectionPermissionsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionPermissionsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollectionPermissionsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUniversalUpdateCollectionPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUniversalUpdateCollectionPermissionsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollectionPermissionsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissionsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissionsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionPermissionsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionPermissionsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionPermissionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateUserPermissions_4_list)(nil)

type _MsgUpdateUserPermissions_4_list struct {
	list *[]*AddressList
}

func (x *_MsgUpdateUserPermissions_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateUserPermissions_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateUserPermissions_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateUserPermissions_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateUserPermissions_4_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserPermissions_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateUserPermissions_4_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserPermissions_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateUserPermissions              protoreflect.MessageDescriptor
	fd_MsgUpdateUserPermissions_creator      protoreflect.FieldDescriptor
	fd_MsgUpdateUserPermissions_collectionId protoreflect.FieldDescriptor
	fd_MsgUpdateUserPermissions_permissions  protoreflect.FieldDescriptor
	fd_MsgUpdateUserPermissions_addressLists protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateUserPermissions = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateUserPermissions")
	fd_MsgUpdateUserPermissions_creator = md_MsgUpdateUserPermissions.Fields().ByName("creator")
	fd_MsgUpdateUserPermissions_collectionId = md_MsgUpdateUserPermissions.Fields().ByName("collectionId")
	fd_MsgUpdateUserPermissions_permissions = md_MsgUpdateUserPermissions.Fields().ByName("permissions")
	fd_MsgUpdateUserPermissions_addressLists = md_MsgUpdateUserPermissions.Fields().ByName("addressLists")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateUserPermissions)(nil)

type fastReflection_MsgUpdateUserPermissions MsgUpdateUserPermissions

func (x *MsgUpdateUserPermissions) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserPermissions)(x)
}

func (x *MsgUpdateUserPermissions) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateUserPermissions_messageType fastReflection_MsgUpdateUserPermissions_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateUserPermissions_messageType{}

type fastReflection_MsgUpdateUserPermissions_messageType struct{}

func (x fastReflection_MsgUpdateUserPermissions_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserPermissions)(nil)
}
func (x fastReflection_MsgUpdateUserPermissions_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserPermissions)
}
func (x fastReflection_MsgUpdateUserPermissions_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserPermissions
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateUserPermissions) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserPermissions
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateUserPermissions) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateUserPermissions_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateUserPermissions) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserPermissions)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateUserPermissions) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateUserPermissions)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateUserPermissions) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateUserPermissions_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateUserPermissions_collectionId, value) {
			return
		}
	}
	if x.Permissions != nil {
		value := protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
		if !f(fd_MsgUpdateUserPermissions_permissions, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateUserPermissions_4_list{list: &x.AddressLists})
		if !f(fd_MsgUpdateUserPermissions_addressLists, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateUserPermissions) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.creator":
		return x.Creator != ""
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		return x.Permissions != nil
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		return len(x.AddressLists) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissions) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.creator":
		x.Creator = ""
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		x.Permissions = nil
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		x.AddressLists = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateUserPermissions) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		value := x.Permissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateUserPermissions_4_list{})
		}
		listValue := &_MsgUpdateUserPermissions_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissions) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		x.Permissions = value.Message().Interface().(*UserPermissions)
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		lv := value.List()
		clv := lv.(*_MsgUpdateUserPermissions_4_list)
		x.AddressLists = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissions) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		if x.Permissions == nil {
			x.Permissions = new(UserPermissions)
		}
		return protoreflect.ValueOfMessage(x.Permissions.ProtoReflect())
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgUpdateUserPermissions_4_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateUserPermissions.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgUpdateUserPermissions is not mutable"))
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgUpdateUserPermissions is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateUserPermissions) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateUserPermissions.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateUserPermissions.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateUserPermissions.permissions":
		m := new(UserPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.v0.MsgUpdateUserPermissions.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgUpdateUserPermissions_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissions"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissions does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateUserPermissions) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateUserPermissions", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateUserPermissions) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissions) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateUserPermissions) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateUserPermissions) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateUserPermissions)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Permissions != nil {
			l = options.Size(x.Permissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserPermissions)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.Permissions != nil {
			encoded, err := options.Marshal(x.Permissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserPermissions)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserPermissions: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserPermissions: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Permissions == nil {
					x.Permissions = &UserPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Permissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateUserPermissionsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateUserPermissionsResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateUserPermissionsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateUserPermissionsResponse)(nil)

type fastReflection_MsgUpdateUserPermissionsResponse MsgUpdateUserPermissionsResponse

func (x *MsgUpdateUserPermissionsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserPermissionsResponse)(x)
}

func (x *MsgUpdateUserPermissionsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateUserPermissionsResponse_messageType fastReflection_MsgUpdateUserPermissionsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateUserPermissionsResponse_messageType{}

type fastReflection_MsgUpdateUserPermissionsResponse_messageType struct{}

func (x fastReflection_MsgUpdateUserPermissionsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserPermissionsResponse)(nil)
}
func (x fastReflection_MsgUpdateUserPermissionsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserPermissionsResponse)
}
func (x fastReflection_MsgUpdateUserPermissionsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserPermissionsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserPermissionsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateUserPermissionsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserPermissionsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateUserPermissionsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateUserPermissionsResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateUserPermissionsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateUserPermissionsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateUserPermissionsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateUserPermissionsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserPermissionsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserPermissionsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserPermissionsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserPermissionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateManager_3_list)(nil)

type _MsgUpdateManager_3_list struct {
	list *[]*ManagerTimeline
}

func (x *_MsgUpdateManager_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateManager_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateManager_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateManager_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateManager_3_list) AppendMutable() protoreflect.Value {
	v := new(ManagerTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateManager_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateManager_3_list) NewElement() protoreflect.Value {
	v := new(ManagerTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateManager_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateManager                 protoreflect.MessageDescriptor
	fd_MsgUpdateManager_creator         protoreflect.FieldDescriptor
	fd_MsgUpdateManager_collectionId    protoreflect.FieldDescriptor
	fd_MsgUpdateManager_managerTimeline protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateManager = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateManager")
	fd_MsgUpdateManager_creator = md_MsgUpdateManager.Fields().ByName("creator")
	fd_MsgUpdateManager_collectionId = md_MsgUpdateManager.Fields().ByName("collectionId")
	fd_MsgUpdateManager_managerTimeline = md_MsgUpdateManager.Fields().ByName("managerTimeline")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateManager)(nil)

type fastReflection_MsgUpdateManager MsgUpdateManager

func (x *MsgUpdateManager) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateManager)(x)
}

func (x *MsgUpdateManager) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateManager_messageType fastReflection_MsgUpdateManager_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateManager_messageType{}

type fastReflection_MsgUpdateManager_messageType struct{}

func (x fastReflection_MsgUpdateManager_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateManager)(nil)
}
func (x fastReflection_MsgUpdateManager_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateManager)
}
func (x fastReflection_MsgUpdateManager_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateManager
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateManager) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateManager
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateManager) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateManager_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateManager) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateManager)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateManager) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateManager)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateManager) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateManager_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateManager_collectionId, value) {
			return
		}
	}
	if len(x.ManagerTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateManager_3_list{list: &x.ManagerTimeline})
		if !f(fd_MsgUpdateManager_managerTimeline, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateManager) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateManager.creator":
		return x.Creator != ""
	case "badges.v0.MsgUpdateManager.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgUpdateManager.managerTimeline":
		return len(x.ManagerTimeline) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManager) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateManager.creator":
		x.Creator = ""
	case "badges.v0.MsgUpdateManager.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgUpdateManager.managerTimeline":
		x.ManagerTimeline = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateManager) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgUpdateManager.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateManager.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgUpdateManager.managerTimeline":
		if len(x.ManagerTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateManager_3_list{})
		}
		listValue := &_MsgUpdateManager_3_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManager) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateManager.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgUpdateManager.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgUpdateManager.managerTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateManager_3_list)
		x.ManagerTimeline = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManager) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateManager.managerTimeline":
		if x.ManagerTimeline == nil {
			x.ManagerTimeline = []*ManagerTimeline{}
		}
		value := &_MsgUpdateManager_3_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgUpdateManager.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgUpdateManager is not mutable"))
	case "badges.v0.MsgUpdateManager.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgUpdateManager is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateManager) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgUpdateManager.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateManager.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgUpdateManager.managerTimeline":
		list := []*ManagerTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateManager_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManager"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManager does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateManager) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateManager", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateManager) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManager) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateManager) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateManager) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateManager)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ManagerTimeline) > 0 {
			for _, e := range x.ManagerTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateManager)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ManagerTimeline) > 0 {
			for iNdEx := len(x.ManagerTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ManagerTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateManager)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateManager: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateManager: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ManagerTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ManagerTimeline = append(x.ManagerTimeline, &ManagerTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ManagerTimeline[len(x.ManagerTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateManagerResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgUpdateManagerResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgUpdateManagerResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateManagerResponse)(nil)

type fastReflection_MsgUpdateManagerResponse MsgUpdateManagerResponse

func (x *MsgUpdateManagerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateManagerResponse)(x)
}

func (x *MsgUpdateManagerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateManagerResponse_messageType fastReflection_MsgUpdateManagerResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateManagerResponse_messageType{}

type fastReflection_MsgUpdateManagerResponse_messageType struct{}

func (x fastReflection_MsgUpdateManagerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateManagerResponse)(nil)
}
func (x fastReflection_MsgUpdateManagerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateManagerResponse)
}
func (x fastReflection_MsgUpdateManagerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateManagerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateManagerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateManagerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateManagerResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateManagerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateManagerResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateManagerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateManagerResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateManagerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateManagerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateManagerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManagerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateManagerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManagerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManagerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateManagerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgUpdateManagerResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgUpdateManagerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateManagerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgUpdateManagerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateManagerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateManagerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateManagerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateManagerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateManagerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateManagerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateManagerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateManagerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateManagerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgArchiveCollection_3_list)(nil)

type _MsgArchiveCollection_3_list struct {
	list *[]*IsArchivedTimeline
}

func (x *_MsgArchiveCollection_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgArchiveCollection_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgArchiveCollection_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgArchiveCollection_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgArchiveCollection_3_list) AppendMutable() protoreflect.Value {
	v := new(IsArchivedTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgArchiveCollection_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgArchiveCollection_3_list) NewElement() protoreflect.Value {
	v := new(IsArchivedTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgArchiveCollection_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgArchiveCollection                    protoreflect.MessageDescriptor
	fd_MsgArchiveCollection_creator            protoreflect.FieldDescriptor
	fd_MsgArchiveCollection_collectionId       protoreflect.FieldDescriptor
	fd_MsgArchiveCollection_isArchivedTimeline protoreflect.FieldDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgArchiveCollection = File_badges_v0_legacytx_proto.Messages().ByName("MsgArchiveCollection")
	fd_MsgArchiveCollection_creator = md_MsgArchiveCollection.Fields().ByName("creator")
	fd_MsgArchiveCollection_collectionId = md_MsgArchiveCollection.Fields().ByName("collectionId")
	fd_MsgArchiveCollection_isArchivedTimeline = md_MsgArchiveCollection.Fields().ByName("isArchivedTimeline")
}

var _ protoreflect.Message = (*fastReflection_MsgArchiveCollection)(nil)

type fastReflection_MsgArchiveCollection MsgArchiveCollection

func (x *MsgArchiveCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgArchiveCollection)(x)
}

func (x *MsgArchiveCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgArchiveCollection_messageType fastReflection_MsgArchiveCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgArchiveCollection_messageType{}

type fastReflection_MsgArchiveCollection_messageType struct{}

func (x fastReflection_MsgArchiveCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgArchiveCollection)(nil)
}
func (x fastReflection_MsgArchiveCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgArchiveCollection)
}
func (x fastReflection_MsgArchiveCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgArchiveCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgArchiveCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgArchiveCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgArchiveCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgArchiveCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgArchiveCollection) New() protoreflect.Message {
	return new(fastReflection_MsgArchiveCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgArchiveCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgArchiveCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgArchiveCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgArchiveCollection_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgArchiveCollection_collectionId, value) {
			return
		}
	}
	if len(x.IsArchivedTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgArchiveCollection_3_list{list: &x.IsArchivedTimeline})
		if !f(fd_MsgArchiveCollection_isArchivedTimeline, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgArchiveCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.v0.MsgArchiveCollection.creator":
		return x.Creator != ""
	case "badges.v0.MsgArchiveCollection.collectionId":
		return x.CollectionId != ""
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		return len(x.IsArchivedTimeline) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.v0.MsgArchiveCollection.creator":
		x.Creator = ""
	case "badges.v0.MsgArchiveCollection.collectionId":
		x.CollectionId = ""
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		x.IsArchivedTimeline = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgArchiveCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.v0.MsgArchiveCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgArchiveCollection.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		if len(x.IsArchivedTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgArchiveCollection_3_list{})
		}
		listValue := &_MsgArchiveCollection_3_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.v0.MsgArchiveCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.v0.MsgArchiveCollection.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		lv := value.List()
		clv := lv.(*_MsgArchiveCollection_3_list)
		x.IsArchivedTimeline = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		if x.IsArchivedTimeline == nil {
			x.IsArchivedTimeline = []*IsArchivedTimeline{}
		}
		value := &_MsgArchiveCollection_3_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.v0.MsgArchiveCollection.creator":
		panic(fmt.Errorf("field creator of message badges.v0.MsgArchiveCollection is not mutable"))
	case "badges.v0.MsgArchiveCollection.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.v0.MsgArchiveCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgArchiveCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.v0.MsgArchiveCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgArchiveCollection.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.v0.MsgArchiveCollection.isArchivedTimeline":
		list := []*IsArchivedTimeline{}
		return protoreflect.ValueOfList(&_MsgArchiveCollection_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollection"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgArchiveCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgArchiveCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgArchiveCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgArchiveCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgArchiveCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgArchiveCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.IsArchivedTimeline) > 0 {
			for _, e := range x.IsArchivedTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgArchiveCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.IsArchivedTimeline) > 0 {
			for iNdEx := len(x.IsArchivedTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IsArchivedTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgArchiveCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgArchiveCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgArchiveCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchivedTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IsArchivedTimeline = append(x.IsArchivedTimeline, &IsArchivedTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IsArchivedTimeline[len(x.IsArchivedTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgArchiveCollectionResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_v0_legacytx_proto_init()
	md_MsgArchiveCollectionResponse = File_badges_v0_legacytx_proto.Messages().ByName("MsgArchiveCollectionResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgArchiveCollectionResponse)(nil)

type fastReflection_MsgArchiveCollectionResponse MsgArchiveCollectionResponse

func (x *MsgArchiveCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgArchiveCollectionResponse)(x)
}

func (x *MsgArchiveCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_v0_legacytx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgArchiveCollectionResponse_messageType fastReflection_MsgArchiveCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgArchiveCollectionResponse_messageType{}

type fastReflection_MsgArchiveCollectionResponse_messageType struct{}

func (x fastReflection_MsgArchiveCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgArchiveCollectionResponse)(nil)
}
func (x fastReflection_MsgArchiveCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgArchiveCollectionResponse)
}
func (x fastReflection_MsgArchiveCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgArchiveCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgArchiveCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgArchiveCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgArchiveCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgArchiveCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgArchiveCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgArchiveCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgArchiveCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgArchiveCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgArchiveCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgArchiveCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgArchiveCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgArchiveCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.v0.MsgArchiveCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.v0.MsgArchiveCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgArchiveCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.v0.MsgArchiveCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgArchiveCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgArchiveCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgArchiveCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgArchiveCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgArchiveCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgArchiveCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgArchiveCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgArchiveCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgArchiveCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: badges/v0/legacytx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The types defined in these files are used to define the MsgServer types for all requests and responses for Msgs of the badges module.
type UserOutgoingApprovalTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutgoingApprovals []*UserOutgoingApproval `protobuf:"bytes,1,rep,name=outgoingApprovals,proto3" json:"outgoingApprovals,omitempty"`
	TimelineTimes     []*UintRange            `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *UserOutgoingApprovalTimeline) Reset() {
	*x = UserOutgoingApprovalTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOutgoingApprovalTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOutgoingApprovalTimeline) ProtoMessage() {}

// Deprecated: Use UserOutgoingApprovalTimeline.ProtoReflect.Descriptor instead.
func (*UserOutgoingApprovalTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{0}
}

func (x *UserOutgoingApprovalTimeline) GetOutgoingApprovals() []*UserOutgoingApproval {
	if x != nil {
		return x.OutgoingApprovals
	}
	return nil
}

func (x *UserOutgoingApprovalTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

type UserIncomingApprovalTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncomingApprovals []*UserIncomingApproval `protobuf:"bytes,1,rep,name=incomingApprovals,proto3" json:"incomingApprovals,omitempty"`
	TimelineTimes     []*UintRange            `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *UserIncomingApprovalTimeline) Reset() {
	*x = UserIncomingApprovalTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIncomingApprovalTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIncomingApprovalTimeline) ProtoMessage() {}

// Deprecated: Use UserIncomingApprovalTimeline.ProtoReflect.Descriptor instead.
func (*UserIncomingApprovalTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{1}
}

func (x *UserIncomingApprovalTimeline) GetIncomingApprovals() []*UserIncomingApproval {
	if x != nil {
		return x.IncomingApprovals
	}
	return nil
}

func (x *UserIncomingApprovalTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

type CollectionApprovalTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionApprovals []*CollectionApproval `protobuf:"bytes,1,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	TimelineTimes       []*UintRange          `protobuf:"bytes,2,rep,name=timelineTimes,proto3" json:"timelineTimes,omitempty"`
}

func (x *CollectionApprovalTimeline) Reset() {
	*x = CollectionApprovalTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionApprovalTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionApprovalTimeline) ProtoMessage() {}

// Deprecated: Use CollectionApprovalTimeline.ProtoReflect.Descriptor instead.
func (*CollectionApprovalTimeline) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionApprovalTimeline) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *CollectionApprovalTimeline) GetTimelineTimes() []*UintRange {
	if x != nil {
		return x.TimelineTimes
	}
	return nil
}

type MsgNewCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See collections.proto for more details about these MsgNewBadge fields. Defines the badge details. Leave unneeded fields empty.
	Creator                          string                              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionMetadataTimeline       []*CollectionMetadataTimeline       `protobuf:"bytes,2,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	BadgeMetadataTimeline            []*BadgeMetadataTimeline            `protobuf:"bytes,3,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,4,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	CustomDataTimeline               []*CustomDataTimeline               `protobuf:"bytes,5,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	BalancesType                     string                              `protobuf:"bytes,6,opt,name=balancesType,proto3" json:"balancesType,omitempty"`
	CollectionApprovals              []*CollectionApproval               `protobuf:"bytes,8,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	Permissions                      *CollectionPermissions              `protobuf:"bytes,9,opt,name=permissions,proto3" json:"permissions,omitempty"`
	StandardsTimeline                []*StandardsTimeline                `protobuf:"bytes,10,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
	// Badge supplys and amounts to create. For each idx, we create amounts[idx] badges each with a supply of supplys[idx].
	// If supply[idx] == 0, we assume default supply. amountsToCreate[idx] can't equal 0.
	BadgesToCreate                 []*Balance                 `protobuf:"bytes,11,rep,name=badgesToCreate,proto3" json:"badgesToCreate,omitempty"`
	Transfers                      []*Transfer                `protobuf:"bytes,12,rep,name=transfers,proto3" json:"transfers,omitempty"`
	ContractAddressTimeline        []*ContractAddressTimeline `protobuf:"bytes,13,rep,name=contractAddressTimeline,proto3" json:"contractAddressTimeline,omitempty"`
	AddressLists                   []*AddressList             `protobuf:"bytes,14,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
	DefaultOutgoingApprovals       []*UserOutgoingApproval    `protobuf:"bytes,15,rep,name=defaultOutgoingApprovals,proto3" json:"defaultOutgoingApprovals,omitempty"` //The user's approved transfers for each badge ID.
	DefaultIncomingApprovals       []*UserIncomingApproval    `protobuf:"bytes,16,rep,name=defaultIncomingApprovals,proto3" json:"defaultIncomingApprovals,omitempty"` //The user's approved incoming transfers for each badge ID.
	DefaultDisapproveSelfInitiated bool                       `protobuf:"varint,17,opt,name=defaultDisapproveSelfInitiated,proto3" json:"defaultDisapproveSelfInitiated,omitempty"`
	// The default balances for the user
	DefaultBalances []*Balance `protobuf:"bytes,18,rep,name=defaultBalances,proto3" json:"defaultBalances,omitempty"`
}

func (x *MsgNewCollection) Reset() {
	*x = MsgNewCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewCollection) ProtoMessage() {}

// Deprecated: Use MsgNewCollection.ProtoReflect.Descriptor instead.
func (*MsgNewCollection) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgNewCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewCollection) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetBalancesType() string {
	if x != nil {
		return x.BalancesType
	}
	return ""
}

func (x *MsgNewCollection) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgNewCollection) GetPermissions() *CollectionPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *MsgNewCollection) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetBadgesToCreate() []*Balance {
	if x != nil {
		return x.BadgesToCreate
	}
	return nil
}

func (x *MsgNewCollection) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *MsgNewCollection) GetContractAddressTimeline() []*ContractAddressTimeline {
	if x != nil {
		return x.ContractAddressTimeline
	}
	return nil
}

func (x *MsgNewCollection) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

func (x *MsgNewCollection) GetDefaultOutgoingApprovals() []*UserOutgoingApproval {
	if x != nil {
		return x.DefaultOutgoingApprovals
	}
	return nil
}

func (x *MsgNewCollection) GetDefaultIncomingApprovals() []*UserIncomingApproval {
	if x != nil {
		return x.DefaultIncomingApprovals
	}
	return nil
}

func (x *MsgNewCollection) GetDefaultDisapproveSelfInitiated() bool {
	if x != nil {
		return x.DefaultDisapproveSelfInitiated
	}
	return false
}

func (x *MsgNewCollection) GetDefaultBalances() []*Balance {
	if x != nil {
		return x.DefaultBalances
	}
	return nil
}

type MsgNewCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"` //ID of created badge collecon
}

func (x *MsgNewCollectionResponse) Reset() {
	*x = MsgNewCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgNewCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgNewCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgNewCollectionResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// This handles both minting more of existing badges and creating new badges.
type MsgMintAndDistributeBadges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                          string                              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId                     string                              `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	BadgesToCreate                   []*Balance                          `protobuf:"bytes,3,rep,name=badgesToCreate,proto3" json:"badgesToCreate,omitempty"`
	Transfers                        []*Transfer                         `protobuf:"bytes,4,rep,name=transfers,proto3" json:"transfers,omitempty"`
	CollectionMetadataTimeline       []*CollectionMetadataTimeline       `protobuf:"bytes,6,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	BadgeMetadataTimeline            []*BadgeMetadataTimeline            `protobuf:"bytes,7,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,8,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	CollectionApprovals              []*CollectionApproval               `protobuf:"bytes,9,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	AddressLists                     []*AddressList                      `protobuf:"bytes,10,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
}

func (x *MsgMintAndDistributeBadges) Reset() {
	*x = MsgMintAndDistributeBadges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintAndDistributeBadges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintAndDistributeBadges) ProtoMessage() {}

// Deprecated: Use MsgMintAndDistributeBadges.ProtoReflect.Descriptor instead.
func (*MsgMintAndDistributeBadges) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgMintAndDistributeBadges) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMintAndDistributeBadges) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgMintAndDistributeBadges) GetBadgesToCreate() []*Balance {
	if x != nil {
		return x.BadgesToCreate
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgMintAndDistributeBadges) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

type MsgMintAndDistributeBadgesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMintAndDistributeBadgesResponse) Reset() {
	*x = MsgMintAndDistributeBadgesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintAndDistributeBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintAndDistributeBadgesResponse) ProtoMessage() {}

// Deprecated: Use MsgMintAndDistributeBadgesResponse.ProtoReflect.Descriptor instead.
func (*MsgMintAndDistributeBadgesResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{6}
}

type MsgUniversalUpdateCollectionApprovals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId        string                `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	CollectionApprovals []*CollectionApproval `protobuf:"bytes,3,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	AddressLists        []*AddressList        `protobuf:"bytes,4,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
}

func (x *MsgUniversalUpdateCollectionApprovals) Reset() {
	*x = MsgUniversalUpdateCollectionApprovals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollectionApprovals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollectionApprovals) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollectionApprovals.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollectionApprovals) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgUniversalUpdateCollectionApprovals) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUniversalUpdateCollectionApprovals) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUniversalUpdateCollectionApprovals) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgUniversalUpdateCollectionApprovals) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

type MsgUniversalUpdateCollectionApprovalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUniversalUpdateCollectionApprovalsResponse) Reset() {
	*x = MsgUniversalUpdateCollectionApprovalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollectionApprovalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollectionApprovalsResponse) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollectionApprovalsResponse.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollectionApprovalsResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{8}
}

// Update badge Uris with new URI object, if permitted.
type MsgUpdateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                          string                              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId                     string                              `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	CollectionMetadataTimeline       []*CollectionMetadataTimeline       `protobuf:"bytes,3,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	BadgeMetadataTimeline            []*BadgeMetadataTimeline            `protobuf:"bytes,4,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,5,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	CustomDataTimeline               []*CustomDataTimeline               `protobuf:"bytes,6,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	ContractAddressTimeline          []*ContractAddressTimeline          `protobuf:"bytes,7,rep,name=contractAddressTimeline,proto3" json:"contractAddressTimeline,omitempty"`
	StandardsTimeline                []*StandardsTimeline                `protobuf:"bytes,8,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
}

func (x *MsgUpdateMetadata) Reset() {
	*x = MsgUpdateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateMetadata) ProtoMessage() {}

// Deprecated: Use MsgUpdateMetadata.ProtoReflect.Descriptor instead.
func (*MsgUpdateMetadata) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUpdateMetadata) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateMetadata) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUpdateMetadata) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateMetadata) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateMetadata) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateMetadata) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *MsgUpdateMetadata) GetContractAddressTimeline() []*ContractAddressTimeline {
	if x != nil {
		return x.ContractAddressTimeline
	}
	return nil
}

func (x *MsgUpdateMetadata) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

type MsgUpdateMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateMetadataResponse) Reset() {
	*x = MsgUpdateMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateMetadataResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateMetadataResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateMetadataResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{10}
}

// Update badge permissions with new permissions, if permitted.
type MsgUniversalUpdateCollectionPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId string                 `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Permissions  *CollectionPermissions `protobuf:"bytes,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	AddressLists []*AddressList         `protobuf:"bytes,4,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
}

func (x *MsgUniversalUpdateCollectionPermissions) Reset() {
	*x = MsgUniversalUpdateCollectionPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollectionPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollectionPermissions) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollectionPermissions.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollectionPermissions) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgUniversalUpdateCollectionPermissions) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUniversalUpdateCollectionPermissions) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUniversalUpdateCollectionPermissions) GetPermissions() *CollectionPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *MsgUniversalUpdateCollectionPermissions) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

type MsgUniversalUpdateCollectionPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUniversalUpdateCollectionPermissionsResponse) Reset() {
	*x = MsgUniversalUpdateCollectionPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollectionPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollectionPermissionsResponse) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollectionPermissionsResponse.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollectionPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{12}
}

type MsgUpdateUserPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId string           `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Permissions  *UserPermissions `protobuf:"bytes,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	AddressLists []*AddressList   `protobuf:"bytes,4,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
}

func (x *MsgUpdateUserPermissions) Reset() {
	*x = MsgUpdateUserPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserPermissions) ProtoMessage() {}

// Deprecated: Use MsgUpdateUserPermissions.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserPermissions) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgUpdateUserPermissions) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserPermissions) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUpdateUserPermissions) GetPermissions() *UserPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *MsgUpdateUserPermissions) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

type MsgUpdateUserPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserPermissionsResponse) Reset() {
	*x = MsgUpdateUserPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserPermissionsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateUserPermissionsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{14}
}

// Transfer manager to this address. Recipient must have made a request.
type MsgUpdateManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator         string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId    string             `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	ManagerTimeline []*ManagerTimeline `protobuf:"bytes,3,rep,name=managerTimeline,proto3" json:"managerTimeline,omitempty"`
}

func (x *MsgUpdateManager) Reset() {
	*x = MsgUpdateManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateManager) ProtoMessage() {}

// Deprecated: Use MsgUpdateManager.ProtoReflect.Descriptor instead.
func (*MsgUpdateManager) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgUpdateManager) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateManager) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUpdateManager) GetManagerTimeline() []*ManagerTimeline {
	if x != nil {
		return x.ManagerTimeline
	}
	return nil
}

type MsgUpdateManagerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateManagerResponse) Reset() {
	*x = MsgUpdateManagerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateManagerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateManagerResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateManagerResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateManagerResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{16}
}

type MsgArchiveCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator            string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId       string                `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	IsArchivedTimeline []*IsArchivedTimeline `protobuf:"bytes,3,rep,name=isArchivedTimeline,proto3" json:"isArchivedTimeline,omitempty"`
}

func (x *MsgArchiveCollection) Reset() {
	*x = MsgArchiveCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgArchiveCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgArchiveCollection) ProtoMessage() {}

// Deprecated: Use MsgArchiveCollection.ProtoReflect.Descriptor instead.
func (*MsgArchiveCollection) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgArchiveCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgArchiveCollection) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgArchiveCollection) GetIsArchivedTimeline() []*IsArchivedTimeline {
	if x != nil {
		return x.IsArchivedTimeline
	}
	return nil
}

type MsgArchiveCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgArchiveCollectionResponse) Reset() {
	*x = MsgArchiveCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_v0_legacytx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgArchiveCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgArchiveCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgArchiveCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgArchiveCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_v0_legacytx_proto_rawDescGZIP(), []int{18}
}

var File_badges_v0_legacytx_proto protoreflect.FileDescriptor

var file_badges_v0_legacytx_proto_rawDesc = []byte{
	0x0a, 0x18, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x76, 0x30, 0x1a, 0x19, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f,
	0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9,
	0x01, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x4d, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x11, 0x6f, 0x75, 0x74,
	0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x3a,
	0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x1c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x30, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x8f, 0x0a, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x65, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x30, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x77, 0x0a, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x54,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x17, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f,
	0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x30, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x73, 0x12, 0x5b, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x46,
	0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x69, 0x73, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04,
	0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x9c, 0x05, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x65, 0x0a, 0x1a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x77, 0x0a, 0x20, 0x6f,
	0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x25, 0x4d, 0x73, 0x67, 0x55,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a,
	0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x3a,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x2d, 0x4d, 0x73,
	0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x05, 0x0a, 0x11,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x65, 0x0a,
	0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x77, 0x0a, 0x20,
	0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x30, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x27,
	0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e,
	0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a,
	0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb1, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x73,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x81, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x30, 0x42, 0x0d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x74, 0x78,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1c, 0x62, 0x69, 0x74, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2f, 0x76, 0x30, 0xa2, 0x02, 0x03, 0x42, 0x56, 0x58, 0xaa, 0x02, 0x09, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x30, 0xca, 0x02, 0x09, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x5c, 0x56, 0x30, 0xe2, 0x02, 0x15, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x5c, 0x56, 0x30, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badges_v0_legacytx_proto_rawDescOnce sync.Once
	file_badges_v0_legacytx_proto_rawDescData = file_badges_v0_legacytx_proto_rawDesc
)

func file_badges_v0_legacytx_proto_rawDescGZIP() []byte {
	file_badges_v0_legacytx_proto_rawDescOnce.Do(func() {
		file_badges_v0_legacytx_proto_rawDescData = protoimpl.X.CompressGZIP(file_badges_v0_legacytx_proto_rawDescData)
	})
	return file_badges_v0_legacytx_proto_rawDescData
}

var file_badges_v0_legacytx_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_badges_v0_legacytx_proto_goTypes = []interface{}{
	(*UserOutgoingApprovalTimeline)(nil),                    // 0: badges.v0.UserOutgoingApprovalTimeline
	(*UserIncomingApprovalTimeline)(nil),                    // 1: badges.v0.UserIncomingApprovalTimeline
	(*CollectionApprovalTimeline)(nil),                      // 2: badges.v0.CollectionApprovalTimeline
	(*MsgNewCollection)(nil),                                // 3: badges.v0.MsgNewCollection
	(*MsgNewCollectionResponse)(nil),                        // 4: badges.v0.MsgNewCollectionResponse
	(*MsgMintAndDistributeBadges)(nil),                      // 5: badges.v0.MsgMintAndDistributeBadges
	(*MsgMintAndDistributeBadgesResponse)(nil),              // 6: badges.v0.MsgMintAndDistributeBadgesResponse
	(*MsgUniversalUpdateCollectionApprovals)(nil),           // 7: badges.v0.MsgUniversalUpdateCollectionApprovals
	(*MsgUniversalUpdateCollectionApprovalsResponse)(nil),   // 8: badges.v0.MsgUniversalUpdateCollectionApprovalsResponse
	(*MsgUpdateMetadata)(nil),                               // 9: badges.v0.MsgUpdateMetadata
	(*MsgUpdateMetadataResponse)(nil),                       // 10: badges.v0.MsgUpdateMetadataResponse
	(*MsgUniversalUpdateCollectionPermissions)(nil),         // 11: badges.v0.MsgUniversalUpdateCollectionPermissions
	(*MsgUniversalUpdateCollectionPermissionsResponse)(nil), // 12: badges.v0.MsgUniversalUpdateCollectionPermissionsResponse
	(*MsgUpdateUserPermissions)(nil),                        // 13: badges.v0.MsgUpdateUserPermissions
	(*MsgUpdateUserPermissionsResponse)(nil),                // 14: badges.v0.MsgUpdateUserPermissionsResponse
	(*MsgUpdateManager)(nil),                                // 15: badges.v0.MsgUpdateManager
	(*MsgUpdateManagerResponse)(nil),                        // 16: badges.v0.MsgUpdateManagerResponse
	(*MsgArchiveCollection)(nil),                            // 17: badges.v0.MsgArchiveCollection
	(*MsgArchiveCollectionResponse)(nil),                    // 18: badges.v0.MsgArchiveCollectionResponse
	(*UserOutgoingApproval)(nil),                            // 19: badges.v0.UserOutgoingApproval
	(*UintRange)(nil),                                       // 20: badges.v0.UintRange
	(*UserIncomingApproval)(nil),                            // 21: badges.v0.UserIncomingApproval
	(*CollectionApproval)(nil),                              // 22: badges.v0.CollectionApproval
	(*CollectionMetadataTimeline)(nil),                      // 23: badges.v0.CollectionMetadataTimeline
	(*BadgeMetadataTimeline)(nil),                           // 24: badges.v0.BadgeMetadataTimeline
	(*OffChainBalancesMetadataTimeline)(nil),                // 25: badges.v0.OffChainBalancesMetadataTimeline
	(*CustomDataTimeline)(nil),                              // 26: badges.v0.CustomDataTimeline
	(*CollectionPermissions)(nil),                           // 27: badges.v0.CollectionPermissions
	(*StandardsTimeline)(nil),                               // 28: badges.v0.StandardsTimeline
	(*Balance)(nil),                                         // 29: badges.v0.Balance
	(*Transfer)(nil),                                        // 30: badges.v0.Transfer
	(*ContractAddressTimeline)(nil),                         // 31: badges.v0.ContractAddressTimeline
	(*AddressList)(nil),                                     // 32: badges.v0.AddressList
	(*UserPermissions)(nil),                                 // 33: badges.v0.UserPermissions
	(*ManagerTimeline)(nil),                                 // 34: badges.v0.ManagerTimeline
	(*IsArchivedTimeline)(nil),                              // 35: badges.v0.IsArchivedTimeline
}
var file_badges_v0_legacytx_proto_depIdxs = []int32{
	19, // 0: badges.v0.UserOutgoingApprovalTimeline.outgoingApprovals:type_name -> badges.v0.UserOutgoingApproval
	20, // 1: badges.v0.UserOutgoingApprovalTimeline.timelineTimes:type_name -> badges.v0.UintRange
	21, // 2: badges.v0.UserIncomingApprovalTimeline.incomingApprovals:type_name -> badges.v0.UserIncomingApproval
	20, // 3: badges.v0.UserIncomingApprovalTimeline.timelineTimes:type_name -> badges.v0.UintRange
	22, // 4: badges.v0.CollectionApprovalTimeline.collectionApprovals:type_name -> badges.v0.CollectionApproval
	20, // 5: badges.v0.CollectionApprovalTimeline.timelineTimes:type_name -> badges.v0.UintRange
	23, // 6: badges.v0.MsgNewCollection.collectionMetadataTimeline:type_name -> badges.v0.CollectionMetadataTimeline
	24, // 7: badges.v0.MsgNewCollection.badgeMetadataTimeline:type_name -> badges.v0.BadgeMetadataTimeline
	25, // 8: badges.v0.MsgNewCollection.offChainBalancesMetadataTimeline:type_name -> badges.v0.OffChainBalancesMetadataTimeline
	26, // 9: badges.v0.MsgNewCollection.customDataTimeline:type_name -> badges.v0.CustomDataTimeline
	22, // 10: badges.v0.MsgNewCollection.collectionApprovals:type_name -> badges.v0.CollectionApproval
	27, // 11: badges.v0.MsgNewCollection.permissions:type_name -> badges.v0.CollectionPermissions
	28, // 12: badges.v0.MsgNewCollection.standardsTimeline:type_name -> badges.v0.StandardsTimeline
	29, // 13: badges.v0.MsgNewCollection.badgesToCreate:type_name -> badges.v0.Balance
	30, // 14: badges.v0.MsgNewCollection.transfers:type_name -> badges.v0.Transfer
	31, // 15: badges.v0.MsgNewCollection.contractAddressTimeline:type_name -> badges.v0.ContractAddressTimeline
	32, // 16: badges.v0.MsgNewCollection.addressLists:type_name -> badges.v0.AddressList
	19, // 17: badges.v0.MsgNewCollection.defaultOutgoingApprovals:type_name -> badges.v0.UserOutgoingApproval
	21, // 18: badges.v0.MsgNewCollection.defaultIncomingApprovals:type_name -> badges.v0.UserIncomingApproval
	29, // 19: badges.v0.MsgNewCollection.defaultBalances:type_name -> badges.v0.Balance
	29, // 20: badges.v0.MsgMintAndDistributeBadges.badgesToCreate:type_name -> badges.v0.Balance
	30, // 21: badges.v0.MsgMintAndDistributeBadges.transfers:type_name -> badges.v0.Transfer
	23, // 22: badges.v0.MsgMintAndDistributeBadges.collectionMetadataTimeline:type_name -> badges.v0.CollectionMetadataTimeline
	24, // 23: badges.v0.MsgMintAndDistributeBadges.badgeMetadataTimeline:type_name -> badges.v0.BadgeMetadataTimeline
	25, // 24: badges.v0.MsgMintAndDistributeBadges.offChainBalancesMetadataTimeline:type_name -> badges.v0.OffChainBalancesMetadataTimeline
	22, // 25: badges.v0.MsgMintAndDistributeBadges.collectionApprovals:type_name -> badges.v0.CollectionApproval
	32, // 26: badges.v0.MsgMintAndDistributeBadges.addressLists:type_name -> badges.v0.AddressList
	22, // 27: badges.v0.MsgUniversalUpdateCollectionApprovals.collectionApprovals:type_name -> badges.v0.CollectionApproval
	32, // 28: badges.v0.MsgUniversalUpdateCollectionApprovals.addressLists:type_name -> badges.v0.AddressList
	23, // 29: badges.v0.MsgUpdateMetadata.collectionMetadataTimeline:type_name -> badges.v0.CollectionMetadataTimeline
	24, // 30: badges.v0.MsgUpdateMetadata.badgeMetadataTimeline:type_name -> badges.v0.BadgeMetadataTimeline
	25, // 31: badges.v0.MsgUpdateMetadata.offChainBalancesMetadataTimeline:type_name -> badges.v0.OffChainBalancesMetadataTimeline
	26, // 32: badges.v0.MsgUpdateMetadata.customDataTimeline:type_name -> badges.v0.CustomDataTimeline
	31, // 33: badges.v0.MsgUpdateMetadata.contractAddressTimeline:type_name -> badges.v0.ContractAddressTimeline
	28, // 34: badges.v0.MsgUpdateMetadata.standardsTimeline:type_name -> badges.v0.StandardsTimeline
	27, // 35: badges.v0.MsgUniversalUpdateCollectionPermissions.permissions:type_name -> badges.v0.CollectionPermissions
	32, // 36: badges.v0.MsgUniversalUpdateCollectionPermissions.addressLists:type_name -> badges.v0.AddressList
	33, // 37: badges.v0.MsgUpdateUserPermissions.permissions:type_name -> badges.v0.UserPermissions
	32, // 38: badges.v0.MsgUpdateUserPermissions.addressLists:type_name -> badges.v0.AddressList
	34, // 39: badges.v0.MsgUpdateManager.managerTimeline:type_name -> badges.v0.ManagerTimeline
	35, // 40: badges.v0.MsgArchiveCollection.isArchivedTimeline:type_name -> badges.v0.IsArchivedTimeline
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_badges_v0_legacytx_proto_init() }
func file_badges_v0_legacytx_proto_init() {
	if File_badges_v0_legacytx_proto != nil {
		return
	}
	file_badges_v0_transfers_proto_init()
	file_badges_v0_balances_proto_init()
	file_badges_v0_permissions_proto_init()
	file_badges_v0_metadata_proto_init()
	file_badges_v0_collections_proto_init()
	file_badges_v0_address_lists_proto_init()
	file_badges_v0_timelines_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_badges_v0_legacytx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOutgoingApprovalTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIncomingApprovalTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionApprovalTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintAndDistributeBadges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintAndDistributeBadgesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollectionApprovals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollectionApprovalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollectionPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollectionPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateManagerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgArchiveCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_v0_legacytx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgArchiveCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badges_v0_legacytx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_badges_v0_legacytx_proto_goTypes,
		DependencyIndexes: file_badges_v0_legacytx_proto_depIdxs,
		MessageInfos:      file_badges_v0_legacytx_proto_msgTypes,
	}.Build()
	File_badges_v0_legacytx_proto = out.File
	file_badges_v0_legacytx_proto_rawDesc = nil
	file_badges_v0_legacytx_proto_goTypes = nil
	file_badges_v0_legacytx_proto_depIdxs = nil
}
