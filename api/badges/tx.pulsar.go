// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package badges

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateParams           protoreflect.MessageDescriptor
	fd_MsgUpdateParams_authority protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params    protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateParams = File_badges_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUpdateParams.authority":
		return x.Authority != ""
	case "badges.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUpdateParams.authority":
		x.Authority = ""
	case "badges.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "badges.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "badges.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "badges.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message badges.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "badges.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateParamsResponse = File_badges_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BadgeCustomMsgType                              protoreflect.MessageDescriptor
	fd_BadgeCustomMsgType_createAddressListsMsg        protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_universalUpdateCollectionMsg protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_deleteCollectionMsg          protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_transferBadgesMsg            protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_updateUserApprovalsMsg       protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_updateCollectionMsg          protoreflect.FieldDescriptor
	fd_BadgeCustomMsgType_createCollectionMsg          protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_BadgeCustomMsgType = File_badges_tx_proto.Messages().ByName("BadgeCustomMsgType")
	fd_BadgeCustomMsgType_createAddressListsMsg = md_BadgeCustomMsgType.Fields().ByName("createAddressListsMsg")
	fd_BadgeCustomMsgType_universalUpdateCollectionMsg = md_BadgeCustomMsgType.Fields().ByName("universalUpdateCollectionMsg")
	fd_BadgeCustomMsgType_deleteCollectionMsg = md_BadgeCustomMsgType.Fields().ByName("deleteCollectionMsg")
	fd_BadgeCustomMsgType_transferBadgesMsg = md_BadgeCustomMsgType.Fields().ByName("transferBadgesMsg")
	fd_BadgeCustomMsgType_updateUserApprovalsMsg = md_BadgeCustomMsgType.Fields().ByName("updateUserApprovalsMsg")
	fd_BadgeCustomMsgType_updateCollectionMsg = md_BadgeCustomMsgType.Fields().ByName("updateCollectionMsg")
	fd_BadgeCustomMsgType_createCollectionMsg = md_BadgeCustomMsgType.Fields().ByName("createCollectionMsg")
}

var _ protoreflect.Message = (*fastReflection_BadgeCustomMsgType)(nil)

type fastReflection_BadgeCustomMsgType BadgeCustomMsgType

func (x *BadgeCustomMsgType) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BadgeCustomMsgType)(x)
}

func (x *BadgeCustomMsgType) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BadgeCustomMsgType_messageType fastReflection_BadgeCustomMsgType_messageType
var _ protoreflect.MessageType = fastReflection_BadgeCustomMsgType_messageType{}

type fastReflection_BadgeCustomMsgType_messageType struct{}

func (x fastReflection_BadgeCustomMsgType_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BadgeCustomMsgType)(nil)
}
func (x fastReflection_BadgeCustomMsgType_messageType) New() protoreflect.Message {
	return new(fastReflection_BadgeCustomMsgType)
}
func (x fastReflection_BadgeCustomMsgType_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BadgeCustomMsgType
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BadgeCustomMsgType) Descriptor() protoreflect.MessageDescriptor {
	return md_BadgeCustomMsgType
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BadgeCustomMsgType) Type() protoreflect.MessageType {
	return _fastReflection_BadgeCustomMsgType_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BadgeCustomMsgType) New() protoreflect.Message {
	return new(fastReflection_BadgeCustomMsgType)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BadgeCustomMsgType) Interface() protoreflect.ProtoMessage {
	return (*BadgeCustomMsgType)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BadgeCustomMsgType) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CreateAddressListsMsg != nil {
		value := protoreflect.ValueOfMessage(x.CreateAddressListsMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_createAddressListsMsg, value) {
			return
		}
	}
	if x.UniversalUpdateCollectionMsg != nil {
		value := protoreflect.ValueOfMessage(x.UniversalUpdateCollectionMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_universalUpdateCollectionMsg, value) {
			return
		}
	}
	if x.DeleteCollectionMsg != nil {
		value := protoreflect.ValueOfMessage(x.DeleteCollectionMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_deleteCollectionMsg, value) {
			return
		}
	}
	if x.TransferBadgesMsg != nil {
		value := protoreflect.ValueOfMessage(x.TransferBadgesMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_transferBadgesMsg, value) {
			return
		}
	}
	if x.UpdateUserApprovalsMsg != nil {
		value := protoreflect.ValueOfMessage(x.UpdateUserApprovalsMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_updateUserApprovalsMsg, value) {
			return
		}
	}
	if x.UpdateCollectionMsg != nil {
		value := protoreflect.ValueOfMessage(x.UpdateCollectionMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_updateCollectionMsg, value) {
			return
		}
	}
	if x.CreateCollectionMsg != nil {
		value := protoreflect.ValueOfMessage(x.CreateCollectionMsg.ProtoReflect())
		if !f(fd_BadgeCustomMsgType_createCollectionMsg, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BadgeCustomMsgType) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		return x.CreateAddressListsMsg != nil
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		return x.UniversalUpdateCollectionMsg != nil
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		return x.DeleteCollectionMsg != nil
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		return x.TransferBadgesMsg != nil
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		return x.UpdateUserApprovalsMsg != nil
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		return x.UpdateCollectionMsg != nil
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		return x.CreateCollectionMsg != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeCustomMsgType) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		x.CreateAddressListsMsg = nil
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		x.UniversalUpdateCollectionMsg = nil
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		x.DeleteCollectionMsg = nil
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		x.TransferBadgesMsg = nil
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		x.UpdateUserApprovalsMsg = nil
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		x.UpdateCollectionMsg = nil
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		x.CreateCollectionMsg = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BadgeCustomMsgType) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		value := x.CreateAddressListsMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		value := x.UniversalUpdateCollectionMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		value := x.DeleteCollectionMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		value := x.TransferBadgesMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		value := x.UpdateUserApprovalsMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		value := x.UpdateCollectionMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		value := x.CreateCollectionMsg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeCustomMsgType) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		x.CreateAddressListsMsg = value.Message().Interface().(*MsgCreateAddressLists)
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		x.UniversalUpdateCollectionMsg = value.Message().Interface().(*MsgUniversalUpdateCollection)
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		x.DeleteCollectionMsg = value.Message().Interface().(*MsgDeleteCollection)
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		x.TransferBadgesMsg = value.Message().Interface().(*MsgTransferBadges)
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		x.UpdateUserApprovalsMsg = value.Message().Interface().(*MsgUpdateUserApprovals)
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		x.UpdateCollectionMsg = value.Message().Interface().(*MsgUpdateCollection)
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		x.CreateCollectionMsg = value.Message().Interface().(*MsgCreateCollection)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeCustomMsgType) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		if x.CreateAddressListsMsg == nil {
			x.CreateAddressListsMsg = new(MsgCreateAddressLists)
		}
		return protoreflect.ValueOfMessage(x.CreateAddressListsMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		if x.UniversalUpdateCollectionMsg == nil {
			x.UniversalUpdateCollectionMsg = new(MsgUniversalUpdateCollection)
		}
		return protoreflect.ValueOfMessage(x.UniversalUpdateCollectionMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		if x.DeleteCollectionMsg == nil {
			x.DeleteCollectionMsg = new(MsgDeleteCollection)
		}
		return protoreflect.ValueOfMessage(x.DeleteCollectionMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		if x.TransferBadgesMsg == nil {
			x.TransferBadgesMsg = new(MsgTransferBadges)
		}
		return protoreflect.ValueOfMessage(x.TransferBadgesMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		if x.UpdateUserApprovalsMsg == nil {
			x.UpdateUserApprovalsMsg = new(MsgUpdateUserApprovals)
		}
		return protoreflect.ValueOfMessage(x.UpdateUserApprovalsMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		if x.UpdateCollectionMsg == nil {
			x.UpdateCollectionMsg = new(MsgUpdateCollection)
		}
		return protoreflect.ValueOfMessage(x.UpdateCollectionMsg.ProtoReflect())
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		if x.CreateCollectionMsg == nil {
			x.CreateCollectionMsg = new(MsgCreateCollection)
		}
		return protoreflect.ValueOfMessage(x.CreateCollectionMsg.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BadgeCustomMsgType) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.BadgeCustomMsgType.createAddressListsMsg":
		m := new(MsgCreateAddressLists)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.universalUpdateCollectionMsg":
		m := new(MsgUniversalUpdateCollection)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.deleteCollectionMsg":
		m := new(MsgDeleteCollection)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.transferBadgesMsg":
		m := new(MsgTransferBadges)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateUserApprovalsMsg":
		m := new(MsgUpdateUserApprovals)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.updateCollectionMsg":
		m := new(MsgUpdateCollection)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.BadgeCustomMsgType.createCollectionMsg":
		m := new(MsgCreateCollection)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.BadgeCustomMsgType"))
		}
		panic(fmt.Errorf("message badges.BadgeCustomMsgType does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BadgeCustomMsgType) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.BadgeCustomMsgType", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BadgeCustomMsgType) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BadgeCustomMsgType) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BadgeCustomMsgType) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BadgeCustomMsgType) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BadgeCustomMsgType)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CreateAddressListsMsg != nil {
			l = options.Size(x.CreateAddressListsMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UniversalUpdateCollectionMsg != nil {
			l = options.Size(x.UniversalUpdateCollectionMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DeleteCollectionMsg != nil {
			l = options.Size(x.DeleteCollectionMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransferBadgesMsg != nil {
			l = options.Size(x.TransferBadgesMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateUserApprovalsMsg != nil {
			l = options.Size(x.UpdateUserApprovalsMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateCollectionMsg != nil {
			l = options.Size(x.UpdateCollectionMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreateCollectionMsg != nil {
			l = options.Size(x.CreateCollectionMsg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BadgeCustomMsgType)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CreateCollectionMsg != nil {
			encoded, err := options.Marshal(x.CreateCollectionMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.UpdateCollectionMsg != nil {
			encoded, err := options.Marshal(x.UpdateCollectionMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.UpdateUserApprovalsMsg != nil {
			encoded, err := options.Marshal(x.UpdateUserApprovalsMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.TransferBadgesMsg != nil {
			encoded, err := options.Marshal(x.TransferBadgesMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.DeleteCollectionMsg != nil {
			encoded, err := options.Marshal(x.DeleteCollectionMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.UniversalUpdateCollectionMsg != nil {
			encoded, err := options.Marshal(x.UniversalUpdateCollectionMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.CreateAddressListsMsg != nil {
			encoded, err := options.Marshal(x.CreateAddressListsMsg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BadgeCustomMsgType)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BadgeCustomMsgType: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BadgeCustomMsgType: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateAddressListsMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateAddressListsMsg == nil {
					x.CreateAddressListsMsg = &MsgCreateAddressLists{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateAddressListsMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UniversalUpdateCollectionMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UniversalUpdateCollectionMsg == nil {
					x.UniversalUpdateCollectionMsg = &MsgUniversalUpdateCollection{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UniversalUpdateCollectionMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeleteCollectionMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DeleteCollectionMsg == nil {
					x.DeleteCollectionMsg = &MsgDeleteCollection{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DeleteCollectionMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferBadgesMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransferBadgesMsg == nil {
					x.TransferBadgesMsg = &MsgTransferBadges{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransferBadgesMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateUserApprovalsMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UpdateUserApprovalsMsg == nil {
					x.UpdateUserApprovalsMsg = &MsgUpdateUserApprovals{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UpdateUserApprovalsMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UpdateCollectionMsg == nil {
					x.UpdateCollectionMsg = &MsgUpdateCollection{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UpdateCollectionMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateCollectionMsg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateCollectionMsg == nil {
					x.CreateCollectionMsg = &MsgCreateCollection{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateCollectionMsg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_6_list)(nil)

type _MsgUniversalUpdateCollection_6_list struct {
	list *[]*UintRange
}

func (x *_MsgUniversalUpdateCollection_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_6_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_6_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_10_list)(nil)

type _MsgUniversalUpdateCollection_10_list struct {
	list *[]*ManagerTimeline
}

func (x *_MsgUniversalUpdateCollection_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_10_list) AppendMutable() protoreflect.Value {
	v := new(ManagerTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_10_list) NewElement() protoreflect.Value {
	v := new(ManagerTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_12_list)(nil)

type _MsgUniversalUpdateCollection_12_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgUniversalUpdateCollection_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_12_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_12_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_14_list)(nil)

type _MsgUniversalUpdateCollection_14_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgUniversalUpdateCollection_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_14_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_14_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_14_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_16_list)(nil)

type _MsgUniversalUpdateCollection_16_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgUniversalUpdateCollection_16_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_16_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_16_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_16_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_16_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_16_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_16_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_16_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_18_list)(nil)

type _MsgUniversalUpdateCollection_18_list struct {
	list *[]*CustomDataTimeline
}

func (x *_MsgUniversalUpdateCollection_18_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_18_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_18_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_18_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_18_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_18_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_18_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_18_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_22_list)(nil)

type _MsgUniversalUpdateCollection_22_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgUniversalUpdateCollection_22_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_22_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_22_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_22_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_22_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_22_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_22_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_22_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_24_list)(nil)

type _MsgUniversalUpdateCollection_24_list struct {
	list *[]*StandardsTimeline
}

func (x *_MsgUniversalUpdateCollection_24_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_24_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_24_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_24_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_24_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_24_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_24_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_24_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUniversalUpdateCollection_26_list)(nil)

type _MsgUniversalUpdateCollection_26_list struct {
	list *[]*IsArchivedTimeline
}

func (x *_MsgUniversalUpdateCollection_26_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUniversalUpdateCollection_26_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_26_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUniversalUpdateCollection_26_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUniversalUpdateCollection_26_list) AppendMutable() protoreflect.Value {
	v := new(IsArchivedTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_26_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUniversalUpdateCollection_26_list) NewElement() protoreflect.Value {
	v := new(IsArchivedTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUniversalUpdateCollection_26_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUniversalUpdateCollection                                        protoreflect.MessageDescriptor
	fd_MsgUniversalUpdateCollection_creator                                protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_collectionId                           protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_balancesType                           protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_defaultBalances                        protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateValidBadgeIds                    protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_validBadgeIds                          protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateCollectionPermissions            protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_collectionPermissions                  protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateManagerTimeline                  protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_managerTimeline                        protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateCollectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_collectionMetadataTimeline             protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateBadgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_badgeMetadataTimeline                  protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateOffChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_offChainBalancesMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateCustomDataTimeline               protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_customDataTimeline                     protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateCollectionApprovals              protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_collectionApprovals                    protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateStandardsTimeline                protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_standardsTimeline                      protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_updateIsArchivedTimeline               protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_isArchivedTimeline                     protoreflect.FieldDescriptor
	fd_MsgUniversalUpdateCollection_creatorOverride                        protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUniversalUpdateCollection = File_badges_tx_proto.Messages().ByName("MsgUniversalUpdateCollection")
	fd_MsgUniversalUpdateCollection_creator = md_MsgUniversalUpdateCollection.Fields().ByName("creator")
	fd_MsgUniversalUpdateCollection_collectionId = md_MsgUniversalUpdateCollection.Fields().ByName("collectionId")
	fd_MsgUniversalUpdateCollection_balancesType = md_MsgUniversalUpdateCollection.Fields().ByName("balancesType")
	fd_MsgUniversalUpdateCollection_defaultBalances = md_MsgUniversalUpdateCollection.Fields().ByName("defaultBalances")
	fd_MsgUniversalUpdateCollection_updateValidBadgeIds = md_MsgUniversalUpdateCollection.Fields().ByName("updateValidBadgeIds")
	fd_MsgUniversalUpdateCollection_validBadgeIds = md_MsgUniversalUpdateCollection.Fields().ByName("validBadgeIds")
	fd_MsgUniversalUpdateCollection_updateCollectionPermissions = md_MsgUniversalUpdateCollection.Fields().ByName("updateCollectionPermissions")
	fd_MsgUniversalUpdateCollection_collectionPermissions = md_MsgUniversalUpdateCollection.Fields().ByName("collectionPermissions")
	fd_MsgUniversalUpdateCollection_updateManagerTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateManagerTimeline")
	fd_MsgUniversalUpdateCollection_managerTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("managerTimeline")
	fd_MsgUniversalUpdateCollection_updateCollectionMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateCollectionMetadataTimeline")
	fd_MsgUniversalUpdateCollection_collectionMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("collectionMetadataTimeline")
	fd_MsgUniversalUpdateCollection_updateBadgeMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateBadgeMetadataTimeline")
	fd_MsgUniversalUpdateCollection_badgeMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("badgeMetadataTimeline")
	fd_MsgUniversalUpdateCollection_updateOffChainBalancesMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateOffChainBalancesMetadataTimeline")
	fd_MsgUniversalUpdateCollection_offChainBalancesMetadataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgUniversalUpdateCollection_updateCustomDataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateCustomDataTimeline")
	fd_MsgUniversalUpdateCollection_customDataTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("customDataTimeline")
	fd_MsgUniversalUpdateCollection_updateCollectionApprovals = md_MsgUniversalUpdateCollection.Fields().ByName("updateCollectionApprovals")
	fd_MsgUniversalUpdateCollection_collectionApprovals = md_MsgUniversalUpdateCollection.Fields().ByName("collectionApprovals")
	fd_MsgUniversalUpdateCollection_updateStandardsTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateStandardsTimeline")
	fd_MsgUniversalUpdateCollection_standardsTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("standardsTimeline")
	fd_MsgUniversalUpdateCollection_updateIsArchivedTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("updateIsArchivedTimeline")
	fd_MsgUniversalUpdateCollection_isArchivedTimeline = md_MsgUniversalUpdateCollection.Fields().ByName("isArchivedTimeline")
	fd_MsgUniversalUpdateCollection_creatorOverride = md_MsgUniversalUpdateCollection.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollection)(nil)

type fastReflection_MsgUniversalUpdateCollection MsgUniversalUpdateCollection

func (x *MsgUniversalUpdateCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollection)(x)
}

func (x *MsgUniversalUpdateCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollection_messageType fastReflection_MsgUniversalUpdateCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollection_messageType{}

type fastReflection_MsgUniversalUpdateCollection_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollection)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollection)
}
func (x fastReflection_MsgUniversalUpdateCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollection) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUniversalUpdateCollection_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUniversalUpdateCollection_collectionId, value) {
			return
		}
	}
	if x.BalancesType != "" {
		value := protoreflect.ValueOfString(x.BalancesType)
		if !f(fd_MsgUniversalUpdateCollection_balancesType, value) {
			return
		}
	}
	if x.DefaultBalances != nil {
		value := protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
		if !f(fd_MsgUniversalUpdateCollection_defaultBalances, value) {
			return
		}
	}
	if x.UpdateValidBadgeIds != false {
		value := protoreflect.ValueOfBool(x.UpdateValidBadgeIds)
		if !f(fd_MsgUniversalUpdateCollection_updateValidBadgeIds, value) {
			return
		}
	}
	if len(x.ValidBadgeIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_6_list{list: &x.ValidBadgeIds})
		if !f(fd_MsgUniversalUpdateCollection_validBadgeIds, value) {
			return
		}
	}
	if x.UpdateCollectionPermissions != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionPermissions)
		if !f(fd_MsgUniversalUpdateCollection_updateCollectionPermissions, value) {
			return
		}
	}
	if x.CollectionPermissions != nil {
		value := protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
		if !f(fd_MsgUniversalUpdateCollection_collectionPermissions, value) {
			return
		}
	}
	if x.UpdateManagerTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateManagerTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateManagerTimeline, value) {
			return
		}
	}
	if len(x.ManagerTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_10_list{list: &x.ManagerTimeline})
		if !f(fd_MsgUniversalUpdateCollection_managerTimeline, value) {
			return
		}
	}
	if x.UpdateCollectionMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionMetadataTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateCollectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_12_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgUniversalUpdateCollection_collectionMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateBadgeMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateBadgeMetadataTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateBadgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_14_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgUniversalUpdateCollection_badgeMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateOffChainBalancesMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateOffChainBalancesMetadataTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateOffChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgUniversalUpdateCollection_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateCustomDataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateCustomDataTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateCustomDataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_18_list{list: &x.CustomDataTimeline})
		if !f(fd_MsgUniversalUpdateCollection_customDataTimeline, value) {
			return
		}
	}
	if x.UpdateCollectionApprovals != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionApprovals)
		if !f(fd_MsgUniversalUpdateCollection_updateCollectionApprovals, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_22_list{list: &x.CollectionApprovals})
		if !f(fd_MsgUniversalUpdateCollection_collectionApprovals, value) {
			return
		}
	}
	if x.UpdateStandardsTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateStandardsTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateStandardsTimeline, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_24_list{list: &x.StandardsTimeline})
		if !f(fd_MsgUniversalUpdateCollection_standardsTimeline, value) {
			return
		}
	}
	if x.UpdateIsArchivedTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateIsArchivedTimeline)
		if !f(fd_MsgUniversalUpdateCollection_updateIsArchivedTimeline, value) {
			return
		}
	}
	if len(x.IsArchivedTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_26_list{list: &x.IsArchivedTimeline})
		if !f(fd_MsgUniversalUpdateCollection_isArchivedTimeline, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgUniversalUpdateCollection_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollection.creator":
		return x.Creator != ""
	case "badges.MsgUniversalUpdateCollection.collectionId":
		return x.CollectionId != ""
	case "badges.MsgUniversalUpdateCollection.balancesType":
		return x.BalancesType != ""
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		return x.DefaultBalances != nil
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		return x.UpdateValidBadgeIds != false
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		return len(x.ValidBadgeIds) != 0
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		return x.UpdateCollectionPermissions != false
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		return x.CollectionPermissions != nil
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		return x.UpdateManagerTimeline != false
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		return len(x.ManagerTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		return x.UpdateCollectionMetadataTimeline != false
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		return x.UpdateBadgeMetadataTimeline != false
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		return x.UpdateOffChainBalancesMetadataTimeline != false
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		return x.UpdateCustomDataTimeline != false
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		return x.UpdateCollectionApprovals != false
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		return x.UpdateStandardsTimeline != false
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		return x.UpdateIsArchivedTimeline != false
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		return len(x.IsArchivedTimeline) != 0
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollection.creator":
		x.Creator = ""
	case "badges.MsgUniversalUpdateCollection.collectionId":
		x.CollectionId = ""
	case "badges.MsgUniversalUpdateCollection.balancesType":
		x.BalancesType = ""
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		x.DefaultBalances = nil
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		x.UpdateValidBadgeIds = false
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		x.ValidBadgeIds = nil
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		x.UpdateCollectionPermissions = false
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		x.CollectionPermissions = nil
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		x.UpdateManagerTimeline = false
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		x.ManagerTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		x.UpdateCollectionMetadataTimeline = false
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		x.UpdateBadgeMetadataTimeline = false
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		x.UpdateOffChainBalancesMetadataTimeline = false
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		x.UpdateCustomDataTimeline = false
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		x.UpdateCollectionApprovals = false
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		x.UpdateStandardsTimeline = false
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		x.StandardsTimeline = nil
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		x.UpdateIsArchivedTimeline = false
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		x.IsArchivedTimeline = nil
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUniversalUpdateCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgUniversalUpdateCollection.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.MsgUniversalUpdateCollection.balancesType":
		value := x.BalancesType
		return protoreflect.ValueOfString(value)
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		value := x.DefaultBalances
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		value := x.UpdateValidBadgeIds
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		if len(x.ValidBadgeIds) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_6_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_6_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		value := x.UpdateCollectionPermissions
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		value := x.CollectionPermissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		value := x.UpdateManagerTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		if len(x.ManagerTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_10_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_10_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		value := x.UpdateCollectionMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_12_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_12_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		value := x.UpdateBadgeMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_14_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_14_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		value := x.UpdateOffChainBalancesMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_16_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		value := x.UpdateCustomDataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_18_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_18_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		value := x.UpdateCollectionApprovals
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_22_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_22_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		value := x.UpdateStandardsTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_24_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_24_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		value := x.UpdateIsArchivedTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		if len(x.IsArchivedTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_26_list{})
		}
		listValue := &_MsgUniversalUpdateCollection_26_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgUniversalUpdateCollection.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.MsgUniversalUpdateCollection.balancesType":
		x.BalancesType = value.Interface().(string)
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		x.DefaultBalances = value.Message().Interface().(*UserBalanceStore)
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		x.UpdateValidBadgeIds = value.Bool()
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_6_list)
		x.ValidBadgeIds = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		x.UpdateCollectionPermissions = value.Bool()
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		x.CollectionPermissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		x.UpdateManagerTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_10_list)
		x.ManagerTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		x.UpdateCollectionMetadataTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_12_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		x.UpdateBadgeMetadataTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_14_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		x.UpdateOffChainBalancesMetadataTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_16_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		x.UpdateCustomDataTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_18_list)
		x.CustomDataTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		x.UpdateCollectionApprovals = value.Bool()
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_22_list)
		x.CollectionApprovals = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		x.UpdateStandardsTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_24_list)
		x.StandardsTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		x.UpdateIsArchivedTimeline = value.Bool()
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		lv := value.List()
		clv := lv.(*_MsgUniversalUpdateCollection_26_list)
		x.IsArchivedTimeline = *clv.list
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		if x.DefaultBalances == nil {
			x.DefaultBalances = new(UserBalanceStore)
		}
		return protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		if x.ValidBadgeIds == nil {
			x.ValidBadgeIds = []*UintRange{}
		}
		value := &_MsgUniversalUpdateCollection_6_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		if x.CollectionPermissions == nil {
			x.CollectionPermissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		if x.ManagerTimeline == nil {
			x.ManagerTimeline = []*ManagerTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_10_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_12_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_14_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_18_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgUniversalUpdateCollection_22_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_24_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		if x.IsArchivedTimeline == nil {
			x.IsArchivedTimeline = []*IsArchivedTimeline{}
		}
		value := &_MsgUniversalUpdateCollection_26_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUniversalUpdateCollection.creator":
		panic(fmt.Errorf("field creator of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.balancesType":
		panic(fmt.Errorf("field balancesType of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		panic(fmt.Errorf("field updateValidBadgeIds of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		panic(fmt.Errorf("field updateCollectionPermissions of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		panic(fmt.Errorf("field updateManagerTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		panic(fmt.Errorf("field updateCollectionMetadataTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		panic(fmt.Errorf("field updateBadgeMetadataTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		panic(fmt.Errorf("field updateOffChainBalancesMetadataTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		panic(fmt.Errorf("field updateCustomDataTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		panic(fmt.Errorf("field updateCollectionApprovals of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		panic(fmt.Errorf("field updateStandardsTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		panic(fmt.Errorf("field updateIsArchivedTimeline of message badges.MsgUniversalUpdateCollection is not mutable"))
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgUniversalUpdateCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgUniversalUpdateCollection.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.MsgUniversalUpdateCollection.balancesType":
		return protoreflect.ValueOfString("")
	case "badges.MsgUniversalUpdateCollection.defaultBalances":
		m := new(UserBalanceStore)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.updateValidBadgeIds":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.validBadgeIds":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_6_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateCollectionPermissions":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.collectionPermissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgUniversalUpdateCollection.updateManagerTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.managerTimeline":
		list := []*ManagerTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_10_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateCollectionMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_12_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateBadgeMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_14_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateOffChainBalancesMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_16_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateCustomDataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_18_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateCollectionApprovals":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_22_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateStandardsTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_24_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.updateIsArchivedTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUniversalUpdateCollection.isArchivedTimeline":
		list := []*IsArchivedTimeline{}
		return protoreflect.ValueOfList(&_MsgUniversalUpdateCollection_26_list{list: &list})
	case "badges.MsgUniversalUpdateCollection.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUniversalUpdateCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BalancesType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DefaultBalances != nil {
			l = options.Size(x.DefaultBalances)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateValidBadgeIds {
			n += 2
		}
		if len(x.ValidBadgeIds) > 0 {
			for _, e := range x.ValidBadgeIds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionPermissions {
			n += 2
		}
		if x.CollectionPermissions != nil {
			l = options.Size(x.CollectionPermissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateManagerTimeline {
			n += 2
		}
		if len(x.ManagerTimeline) > 0 {
			for _, e := range x.ManagerTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionMetadataTimeline {
			n += 2
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateBadgeMetadataTimeline {
			n += 2
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateOffChainBalancesMetadataTimeline {
			n += 2
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCustomDataTimeline {
			n += 3
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionApprovals {
			n += 3
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateStandardsTimeline {
			n += 3
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateIsArchivedTimeline {
			n += 3
		}
		if len(x.IsArchivedTimeline) > 0 {
			for _, e := range x.IsArchivedTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xda
		}
		if len(x.IsArchivedTimeline) > 0 {
			for iNdEx := len(x.IsArchivedTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IsArchivedTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xd2
			}
		}
		if x.UpdateIsArchivedTimeline {
			i--
			if x.UpdateIsArchivedTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xc8
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xc2
			}
		}
		if x.UpdateStandardsTimeline {
			i--
			if x.UpdateStandardsTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb8
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
		if x.UpdateCollectionApprovals {
			i--
			if x.UpdateCollectionApprovals {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa8
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x92
			}
		}
		if x.UpdateCustomDataTimeline {
			i--
			if x.UpdateCustomDataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x82
			}
		}
		if x.UpdateOffChainBalancesMetadataTimeline {
			i--
			if x.UpdateOffChainBalancesMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x78
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if x.UpdateBadgeMetadataTimeline {
			i--
			if x.UpdateBadgeMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x68
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if x.UpdateCollectionMetadataTimeline {
			i--
			if x.UpdateCollectionMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if len(x.ManagerTimeline) > 0 {
			for iNdEx := len(x.ManagerTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ManagerTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.UpdateManagerTimeline {
			i--
			if x.UpdateManagerTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x48
		}
		if x.CollectionPermissions != nil {
			encoded, err := options.Marshal(x.CollectionPermissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.UpdateCollectionPermissions {
			i--
			if x.UpdateCollectionPermissions {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if len(x.ValidBadgeIds) > 0 {
			for iNdEx := len(x.ValidBadgeIds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidBadgeIds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.UpdateValidBadgeIds {
			i--
			if x.UpdateValidBadgeIds {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.DefaultBalances != nil {
			encoded, err := options.Marshal(x.DefaultBalances)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BalancesType) > 0 {
			i -= len(x.BalancesType)
			copy(dAtA[i:], x.BalancesType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BalancesType)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BalancesType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BalancesType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultBalances", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DefaultBalances == nil {
					x.DefaultBalances = &UserBalanceStore{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultBalances); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateValidBadgeIds", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateValidBadgeIds = bool(v != 0)
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidBadgeIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidBadgeIds = append(x.ValidBadgeIds, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidBadgeIds[len(x.ValidBadgeIds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionPermissions", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionPermissions = bool(v != 0)
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionPermissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CollectionPermissions == nil {
					x.CollectionPermissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionPermissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateManagerTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateManagerTimeline = bool(v != 0)
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ManagerTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ManagerTimeline = append(x.ManagerTimeline, &ManagerTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ManagerTimeline[len(x.ManagerTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionMetadataTimeline = bool(v != 0)
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateBadgeMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateBadgeMetadataTimeline = bool(v != 0)
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateOffChainBalancesMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateOffChainBalancesMetadataTimeline = bool(v != 0)
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCustomDataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCustomDataTimeline = bool(v != 0)
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 21:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionApprovals", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionApprovals = bool(v != 0)
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 23:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateStandardsTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateStandardsTimeline = bool(v != 0)
			case 24:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 25:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateIsArchivedTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateIsArchivedTimeline = bool(v != 0)
			case 26:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchivedTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IsArchivedTimeline = append(x.IsArchivedTimeline, &IsArchivedTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IsArchivedTimeline[len(x.IsArchivedTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 27:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUniversalUpdateCollectionResponse              protoreflect.MessageDescriptor
	fd_MsgUniversalUpdateCollectionResponse_collectionId protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUniversalUpdateCollectionResponse = File_badges_tx_proto.Messages().ByName("MsgUniversalUpdateCollectionResponse")
	fd_MsgUniversalUpdateCollectionResponse_collectionId = md_MsgUniversalUpdateCollectionResponse.Fields().ByName("collectionId")
}

var _ protoreflect.Message = (*fastReflection_MsgUniversalUpdateCollectionResponse)(nil)

type fastReflection_MsgUniversalUpdateCollectionResponse MsgUniversalUpdateCollectionResponse

func (x *MsgUniversalUpdateCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionResponse)(x)
}

func (x *MsgUniversalUpdateCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUniversalUpdateCollectionResponse_messageType fastReflection_MsgUniversalUpdateCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUniversalUpdateCollectionResponse_messageType{}

type fastReflection_MsgUniversalUpdateCollectionResponse_messageType struct{}

func (x fastReflection_MsgUniversalUpdateCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUniversalUpdateCollectionResponse)(nil)
}
func (x fastReflection_MsgUniversalUpdateCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionResponse)
}
func (x fastReflection_MsgUniversalUpdateCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUniversalUpdateCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUniversalUpdateCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUniversalUpdateCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUniversalUpdateCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUniversalUpdateCollectionResponse_collectionId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		return x.CollectionId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		x.CollectionId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		x.CollectionId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgUniversalUpdateCollectionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUniversalUpdateCollectionResponse.collectionId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUniversalUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUniversalUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUniversalUpdateCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUniversalUpdateCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUniversalUpdateCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUniversalUpdateCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateCollection_4_list)(nil)

type _MsgUpdateCollection_4_list struct {
	list *[]*UintRange
}

func (x *_MsgUpdateCollection_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_4_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_4_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_10_list)(nil)

type _MsgUpdateCollection_10_list struct {
	list *[]*ManagerTimeline
}

func (x *_MsgUpdateCollection_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_10_list) AppendMutable() protoreflect.Value {
	v := new(ManagerTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_10_list) NewElement() protoreflect.Value {
	v := new(ManagerTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_12_list)(nil)

type _MsgUpdateCollection_12_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgUpdateCollection_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_12_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_12_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_14_list)(nil)

type _MsgUpdateCollection_14_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgUpdateCollection_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_14_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_14_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_14_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_16_list)(nil)

type _MsgUpdateCollection_16_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgUpdateCollection_16_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_16_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_16_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_16_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_16_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_16_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_16_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_16_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_18_list)(nil)

type _MsgUpdateCollection_18_list struct {
	list *[]*CustomDataTimeline
}

func (x *_MsgUpdateCollection_18_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_18_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_18_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_18_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_18_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_18_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_18_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_18_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_22_list)(nil)

type _MsgUpdateCollection_22_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgUpdateCollection_22_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_22_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_22_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_22_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_22_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_22_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_22_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_22_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_24_list)(nil)

type _MsgUpdateCollection_24_list struct {
	list *[]*StandardsTimeline
}

func (x *_MsgUpdateCollection_24_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_24_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_24_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_24_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_24_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_24_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_24_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_24_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateCollection_28_list)(nil)

type _MsgUpdateCollection_28_list struct {
	list *[]*IsArchivedTimeline
}

func (x *_MsgUpdateCollection_28_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateCollection_28_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateCollection_28_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateCollection_28_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateCollection_28_list) AppendMutable() protoreflect.Value {
	v := new(IsArchivedTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_28_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateCollection_28_list) NewElement() protoreflect.Value {
	v := new(IsArchivedTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateCollection_28_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateCollection                                        protoreflect.MessageDescriptor
	fd_MsgUpdateCollection_creator                                protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_collectionId                           protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateValidBadgeIds                    protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_validBadgeIds                          protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateCollectionPermissions            protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_collectionPermissions                  protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateManagerTimeline                  protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_managerTimeline                        protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateCollectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_collectionMetadataTimeline             protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateBadgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_badgeMetadataTimeline                  protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateOffChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_offChainBalancesMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateCustomDataTimeline               protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_customDataTimeline                     protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateCollectionApprovals              protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_collectionApprovals                    protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateStandardsTimeline                protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_standardsTimeline                      protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_updateIsArchivedTimeline               protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_isArchivedTimeline                     protoreflect.FieldDescriptor
	fd_MsgUpdateCollection_creatorOverride                        protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateCollection = File_badges_tx_proto.Messages().ByName("MsgUpdateCollection")
	fd_MsgUpdateCollection_creator = md_MsgUpdateCollection.Fields().ByName("creator")
	fd_MsgUpdateCollection_collectionId = md_MsgUpdateCollection.Fields().ByName("collectionId")
	fd_MsgUpdateCollection_updateValidBadgeIds = md_MsgUpdateCollection.Fields().ByName("updateValidBadgeIds")
	fd_MsgUpdateCollection_validBadgeIds = md_MsgUpdateCollection.Fields().ByName("validBadgeIds")
	fd_MsgUpdateCollection_updateCollectionPermissions = md_MsgUpdateCollection.Fields().ByName("updateCollectionPermissions")
	fd_MsgUpdateCollection_collectionPermissions = md_MsgUpdateCollection.Fields().ByName("collectionPermissions")
	fd_MsgUpdateCollection_updateManagerTimeline = md_MsgUpdateCollection.Fields().ByName("updateManagerTimeline")
	fd_MsgUpdateCollection_managerTimeline = md_MsgUpdateCollection.Fields().ByName("managerTimeline")
	fd_MsgUpdateCollection_updateCollectionMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("updateCollectionMetadataTimeline")
	fd_MsgUpdateCollection_collectionMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("collectionMetadataTimeline")
	fd_MsgUpdateCollection_updateBadgeMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("updateBadgeMetadataTimeline")
	fd_MsgUpdateCollection_badgeMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("badgeMetadataTimeline")
	fd_MsgUpdateCollection_updateOffChainBalancesMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("updateOffChainBalancesMetadataTimeline")
	fd_MsgUpdateCollection_offChainBalancesMetadataTimeline = md_MsgUpdateCollection.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgUpdateCollection_updateCustomDataTimeline = md_MsgUpdateCollection.Fields().ByName("updateCustomDataTimeline")
	fd_MsgUpdateCollection_customDataTimeline = md_MsgUpdateCollection.Fields().ByName("customDataTimeline")
	fd_MsgUpdateCollection_updateCollectionApprovals = md_MsgUpdateCollection.Fields().ByName("updateCollectionApprovals")
	fd_MsgUpdateCollection_collectionApprovals = md_MsgUpdateCollection.Fields().ByName("collectionApprovals")
	fd_MsgUpdateCollection_updateStandardsTimeline = md_MsgUpdateCollection.Fields().ByName("updateStandardsTimeline")
	fd_MsgUpdateCollection_standardsTimeline = md_MsgUpdateCollection.Fields().ByName("standardsTimeline")
	fd_MsgUpdateCollection_updateIsArchivedTimeline = md_MsgUpdateCollection.Fields().ByName("updateIsArchivedTimeline")
	fd_MsgUpdateCollection_isArchivedTimeline = md_MsgUpdateCollection.Fields().ByName("isArchivedTimeline")
	fd_MsgUpdateCollection_creatorOverride = md_MsgUpdateCollection.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateCollection)(nil)

type fastReflection_MsgUpdateCollection MsgUpdateCollection

func (x *MsgUpdateCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateCollection)(x)
}

func (x *MsgUpdateCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateCollection_messageType fastReflection_MsgUpdateCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateCollection_messageType{}

type fastReflection_MsgUpdateCollection_messageType struct{}

func (x fastReflection_MsgUpdateCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateCollection)(nil)
}
func (x fastReflection_MsgUpdateCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCollection)
}
func (x fastReflection_MsgUpdateCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateCollection) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateCollection_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateCollection_collectionId, value) {
			return
		}
	}
	if x.UpdateValidBadgeIds != false {
		value := protoreflect.ValueOfBool(x.UpdateValidBadgeIds)
		if !f(fd_MsgUpdateCollection_updateValidBadgeIds, value) {
			return
		}
	}
	if len(x.ValidBadgeIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_4_list{list: &x.ValidBadgeIds})
		if !f(fd_MsgUpdateCollection_validBadgeIds, value) {
			return
		}
	}
	if x.UpdateCollectionPermissions != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionPermissions)
		if !f(fd_MsgUpdateCollection_updateCollectionPermissions, value) {
			return
		}
	}
	if x.CollectionPermissions != nil {
		value := protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
		if !f(fd_MsgUpdateCollection_collectionPermissions, value) {
			return
		}
	}
	if x.UpdateManagerTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateManagerTimeline)
		if !f(fd_MsgUpdateCollection_updateManagerTimeline, value) {
			return
		}
	}
	if len(x.ManagerTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_10_list{list: &x.ManagerTimeline})
		if !f(fd_MsgUpdateCollection_managerTimeline, value) {
			return
		}
	}
	if x.UpdateCollectionMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionMetadataTimeline)
		if !f(fd_MsgUpdateCollection_updateCollectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_12_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgUpdateCollection_collectionMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateBadgeMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateBadgeMetadataTimeline)
		if !f(fd_MsgUpdateCollection_updateBadgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_14_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgUpdateCollection_badgeMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateOffChainBalancesMetadataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateOffChainBalancesMetadataTimeline)
		if !f(fd_MsgUpdateCollection_updateOffChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgUpdateCollection_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if x.UpdateCustomDataTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateCustomDataTimeline)
		if !f(fd_MsgUpdateCollection_updateCustomDataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_18_list{list: &x.CustomDataTimeline})
		if !f(fd_MsgUpdateCollection_customDataTimeline, value) {
			return
		}
	}
	if x.UpdateCollectionApprovals != false {
		value := protoreflect.ValueOfBool(x.UpdateCollectionApprovals)
		if !f(fd_MsgUpdateCollection_updateCollectionApprovals, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_22_list{list: &x.CollectionApprovals})
		if !f(fd_MsgUpdateCollection_collectionApprovals, value) {
			return
		}
	}
	if x.UpdateStandardsTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateStandardsTimeline)
		if !f(fd_MsgUpdateCollection_updateStandardsTimeline, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_24_list{list: &x.StandardsTimeline})
		if !f(fd_MsgUpdateCollection_standardsTimeline, value) {
			return
		}
	}
	if x.UpdateIsArchivedTimeline != false {
		value := protoreflect.ValueOfBool(x.UpdateIsArchivedTimeline)
		if !f(fd_MsgUpdateCollection_updateIsArchivedTimeline, value) {
			return
		}
	}
	if len(x.IsArchivedTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateCollection_28_list{list: &x.IsArchivedTimeline})
		if !f(fd_MsgUpdateCollection_isArchivedTimeline, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgUpdateCollection_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUpdateCollection.creator":
		return x.Creator != ""
	case "badges.MsgUpdateCollection.collectionId":
		return x.CollectionId != ""
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		return x.UpdateValidBadgeIds != false
	case "badges.MsgUpdateCollection.validBadgeIds":
		return len(x.ValidBadgeIds) != 0
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		return x.UpdateCollectionPermissions != false
	case "badges.MsgUpdateCollection.collectionPermissions":
		return x.CollectionPermissions != nil
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		return x.UpdateManagerTimeline != false
	case "badges.MsgUpdateCollection.managerTimeline":
		return len(x.ManagerTimeline) != 0
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		return x.UpdateCollectionMetadataTimeline != false
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		return x.UpdateBadgeMetadataTimeline != false
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		return x.UpdateOffChainBalancesMetadataTimeline != false
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		return x.UpdateCustomDataTimeline != false
	case "badges.MsgUpdateCollection.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		return x.UpdateCollectionApprovals != false
	case "badges.MsgUpdateCollection.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		return x.UpdateStandardsTimeline != false
	case "badges.MsgUpdateCollection.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		return x.UpdateIsArchivedTimeline != false
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		return len(x.IsArchivedTimeline) != 0
	case "badges.MsgUpdateCollection.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUpdateCollection.creator":
		x.Creator = ""
	case "badges.MsgUpdateCollection.collectionId":
		x.CollectionId = ""
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		x.UpdateValidBadgeIds = false
	case "badges.MsgUpdateCollection.validBadgeIds":
		x.ValidBadgeIds = nil
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		x.UpdateCollectionPermissions = false
	case "badges.MsgUpdateCollection.collectionPermissions":
		x.CollectionPermissions = nil
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		x.UpdateManagerTimeline = false
	case "badges.MsgUpdateCollection.managerTimeline":
		x.ManagerTimeline = nil
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		x.UpdateCollectionMetadataTimeline = false
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		x.UpdateBadgeMetadataTimeline = false
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		x.UpdateOffChainBalancesMetadataTimeline = false
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		x.UpdateCustomDataTimeline = false
	case "badges.MsgUpdateCollection.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		x.UpdateCollectionApprovals = false
	case "badges.MsgUpdateCollection.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		x.UpdateStandardsTimeline = false
	case "badges.MsgUpdateCollection.standardsTimeline":
		x.StandardsTimeline = nil
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		x.UpdateIsArchivedTimeline = false
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		x.IsArchivedTimeline = nil
	case "badges.MsgUpdateCollection.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUpdateCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgUpdateCollection.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		value := x.UpdateValidBadgeIds
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.validBadgeIds":
		if len(x.ValidBadgeIds) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_4_list{})
		}
		listValue := &_MsgUpdateCollection_4_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		value := x.UpdateCollectionPermissions
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.collectionPermissions":
		value := x.CollectionPermissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		value := x.UpdateManagerTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.managerTimeline":
		if len(x.ManagerTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_10_list{})
		}
		listValue := &_MsgUpdateCollection_10_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		value := x.UpdateCollectionMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_12_list{})
		}
		listValue := &_MsgUpdateCollection_12_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		value := x.UpdateBadgeMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_14_list{})
		}
		listValue := &_MsgUpdateCollection_14_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		value := x.UpdateOffChainBalancesMetadataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_16_list{})
		}
		listValue := &_MsgUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		value := x.UpdateCustomDataTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_18_list{})
		}
		listValue := &_MsgUpdateCollection_18_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		value := x.UpdateCollectionApprovals
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_22_list{})
		}
		listValue := &_MsgUpdateCollection_22_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		value := x.UpdateStandardsTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_24_list{})
		}
		listValue := &_MsgUpdateCollection_24_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		value := x.UpdateIsArchivedTimeline
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		if len(x.IsArchivedTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateCollection_28_list{})
		}
		listValue := &_MsgUpdateCollection_28_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateCollection.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUpdateCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgUpdateCollection.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		x.UpdateValidBadgeIds = value.Bool()
	case "badges.MsgUpdateCollection.validBadgeIds":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_4_list)
		x.ValidBadgeIds = *clv.list
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		x.UpdateCollectionPermissions = value.Bool()
	case "badges.MsgUpdateCollection.collectionPermissions":
		x.CollectionPermissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		x.UpdateManagerTimeline = value.Bool()
	case "badges.MsgUpdateCollection.managerTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_10_list)
		x.ManagerTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		x.UpdateCollectionMetadataTimeline = value.Bool()
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_12_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		x.UpdateBadgeMetadataTimeline = value.Bool()
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_14_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		x.UpdateOffChainBalancesMetadataTimeline = value.Bool()
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_16_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		x.UpdateCustomDataTimeline = value.Bool()
	case "badges.MsgUpdateCollection.customDataTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_18_list)
		x.CustomDataTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		x.UpdateCollectionApprovals = value.Bool()
	case "badges.MsgUpdateCollection.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_22_list)
		x.CollectionApprovals = *clv.list
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		x.UpdateStandardsTimeline = value.Bool()
	case "badges.MsgUpdateCollection.standardsTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_24_list)
		x.StandardsTimeline = *clv.list
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		x.UpdateIsArchivedTimeline = value.Bool()
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		lv := value.List()
		clv := lv.(*_MsgUpdateCollection_28_list)
		x.IsArchivedTimeline = *clv.list
	case "badges.MsgUpdateCollection.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateCollection.validBadgeIds":
		if x.ValidBadgeIds == nil {
			x.ValidBadgeIds = []*UintRange{}
		}
		value := &_MsgUpdateCollection_4_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.collectionPermissions":
		if x.CollectionPermissions == nil {
			x.CollectionPermissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
	case "badges.MsgUpdateCollection.managerTimeline":
		if x.ManagerTimeline == nil {
			x.ManagerTimeline = []*ManagerTimeline{}
		}
		value := &_MsgUpdateCollection_10_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgUpdateCollection_12_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgUpdateCollection_14_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgUpdateCollection_16_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_MsgUpdateCollection_18_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgUpdateCollection_22_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_MsgUpdateCollection_24_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		if x.IsArchivedTimeline == nil {
			x.IsArchivedTimeline = []*IsArchivedTimeline{}
		}
		value := &_MsgUpdateCollection_28_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateCollection.creator":
		panic(fmt.Errorf("field creator of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		panic(fmt.Errorf("field updateValidBadgeIds of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		panic(fmt.Errorf("field updateCollectionPermissions of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		panic(fmt.Errorf("field updateManagerTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		panic(fmt.Errorf("field updateCollectionMetadataTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		panic(fmt.Errorf("field updateBadgeMetadataTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		panic(fmt.Errorf("field updateOffChainBalancesMetadataTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		panic(fmt.Errorf("field updateCustomDataTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		panic(fmt.Errorf("field updateCollectionApprovals of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		panic(fmt.Errorf("field updateStandardsTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		panic(fmt.Errorf("field updateIsArchivedTimeline of message badges.MsgUpdateCollection is not mutable"))
	case "badges.MsgUpdateCollection.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgUpdateCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgUpdateCollection.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.MsgUpdateCollection.updateValidBadgeIds":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.validBadgeIds":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_4_list{list: &list})
	case "badges.MsgUpdateCollection.updateCollectionPermissions":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.collectionPermissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgUpdateCollection.updateManagerTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.managerTimeline":
		list := []*ManagerTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_10_list{list: &list})
	case "badges.MsgUpdateCollection.updateCollectionMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_12_list{list: &list})
	case "badges.MsgUpdateCollection.updateBadgeMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_14_list{list: &list})
	case "badges.MsgUpdateCollection.updateOffChainBalancesMetadataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_16_list{list: &list})
	case "badges.MsgUpdateCollection.updateCustomDataTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_18_list{list: &list})
	case "badges.MsgUpdateCollection.updateCollectionApprovals":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_22_list{list: &list})
	case "badges.MsgUpdateCollection.updateStandardsTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_24_list{list: &list})
	case "badges.MsgUpdateCollection.updateIsArchivedTimeline":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateCollection.isArchivedTimeline":
		list := []*IsArchivedTimeline{}
		return protoreflect.ValueOfList(&_MsgUpdateCollection_28_list{list: &list})
	case "badges.MsgUpdateCollection.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateValidBadgeIds {
			n += 2
		}
		if len(x.ValidBadgeIds) > 0 {
			for _, e := range x.ValidBadgeIds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionPermissions {
			n += 2
		}
		if x.CollectionPermissions != nil {
			l = options.Size(x.CollectionPermissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateManagerTimeline {
			n += 2
		}
		if len(x.ManagerTimeline) > 0 {
			for _, e := range x.ManagerTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionMetadataTimeline {
			n += 2
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateBadgeMetadataTimeline {
			n += 2
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateOffChainBalancesMetadataTimeline {
			n += 2
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCustomDataTimeline {
			n += 3
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateCollectionApprovals {
			n += 3
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateStandardsTimeline {
			n += 3
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateIsArchivedTimeline {
			n += 3
		}
		if len(x.IsArchivedTimeline) > 0 {
			for _, e := range x.IsArchivedTimeline {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xea
		}
		if len(x.IsArchivedTimeline) > 0 {
			for iNdEx := len(x.IsArchivedTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IsArchivedTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xe2
			}
		}
		if x.UpdateIsArchivedTimeline {
			i--
			if x.UpdateIsArchivedTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xd8
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xc2
			}
		}
		if x.UpdateStandardsTimeline {
			i--
			if x.UpdateStandardsTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb8
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
		if x.UpdateCollectionApprovals {
			i--
			if x.UpdateCollectionApprovals {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa8
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x92
			}
		}
		if x.UpdateCustomDataTimeline {
			i--
			if x.UpdateCustomDataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x82
			}
		}
		if x.UpdateOffChainBalancesMetadataTimeline {
			i--
			if x.UpdateOffChainBalancesMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x78
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if x.UpdateBadgeMetadataTimeline {
			i--
			if x.UpdateBadgeMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x68
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if x.UpdateCollectionMetadataTimeline {
			i--
			if x.UpdateCollectionMetadataTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if len(x.ManagerTimeline) > 0 {
			for iNdEx := len(x.ManagerTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ManagerTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.UpdateManagerTimeline {
			i--
			if x.UpdateManagerTimeline {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x48
		}
		if x.CollectionPermissions != nil {
			encoded, err := options.Marshal(x.CollectionPermissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.UpdateCollectionPermissions {
			i--
			if x.UpdateCollectionPermissions {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if len(x.ValidBadgeIds) > 0 {
			for iNdEx := len(x.ValidBadgeIds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidBadgeIds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.UpdateValidBadgeIds {
			i--
			if x.UpdateValidBadgeIds {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateValidBadgeIds", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateValidBadgeIds = bool(v != 0)
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidBadgeIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidBadgeIds = append(x.ValidBadgeIds, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidBadgeIds[len(x.ValidBadgeIds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionPermissions", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionPermissions = bool(v != 0)
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionPermissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CollectionPermissions == nil {
					x.CollectionPermissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionPermissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateManagerTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateManagerTimeline = bool(v != 0)
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ManagerTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ManagerTimeline = append(x.ManagerTimeline, &ManagerTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ManagerTimeline[len(x.ManagerTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionMetadataTimeline = bool(v != 0)
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateBadgeMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateBadgeMetadataTimeline = bool(v != 0)
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateOffChainBalancesMetadataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateOffChainBalancesMetadataTimeline = bool(v != 0)
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCustomDataTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCustomDataTimeline = bool(v != 0)
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 21:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateCollectionApprovals", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateCollectionApprovals = bool(v != 0)
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 23:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateStandardsTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateStandardsTimeline = bool(v != 0)
			case 24:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 27:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateIsArchivedTimeline", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateIsArchivedTimeline = bool(v != 0)
			case 28:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchivedTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IsArchivedTimeline = append(x.IsArchivedTimeline, &IsArchivedTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IsArchivedTimeline[len(x.IsArchivedTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 29:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateCollectionResponse              protoreflect.MessageDescriptor
	fd_MsgUpdateCollectionResponse_collectionId protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateCollectionResponse = File_badges_tx_proto.Messages().ByName("MsgUpdateCollectionResponse")
	fd_MsgUpdateCollectionResponse_collectionId = md_MsgUpdateCollectionResponse.Fields().ByName("collectionId")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateCollectionResponse)(nil)

type fastReflection_MsgUpdateCollectionResponse MsgUpdateCollectionResponse

func (x *MsgUpdateCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateCollectionResponse)(x)
}

func (x *MsgUpdateCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateCollectionResponse_messageType fastReflection_MsgUpdateCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateCollectionResponse_messageType{}

type fastReflection_MsgUpdateCollectionResponse_messageType struct{}

func (x fastReflection_MsgUpdateCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateCollectionResponse)(nil)
}
func (x fastReflection_MsgUpdateCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCollectionResponse)
}
func (x fastReflection_MsgUpdateCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateCollectionResponse_collectionId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		return x.CollectionId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		x.CollectionId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		x.CollectionId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgUpdateCollectionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateCollectionResponse.collectionId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateCollection_5_list)(nil)

type _MsgCreateCollection_5_list struct {
	list *[]*UintRange
}

func (x *_MsgCreateCollection_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UintRange)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_5_list) AppendMutable() protoreflect.Value {
	v := new(UintRange)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_5_list) NewElement() protoreflect.Value {
	v := new(UintRange)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_7_list)(nil)

type _MsgCreateCollection_7_list struct {
	list *[]*ManagerTimeline
}

func (x *_MsgCreateCollection_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ManagerTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_7_list) AppendMutable() protoreflect.Value {
	v := new(ManagerTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_7_list) NewElement() protoreflect.Value {
	v := new(ManagerTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_8_list)(nil)

type _MsgCreateCollection_8_list struct {
	list *[]*CollectionMetadataTimeline
}

func (x *_MsgCreateCollection_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_8_list) AppendMutable() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_8_list) NewElement() protoreflect.Value {
	v := new(CollectionMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_9_list)(nil)

type _MsgCreateCollection_9_list struct {
	list *[]*BadgeMetadataTimeline
}

func (x *_MsgCreateCollection_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BadgeMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_9_list) AppendMutable() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_9_list) NewElement() protoreflect.Value {
	v := new(BadgeMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_10_list)(nil)

type _MsgCreateCollection_10_list struct {
	list *[]*OffChainBalancesMetadataTimeline
}

func (x *_MsgCreateCollection_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_10_list) AppendMutable() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_10_list) NewElement() protoreflect.Value {
	v := new(OffChainBalancesMetadataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_11_list)(nil)

type _MsgCreateCollection_11_list struct {
	list *[]*CustomDataTimeline
}

func (x *_MsgCreateCollection_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CustomDataTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_11_list) AppendMutable() protoreflect.Value {
	v := new(CustomDataTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_11_list) NewElement() protoreflect.Value {
	v := new(CustomDataTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_12_list)(nil)

type _MsgCreateCollection_12_list struct {
	list *[]*CollectionApproval
}

func (x *_MsgCreateCollection_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CollectionApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_12_list) AppendMutable() protoreflect.Value {
	v := new(CollectionApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_12_list) NewElement() protoreflect.Value {
	v := new(CollectionApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_13_list)(nil)

type _MsgCreateCollection_13_list struct {
	list *[]*StandardsTimeline
}

func (x *_MsgCreateCollection_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StandardsTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_13_list) AppendMutable() protoreflect.Value {
	v := new(StandardsTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_13_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_13_list) NewElement() protoreflect.Value {
	v := new(StandardsTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_13_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateCollection_14_list)(nil)

type _MsgCreateCollection_14_list struct {
	list *[]*IsArchivedTimeline
}

func (x *_MsgCreateCollection_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateCollection_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateCollection_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateCollection_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IsArchivedTimeline)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateCollection_14_list) AppendMutable() protoreflect.Value {
	v := new(IsArchivedTimeline)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateCollection_14_list) NewElement() protoreflect.Value {
	v := new(IsArchivedTimeline)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateCollection_14_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateCollection                                  protoreflect.MessageDescriptor
	fd_MsgCreateCollection_creator                          protoreflect.FieldDescriptor
	fd_MsgCreateCollection_balancesType                     protoreflect.FieldDescriptor
	fd_MsgCreateCollection_defaultBalances                  protoreflect.FieldDescriptor
	fd_MsgCreateCollection_validBadgeIds                    protoreflect.FieldDescriptor
	fd_MsgCreateCollection_collectionPermissions            protoreflect.FieldDescriptor
	fd_MsgCreateCollection_managerTimeline                  protoreflect.FieldDescriptor
	fd_MsgCreateCollection_collectionMetadataTimeline       protoreflect.FieldDescriptor
	fd_MsgCreateCollection_badgeMetadataTimeline            protoreflect.FieldDescriptor
	fd_MsgCreateCollection_offChainBalancesMetadataTimeline protoreflect.FieldDescriptor
	fd_MsgCreateCollection_customDataTimeline               protoreflect.FieldDescriptor
	fd_MsgCreateCollection_collectionApprovals              protoreflect.FieldDescriptor
	fd_MsgCreateCollection_standardsTimeline                protoreflect.FieldDescriptor
	fd_MsgCreateCollection_isArchivedTimeline               protoreflect.FieldDescriptor
	fd_MsgCreateCollection_creatorOverride                  protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgCreateCollection = File_badges_tx_proto.Messages().ByName("MsgCreateCollection")
	fd_MsgCreateCollection_creator = md_MsgCreateCollection.Fields().ByName("creator")
	fd_MsgCreateCollection_balancesType = md_MsgCreateCollection.Fields().ByName("balancesType")
	fd_MsgCreateCollection_defaultBalances = md_MsgCreateCollection.Fields().ByName("defaultBalances")
	fd_MsgCreateCollection_validBadgeIds = md_MsgCreateCollection.Fields().ByName("validBadgeIds")
	fd_MsgCreateCollection_collectionPermissions = md_MsgCreateCollection.Fields().ByName("collectionPermissions")
	fd_MsgCreateCollection_managerTimeline = md_MsgCreateCollection.Fields().ByName("managerTimeline")
	fd_MsgCreateCollection_collectionMetadataTimeline = md_MsgCreateCollection.Fields().ByName("collectionMetadataTimeline")
	fd_MsgCreateCollection_badgeMetadataTimeline = md_MsgCreateCollection.Fields().ByName("badgeMetadataTimeline")
	fd_MsgCreateCollection_offChainBalancesMetadataTimeline = md_MsgCreateCollection.Fields().ByName("offChainBalancesMetadataTimeline")
	fd_MsgCreateCollection_customDataTimeline = md_MsgCreateCollection.Fields().ByName("customDataTimeline")
	fd_MsgCreateCollection_collectionApprovals = md_MsgCreateCollection.Fields().ByName("collectionApprovals")
	fd_MsgCreateCollection_standardsTimeline = md_MsgCreateCollection.Fields().ByName("standardsTimeline")
	fd_MsgCreateCollection_isArchivedTimeline = md_MsgCreateCollection.Fields().ByName("isArchivedTimeline")
	fd_MsgCreateCollection_creatorOverride = md_MsgCreateCollection.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCollection)(nil)

type fastReflection_MsgCreateCollection MsgCreateCollection

func (x *MsgCreateCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCollection)(x)
}

func (x *MsgCreateCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCollection_messageType fastReflection_MsgCreateCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCollection_messageType{}

type fastReflection_MsgCreateCollection_messageType struct{}

func (x fastReflection_MsgCreateCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCollection)(nil)
}
func (x fastReflection_MsgCreateCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollection)
}
func (x fastReflection_MsgCreateCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCollection) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateCollection_creator, value) {
			return
		}
	}
	if x.BalancesType != "" {
		value := protoreflect.ValueOfString(x.BalancesType)
		if !f(fd_MsgCreateCollection_balancesType, value) {
			return
		}
	}
	if x.DefaultBalances != nil {
		value := protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
		if !f(fd_MsgCreateCollection_defaultBalances, value) {
			return
		}
	}
	if len(x.ValidBadgeIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_5_list{list: &x.ValidBadgeIds})
		if !f(fd_MsgCreateCollection_validBadgeIds, value) {
			return
		}
	}
	if x.CollectionPermissions != nil {
		value := protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
		if !f(fd_MsgCreateCollection_collectionPermissions, value) {
			return
		}
	}
	if len(x.ManagerTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_7_list{list: &x.ManagerTimeline})
		if !f(fd_MsgCreateCollection_managerTimeline, value) {
			return
		}
	}
	if len(x.CollectionMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_8_list{list: &x.CollectionMetadataTimeline})
		if !f(fd_MsgCreateCollection_collectionMetadataTimeline, value) {
			return
		}
	}
	if len(x.BadgeMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_9_list{list: &x.BadgeMetadataTimeline})
		if !f(fd_MsgCreateCollection_badgeMetadataTimeline, value) {
			return
		}
	}
	if len(x.OffChainBalancesMetadataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_10_list{list: &x.OffChainBalancesMetadataTimeline})
		if !f(fd_MsgCreateCollection_offChainBalancesMetadataTimeline, value) {
			return
		}
	}
	if len(x.CustomDataTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_11_list{list: &x.CustomDataTimeline})
		if !f(fd_MsgCreateCollection_customDataTimeline, value) {
			return
		}
	}
	if len(x.CollectionApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_12_list{list: &x.CollectionApprovals})
		if !f(fd_MsgCreateCollection_collectionApprovals, value) {
			return
		}
	}
	if len(x.StandardsTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_13_list{list: &x.StandardsTimeline})
		if !f(fd_MsgCreateCollection_standardsTimeline, value) {
			return
		}
	}
	if len(x.IsArchivedTimeline) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateCollection_14_list{list: &x.IsArchivedTimeline})
		if !f(fd_MsgCreateCollection_isArchivedTimeline, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgCreateCollection_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgCreateCollection.creator":
		return x.Creator != ""
	case "badges.MsgCreateCollection.balancesType":
		return x.BalancesType != ""
	case "badges.MsgCreateCollection.defaultBalances":
		return x.DefaultBalances != nil
	case "badges.MsgCreateCollection.validBadgeIds":
		return len(x.ValidBadgeIds) != 0
	case "badges.MsgCreateCollection.collectionPermissions":
		return x.CollectionPermissions != nil
	case "badges.MsgCreateCollection.managerTimeline":
		return len(x.ManagerTimeline) != 0
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		return len(x.CollectionMetadataTimeline) != 0
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		return len(x.BadgeMetadataTimeline) != 0
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		return len(x.OffChainBalancesMetadataTimeline) != 0
	case "badges.MsgCreateCollection.customDataTimeline":
		return len(x.CustomDataTimeline) != 0
	case "badges.MsgCreateCollection.collectionApprovals":
		return len(x.CollectionApprovals) != 0
	case "badges.MsgCreateCollection.standardsTimeline":
		return len(x.StandardsTimeline) != 0
	case "badges.MsgCreateCollection.isArchivedTimeline":
		return len(x.IsArchivedTimeline) != 0
	case "badges.MsgCreateCollection.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgCreateCollection.creator":
		x.Creator = ""
	case "badges.MsgCreateCollection.balancesType":
		x.BalancesType = ""
	case "badges.MsgCreateCollection.defaultBalances":
		x.DefaultBalances = nil
	case "badges.MsgCreateCollection.validBadgeIds":
		x.ValidBadgeIds = nil
	case "badges.MsgCreateCollection.collectionPermissions":
		x.CollectionPermissions = nil
	case "badges.MsgCreateCollection.managerTimeline":
		x.ManagerTimeline = nil
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		x.CollectionMetadataTimeline = nil
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		x.BadgeMetadataTimeline = nil
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		x.OffChainBalancesMetadataTimeline = nil
	case "badges.MsgCreateCollection.customDataTimeline":
		x.CustomDataTimeline = nil
	case "badges.MsgCreateCollection.collectionApprovals":
		x.CollectionApprovals = nil
	case "badges.MsgCreateCollection.standardsTimeline":
		x.StandardsTimeline = nil
	case "badges.MsgCreateCollection.isArchivedTimeline":
		x.IsArchivedTimeline = nil
	case "badges.MsgCreateCollection.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgCreateCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgCreateCollection.balancesType":
		value := x.BalancesType
		return protoreflect.ValueOfString(value)
	case "badges.MsgCreateCollection.defaultBalances":
		value := x.DefaultBalances
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgCreateCollection.validBadgeIds":
		if len(x.ValidBadgeIds) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_5_list{})
		}
		listValue := &_MsgCreateCollection_5_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.collectionPermissions":
		value := x.CollectionPermissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgCreateCollection.managerTimeline":
		if len(x.ManagerTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_7_list{})
		}
		listValue := &_MsgCreateCollection_7_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		if len(x.CollectionMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_8_list{})
		}
		listValue := &_MsgCreateCollection_8_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		if len(x.BadgeMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_9_list{})
		}
		listValue := &_MsgCreateCollection_9_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		if len(x.OffChainBalancesMetadataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_10_list{})
		}
		listValue := &_MsgCreateCollection_10_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.customDataTimeline":
		if len(x.CustomDataTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_11_list{})
		}
		listValue := &_MsgCreateCollection_11_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.collectionApprovals":
		if len(x.CollectionApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_12_list{})
		}
		listValue := &_MsgCreateCollection_12_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.standardsTimeline":
		if len(x.StandardsTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_13_list{})
		}
		listValue := &_MsgCreateCollection_13_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.isArchivedTimeline":
		if len(x.IsArchivedTimeline) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateCollection_14_list{})
		}
		listValue := &_MsgCreateCollection_14_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateCollection.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgCreateCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgCreateCollection.balancesType":
		x.BalancesType = value.Interface().(string)
	case "badges.MsgCreateCollection.defaultBalances":
		x.DefaultBalances = value.Message().Interface().(*UserBalanceStore)
	case "badges.MsgCreateCollection.validBadgeIds":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_5_list)
		x.ValidBadgeIds = *clv.list
	case "badges.MsgCreateCollection.collectionPermissions":
		x.CollectionPermissions = value.Message().Interface().(*CollectionPermissions)
	case "badges.MsgCreateCollection.managerTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_7_list)
		x.ManagerTimeline = *clv.list
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_8_list)
		x.CollectionMetadataTimeline = *clv.list
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_9_list)
		x.BadgeMetadataTimeline = *clv.list
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_10_list)
		x.OffChainBalancesMetadataTimeline = *clv.list
	case "badges.MsgCreateCollection.customDataTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_11_list)
		x.CustomDataTimeline = *clv.list
	case "badges.MsgCreateCollection.collectionApprovals":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_12_list)
		x.CollectionApprovals = *clv.list
	case "badges.MsgCreateCollection.standardsTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_13_list)
		x.StandardsTimeline = *clv.list
	case "badges.MsgCreateCollection.isArchivedTimeline":
		lv := value.List()
		clv := lv.(*_MsgCreateCollection_14_list)
		x.IsArchivedTimeline = *clv.list
	case "badges.MsgCreateCollection.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateCollection.defaultBalances":
		if x.DefaultBalances == nil {
			x.DefaultBalances = new(UserBalanceStore)
		}
		return protoreflect.ValueOfMessage(x.DefaultBalances.ProtoReflect())
	case "badges.MsgCreateCollection.validBadgeIds":
		if x.ValidBadgeIds == nil {
			x.ValidBadgeIds = []*UintRange{}
		}
		value := &_MsgCreateCollection_5_list{list: &x.ValidBadgeIds}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.collectionPermissions":
		if x.CollectionPermissions == nil {
			x.CollectionPermissions = new(CollectionPermissions)
		}
		return protoreflect.ValueOfMessage(x.CollectionPermissions.ProtoReflect())
	case "badges.MsgCreateCollection.managerTimeline":
		if x.ManagerTimeline == nil {
			x.ManagerTimeline = []*ManagerTimeline{}
		}
		value := &_MsgCreateCollection_7_list{list: &x.ManagerTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		if x.CollectionMetadataTimeline == nil {
			x.CollectionMetadataTimeline = []*CollectionMetadataTimeline{}
		}
		value := &_MsgCreateCollection_8_list{list: &x.CollectionMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		if x.BadgeMetadataTimeline == nil {
			x.BadgeMetadataTimeline = []*BadgeMetadataTimeline{}
		}
		value := &_MsgCreateCollection_9_list{list: &x.BadgeMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		if x.OffChainBalancesMetadataTimeline == nil {
			x.OffChainBalancesMetadataTimeline = []*OffChainBalancesMetadataTimeline{}
		}
		value := &_MsgCreateCollection_10_list{list: &x.OffChainBalancesMetadataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.customDataTimeline":
		if x.CustomDataTimeline == nil {
			x.CustomDataTimeline = []*CustomDataTimeline{}
		}
		value := &_MsgCreateCollection_11_list{list: &x.CustomDataTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.collectionApprovals":
		if x.CollectionApprovals == nil {
			x.CollectionApprovals = []*CollectionApproval{}
		}
		value := &_MsgCreateCollection_12_list{list: &x.CollectionApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.standardsTimeline":
		if x.StandardsTimeline == nil {
			x.StandardsTimeline = []*StandardsTimeline{}
		}
		value := &_MsgCreateCollection_13_list{list: &x.StandardsTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.isArchivedTimeline":
		if x.IsArchivedTimeline == nil {
			x.IsArchivedTimeline = []*IsArchivedTimeline{}
		}
		value := &_MsgCreateCollection_14_list{list: &x.IsArchivedTimeline}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateCollection.creator":
		panic(fmt.Errorf("field creator of message badges.MsgCreateCollection is not mutable"))
	case "badges.MsgCreateCollection.balancesType":
		panic(fmt.Errorf("field balancesType of message badges.MsgCreateCollection is not mutable"))
	case "badges.MsgCreateCollection.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgCreateCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgCreateCollection.balancesType":
		return protoreflect.ValueOfString("")
	case "badges.MsgCreateCollection.defaultBalances":
		m := new(UserBalanceStore)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgCreateCollection.validBadgeIds":
		list := []*UintRange{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_5_list{list: &list})
	case "badges.MsgCreateCollection.collectionPermissions":
		m := new(CollectionPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgCreateCollection.managerTimeline":
		list := []*ManagerTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_7_list{list: &list})
	case "badges.MsgCreateCollection.collectionMetadataTimeline":
		list := []*CollectionMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_8_list{list: &list})
	case "badges.MsgCreateCollection.badgeMetadataTimeline":
		list := []*BadgeMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_9_list{list: &list})
	case "badges.MsgCreateCollection.offChainBalancesMetadataTimeline":
		list := []*OffChainBalancesMetadataTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_10_list{list: &list})
	case "badges.MsgCreateCollection.customDataTimeline":
		list := []*CustomDataTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_11_list{list: &list})
	case "badges.MsgCreateCollection.collectionApprovals":
		list := []*CollectionApproval{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_12_list{list: &list})
	case "badges.MsgCreateCollection.standardsTimeline":
		list := []*StandardsTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_13_list{list: &list})
	case "badges.MsgCreateCollection.isArchivedTimeline":
		list := []*IsArchivedTimeline{}
		return protoreflect.ValueOfList(&_MsgCreateCollection_14_list{list: &list})
	case "badges.MsgCreateCollection.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollection"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgCreateCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BalancesType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DefaultBalances != nil {
			l = options.Size(x.DefaultBalances)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ValidBadgeIds) > 0 {
			for _, e := range x.ValidBadgeIds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CollectionPermissions != nil {
			l = options.Size(x.CollectionPermissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ManagerTimeline) > 0 {
			for _, e := range x.ManagerTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for _, e := range x.CollectionMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for _, e := range x.BadgeMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for _, e := range x.OffChainBalancesMetadataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for _, e := range x.CustomDataTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for _, e := range x.CollectionApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for _, e := range x.StandardsTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.IsArchivedTimeline) > 0 {
			for _, e := range x.IsArchivedTimeline {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.IsArchivedTimeline) > 0 {
			for iNdEx := len(x.IsArchivedTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IsArchivedTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if len(x.StandardsTimeline) > 0 {
			for iNdEx := len(x.StandardsTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StandardsTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.CollectionApprovals) > 0 {
			for iNdEx := len(x.CollectionApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.CustomDataTimeline) > 0 {
			for iNdEx := len(x.CustomDataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CustomDataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.OffChainBalancesMetadataTimeline) > 0 {
			for iNdEx := len(x.OffChainBalancesMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OffChainBalancesMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.BadgeMetadataTimeline) > 0 {
			for iNdEx := len(x.BadgeMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BadgeMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.CollectionMetadataTimeline) > 0 {
			for iNdEx := len(x.CollectionMetadataTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CollectionMetadataTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.ManagerTimeline) > 0 {
			for iNdEx := len(x.ManagerTimeline) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ManagerTimeline[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.CollectionPermissions != nil {
			encoded, err := options.Marshal(x.CollectionPermissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidBadgeIds) > 0 {
			for iNdEx := len(x.ValidBadgeIds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidBadgeIds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.DefaultBalances != nil {
			encoded, err := options.Marshal(x.DefaultBalances)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BalancesType) > 0 {
			i -= len(x.BalancesType)
			copy(dAtA[i:], x.BalancesType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BalancesType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BalancesType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BalancesType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DefaultBalances", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DefaultBalances == nil {
					x.DefaultBalances = &UserBalanceStore{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DefaultBalances); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidBadgeIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidBadgeIds = append(x.ValidBadgeIds, &UintRange{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidBadgeIds[len(x.ValidBadgeIds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionPermissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CollectionPermissions == nil {
					x.CollectionPermissions = &CollectionPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionPermissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ManagerTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ManagerTimeline = append(x.ManagerTimeline, &ManagerTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ManagerTimeline[len(x.ManagerTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionMetadataTimeline = append(x.CollectionMetadataTimeline, &CollectionMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionMetadataTimeline[len(x.CollectionMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BadgeMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BadgeMetadataTimeline = append(x.BadgeMetadataTimeline, &BadgeMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BadgeMetadataTimeline[len(x.BadgeMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffChainBalancesMetadataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OffChainBalancesMetadataTimeline = append(x.OffChainBalancesMetadataTimeline, &OffChainBalancesMetadataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffChainBalancesMetadataTimeline[len(x.OffChainBalancesMetadataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CustomDataTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CustomDataTimeline = append(x.CustomDataTimeline, &CustomDataTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CustomDataTimeline[len(x.CustomDataTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionApprovals = append(x.CollectionApprovals, &CollectionApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CollectionApprovals[len(x.CollectionApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StandardsTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StandardsTimeline = append(x.StandardsTimeline, &StandardsTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StandardsTimeline[len(x.StandardsTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsArchivedTimeline", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IsArchivedTimeline = append(x.IsArchivedTimeline, &IsArchivedTimeline{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IsArchivedTimeline[len(x.IsArchivedTimeline)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateCollectionResponse              protoreflect.MessageDescriptor
	fd_MsgCreateCollectionResponse_collectionId protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgCreateCollectionResponse = File_badges_tx_proto.Messages().ByName("MsgCreateCollectionResponse")
	fd_MsgCreateCollectionResponse_collectionId = md_MsgCreateCollectionResponse.Fields().ByName("collectionId")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCollectionResponse)(nil)

type fastReflection_MsgCreateCollectionResponse MsgCreateCollectionResponse

func (x *MsgCreateCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCollectionResponse)(x)
}

func (x *MsgCreateCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCollectionResponse_messageType fastReflection_MsgCreateCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCollectionResponse_messageType{}

type fastReflection_MsgCreateCollectionResponse_messageType struct{}

func (x fastReflection_MsgCreateCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCollectionResponse)(nil)
}
func (x fastReflection_MsgCreateCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollectionResponse)
}
func (x fastReflection_MsgCreateCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgCreateCollectionResponse_collectionId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		return x.CollectionId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		x.CollectionId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		x.CollectionId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgCreateCollectionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateCollectionResponse.collectionId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgCreateCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgCreateAddressLists_2_list)(nil)

type _MsgCreateAddressLists_2_list struct {
	list *[]*AddressList
}

func (x *_MsgCreateAddressLists_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateAddressLists_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateAddressLists_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateAddressLists_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddressList)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateAddressLists_2_list) AppendMutable() protoreflect.Value {
	v := new(AddressList)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateAddressLists_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateAddressLists_2_list) NewElement() protoreflect.Value {
	v := new(AddressList)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateAddressLists_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateAddressLists                 protoreflect.MessageDescriptor
	fd_MsgCreateAddressLists_creator         protoreflect.FieldDescriptor
	fd_MsgCreateAddressLists_addressLists    protoreflect.FieldDescriptor
	fd_MsgCreateAddressLists_creatorOverride protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgCreateAddressLists = File_badges_tx_proto.Messages().ByName("MsgCreateAddressLists")
	fd_MsgCreateAddressLists_creator = md_MsgCreateAddressLists.Fields().ByName("creator")
	fd_MsgCreateAddressLists_addressLists = md_MsgCreateAddressLists.Fields().ByName("addressLists")
	fd_MsgCreateAddressLists_creatorOverride = md_MsgCreateAddressLists.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateAddressLists)(nil)

type fastReflection_MsgCreateAddressLists MsgCreateAddressLists

func (x *MsgCreateAddressLists) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateAddressLists)(x)
}

func (x *MsgCreateAddressLists) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateAddressLists_messageType fastReflection_MsgCreateAddressLists_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateAddressLists_messageType{}

type fastReflection_MsgCreateAddressLists_messageType struct{}

func (x fastReflection_MsgCreateAddressLists_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateAddressLists)(nil)
}
func (x fastReflection_MsgCreateAddressLists_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateAddressLists)
}
func (x fastReflection_MsgCreateAddressLists_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateAddressLists
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateAddressLists) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateAddressLists
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateAddressLists) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateAddressLists_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateAddressLists) New() protoreflect.Message {
	return new(fastReflection_MsgCreateAddressLists)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateAddressLists) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateAddressLists)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateAddressLists) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateAddressLists_creator, value) {
			return
		}
	}
	if len(x.AddressLists) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateAddressLists_2_list{list: &x.AddressLists})
		if !f(fd_MsgCreateAddressLists_addressLists, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgCreateAddressLists_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateAddressLists) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgCreateAddressLists.creator":
		return x.Creator != ""
	case "badges.MsgCreateAddressLists.addressLists":
		return len(x.AddressLists) != 0
	case "badges.MsgCreateAddressLists.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressLists) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgCreateAddressLists.creator":
		x.Creator = ""
	case "badges.MsgCreateAddressLists.addressLists":
		x.AddressLists = nil
	case "badges.MsgCreateAddressLists.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateAddressLists) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgCreateAddressLists.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgCreateAddressLists.addressLists":
		if len(x.AddressLists) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateAddressLists_2_list{})
		}
		listValue := &_MsgCreateAddressLists_2_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgCreateAddressLists.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressLists) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgCreateAddressLists.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgCreateAddressLists.addressLists":
		lv := value.List()
		clv := lv.(*_MsgCreateAddressLists_2_list)
		x.AddressLists = *clv.list
	case "badges.MsgCreateAddressLists.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressLists) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateAddressLists.addressLists":
		if x.AddressLists == nil {
			x.AddressLists = []*AddressList{}
		}
		value := &_MsgCreateAddressLists_2_list{list: &x.AddressLists}
		return protoreflect.ValueOfList(value)
	case "badges.MsgCreateAddressLists.creator":
		panic(fmt.Errorf("field creator of message badges.MsgCreateAddressLists is not mutable"))
	case "badges.MsgCreateAddressLists.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgCreateAddressLists is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateAddressLists) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgCreateAddressLists.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgCreateAddressLists.addressLists":
		list := []*AddressList{}
		return protoreflect.ValueOfList(&_MsgCreateAddressLists_2_list{list: &list})
	case "badges.MsgCreateAddressLists.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressLists"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressLists does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateAddressLists) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgCreateAddressLists", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateAddressLists) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressLists) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateAddressLists) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateAddressLists) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateAddressLists)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.AddressLists) > 0 {
			for _, e := range x.AddressLists {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateAddressLists)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.AddressLists) > 0 {
			for iNdEx := len(x.AddressLists) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddressLists[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateAddressLists)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateAddressLists: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateAddressLists: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddressLists", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddressLists = append(x.AddressLists, &AddressList{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddressLists[len(x.AddressLists)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateAddressListsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgCreateAddressListsResponse = File_badges_tx_proto.Messages().ByName("MsgCreateAddressListsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateAddressListsResponse)(nil)

type fastReflection_MsgCreateAddressListsResponse MsgCreateAddressListsResponse

func (x *MsgCreateAddressListsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateAddressListsResponse)(x)
}

func (x *MsgCreateAddressListsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateAddressListsResponse_messageType fastReflection_MsgCreateAddressListsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateAddressListsResponse_messageType{}

type fastReflection_MsgCreateAddressListsResponse_messageType struct{}

func (x fastReflection_MsgCreateAddressListsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateAddressListsResponse)(nil)
}
func (x fastReflection_MsgCreateAddressListsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateAddressListsResponse)
}
func (x fastReflection_MsgCreateAddressListsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateAddressListsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateAddressListsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateAddressListsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateAddressListsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateAddressListsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateAddressListsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateAddressListsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateAddressListsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateAddressListsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateAddressListsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateAddressListsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressListsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateAddressListsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressListsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressListsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateAddressListsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgCreateAddressListsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgCreateAddressListsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateAddressListsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgCreateAddressListsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateAddressListsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateAddressListsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateAddressListsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateAddressListsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateAddressListsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateAddressListsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateAddressListsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateAddressListsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateAddressListsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgTransferBadges_3_list)(nil)

type _MsgTransferBadges_3_list struct {
	list *[]*Transfer
}

func (x *_MsgTransferBadges_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgTransferBadges_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgTransferBadges_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	(*x.list)[i] = concreteValue
}

func (x *_MsgTransferBadges_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Transfer)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgTransferBadges_3_list) AppendMutable() protoreflect.Value {
	v := new(Transfer)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgTransferBadges_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgTransferBadges_3_list) NewElement() protoreflect.Value {
	v := new(Transfer)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgTransferBadges_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgTransferBadges                 protoreflect.MessageDescriptor
	fd_MsgTransferBadges_creator         protoreflect.FieldDescriptor
	fd_MsgTransferBadges_collectionId    protoreflect.FieldDescriptor
	fd_MsgTransferBadges_transfers       protoreflect.FieldDescriptor
	fd_MsgTransferBadges_creatorOverride protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgTransferBadges = File_badges_tx_proto.Messages().ByName("MsgTransferBadges")
	fd_MsgTransferBadges_creator = md_MsgTransferBadges.Fields().ByName("creator")
	fd_MsgTransferBadges_collectionId = md_MsgTransferBadges.Fields().ByName("collectionId")
	fd_MsgTransferBadges_transfers = md_MsgTransferBadges.Fields().ByName("transfers")
	fd_MsgTransferBadges_creatorOverride = md_MsgTransferBadges.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgTransferBadges)(nil)

type fastReflection_MsgTransferBadges MsgTransferBadges

func (x *MsgTransferBadges) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTransferBadges)(x)
}

func (x *MsgTransferBadges) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTransferBadges_messageType fastReflection_MsgTransferBadges_messageType
var _ protoreflect.MessageType = fastReflection_MsgTransferBadges_messageType{}

type fastReflection_MsgTransferBadges_messageType struct{}

func (x fastReflection_MsgTransferBadges_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTransferBadges)(nil)
}
func (x fastReflection_MsgTransferBadges_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTransferBadges)
}
func (x fastReflection_MsgTransferBadges_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferBadges
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTransferBadges) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferBadges
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTransferBadges) Type() protoreflect.MessageType {
	return _fastReflection_MsgTransferBadges_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTransferBadges) New() protoreflect.Message {
	return new(fastReflection_MsgTransferBadges)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTransferBadges) Interface() protoreflect.ProtoMessage {
	return (*MsgTransferBadges)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTransferBadges) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgTransferBadges_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgTransferBadges_collectionId, value) {
			return
		}
	}
	if len(x.Transfers) != 0 {
		value := protoreflect.ValueOfList(&_MsgTransferBadges_3_list{list: &x.Transfers})
		if !f(fd_MsgTransferBadges_transfers, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgTransferBadges_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTransferBadges) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgTransferBadges.creator":
		return x.Creator != ""
	case "badges.MsgTransferBadges.collectionId":
		return x.CollectionId != ""
	case "badges.MsgTransferBadges.transfers":
		return len(x.Transfers) != 0
	case "badges.MsgTransferBadges.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadges) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgTransferBadges.creator":
		x.Creator = ""
	case "badges.MsgTransferBadges.collectionId":
		x.CollectionId = ""
	case "badges.MsgTransferBadges.transfers":
		x.Transfers = nil
	case "badges.MsgTransferBadges.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTransferBadges) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgTransferBadges.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgTransferBadges.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.MsgTransferBadges.transfers":
		if len(x.Transfers) == 0 {
			return protoreflect.ValueOfList(&_MsgTransferBadges_3_list{})
		}
		listValue := &_MsgTransferBadges_3_list{list: &x.Transfers}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgTransferBadges.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadges) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgTransferBadges.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgTransferBadges.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.MsgTransferBadges.transfers":
		lv := value.List()
		clv := lv.(*_MsgTransferBadges_3_list)
		x.Transfers = *clv.list
	case "badges.MsgTransferBadges.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadges) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgTransferBadges.transfers":
		if x.Transfers == nil {
			x.Transfers = []*Transfer{}
		}
		value := &_MsgTransferBadges_3_list{list: &x.Transfers}
		return protoreflect.ValueOfList(value)
	case "badges.MsgTransferBadges.creator":
		panic(fmt.Errorf("field creator of message badges.MsgTransferBadges is not mutable"))
	case "badges.MsgTransferBadges.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgTransferBadges is not mutable"))
	case "badges.MsgTransferBadges.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgTransferBadges is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTransferBadges) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgTransferBadges.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgTransferBadges.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.MsgTransferBadges.transfers":
		list := []*Transfer{}
		return protoreflect.ValueOfList(&_MsgTransferBadges_3_list{list: &list})
	case "badges.MsgTransferBadges.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadges"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadges does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTransferBadges) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgTransferBadges", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTransferBadges) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadges) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTransferBadges) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTransferBadges) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTransferBadges)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Transfers) > 0 {
			for _, e := range x.Transfers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferBadges)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Transfers) > 0 {
			for iNdEx := len(x.Transfers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Transfers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferBadges)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferBadges: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferBadges: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transfers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transfers = append(x.Transfers, &Transfer{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Transfers[len(x.Transfers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTransferBadgesResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgTransferBadgesResponse = File_badges_tx_proto.Messages().ByName("MsgTransferBadgesResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgTransferBadgesResponse)(nil)

type fastReflection_MsgTransferBadgesResponse MsgTransferBadgesResponse

func (x *MsgTransferBadgesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTransferBadgesResponse)(x)
}

func (x *MsgTransferBadgesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTransferBadgesResponse_messageType fastReflection_MsgTransferBadgesResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgTransferBadgesResponse_messageType{}

type fastReflection_MsgTransferBadgesResponse_messageType struct{}

func (x fastReflection_MsgTransferBadgesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTransferBadgesResponse)(nil)
}
func (x fastReflection_MsgTransferBadgesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTransferBadgesResponse)
}
func (x fastReflection_MsgTransferBadgesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferBadgesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTransferBadgesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferBadgesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTransferBadgesResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgTransferBadgesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTransferBadgesResponse) New() protoreflect.Message {
	return new(fastReflection_MsgTransferBadgesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTransferBadgesResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgTransferBadgesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTransferBadgesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTransferBadgesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadgesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTransferBadgesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadgesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadgesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTransferBadgesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgTransferBadgesResponse"))
		}
		panic(fmt.Errorf("message badges.MsgTransferBadgesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTransferBadgesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgTransferBadgesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTransferBadgesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferBadgesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTransferBadgesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTransferBadgesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTransferBadgesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferBadgesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferBadgesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferBadgesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferBadgesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteCollection                 protoreflect.MessageDescriptor
	fd_MsgDeleteCollection_creator         protoreflect.FieldDescriptor
	fd_MsgDeleteCollection_collectionId    protoreflect.FieldDescriptor
	fd_MsgDeleteCollection_creatorOverride protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgDeleteCollection = File_badges_tx_proto.Messages().ByName("MsgDeleteCollection")
	fd_MsgDeleteCollection_creator = md_MsgDeleteCollection.Fields().ByName("creator")
	fd_MsgDeleteCollection_collectionId = md_MsgDeleteCollection.Fields().ByName("collectionId")
	fd_MsgDeleteCollection_creatorOverride = md_MsgDeleteCollection.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteCollection)(nil)

type fastReflection_MsgDeleteCollection MsgDeleteCollection

func (x *MsgDeleteCollection) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteCollection)(x)
}

func (x *MsgDeleteCollection) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteCollection_messageType fastReflection_MsgDeleteCollection_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteCollection_messageType{}

type fastReflection_MsgDeleteCollection_messageType struct{}

func (x fastReflection_MsgDeleteCollection_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteCollection)(nil)
}
func (x fastReflection_MsgDeleteCollection_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteCollection)
}
func (x fastReflection_MsgDeleteCollection_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteCollection
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteCollection) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteCollection
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteCollection) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteCollection_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteCollection) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteCollection)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteCollection) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteCollection)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteCollection) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgDeleteCollection_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgDeleteCollection_collectionId, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgDeleteCollection_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteCollection) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgDeleteCollection.creator":
		return x.Creator != ""
	case "badges.MsgDeleteCollection.collectionId":
		return x.CollectionId != ""
	case "badges.MsgDeleteCollection.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollection) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgDeleteCollection.creator":
		x.Creator = ""
	case "badges.MsgDeleteCollection.collectionId":
		x.CollectionId = ""
	case "badges.MsgDeleteCollection.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteCollection) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgDeleteCollection.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgDeleteCollection.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.MsgDeleteCollection.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollection) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgDeleteCollection.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgDeleteCollection.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.MsgDeleteCollection.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollection) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgDeleteCollection.creator":
		panic(fmt.Errorf("field creator of message badges.MsgDeleteCollection is not mutable"))
	case "badges.MsgDeleteCollection.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgDeleteCollection is not mutable"))
	case "badges.MsgDeleteCollection.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgDeleteCollection is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteCollection) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgDeleteCollection.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgDeleteCollection.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.MsgDeleteCollection.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollection"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollection does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteCollection) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgDeleteCollection", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteCollection) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollection) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteCollection) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteCollection) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteCollection)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteCollection)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteCollection)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteCollection: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteCollection: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteCollectionResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgDeleteCollectionResponse = File_badges_tx_proto.Messages().ByName("MsgDeleteCollectionResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteCollectionResponse)(nil)

type fastReflection_MsgDeleteCollectionResponse MsgDeleteCollectionResponse

func (x *MsgDeleteCollectionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteCollectionResponse)(x)
}

func (x *MsgDeleteCollectionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteCollectionResponse_messageType fastReflection_MsgDeleteCollectionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteCollectionResponse_messageType{}

type fastReflection_MsgDeleteCollectionResponse_messageType struct{}

func (x fastReflection_MsgDeleteCollectionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteCollectionResponse)(nil)
}
func (x fastReflection_MsgDeleteCollectionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteCollectionResponse)
}
func (x fastReflection_MsgDeleteCollectionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteCollectionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteCollectionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteCollectionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteCollectionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteCollectionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteCollectionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteCollectionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteCollectionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteCollectionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteCollectionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteCollectionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollectionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteCollectionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollectionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollectionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteCollectionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgDeleteCollectionResponse"))
		}
		panic(fmt.Errorf("message badges.MsgDeleteCollectionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteCollectionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgDeleteCollectionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteCollectionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteCollectionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteCollectionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteCollectionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteCollectionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteCollectionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteCollectionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteCollectionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgUpdateUserApprovals_4_list)(nil)

type _MsgUpdateUserApprovals_4_list struct {
	list *[]*UserOutgoingApproval
}

func (x *_MsgUpdateUserApprovals_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateUserApprovals_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateUserApprovals_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserOutgoingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateUserApprovals_4_list) AppendMutable() protoreflect.Value {
	v := new(UserOutgoingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateUserApprovals_4_list) NewElement() protoreflect.Value {
	v := new(UserOutgoingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgUpdateUserApprovals_6_list)(nil)

type _MsgUpdateUserApprovals_6_list struct {
	list *[]*UserIncomingApproval
}

func (x *_MsgUpdateUserApprovals_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgUpdateUserApprovals_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	(*x.list)[i] = concreteValue
}

func (x *_MsgUpdateUserApprovals_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*UserIncomingApproval)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgUpdateUserApprovals_6_list) AppendMutable() protoreflect.Value {
	v := new(UserIncomingApproval)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgUpdateUserApprovals_6_list) NewElement() protoreflect.Value {
	v := new(UserIncomingApproval)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgUpdateUserApprovals_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgUpdateUserApprovals                                                 protoreflect.MessageDescriptor
	fd_MsgUpdateUserApprovals_creator                                         protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_collectionId                                    protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateOutgoingApprovals                         protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_outgoingApprovals                               protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateIncomingApprovals                         protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_incomingApprovals                               protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedOutgoingTransfers protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedOutgoingTransfers       protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedIncomingTransfers protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedIncomingTransfers       protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateAutoApproveAllIncomingTransfers           protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_autoApproveAllIncomingTransfers                 protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_updateUserPermissions                           protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_userPermissions                                 protoreflect.FieldDescriptor
	fd_MsgUpdateUserApprovals_creatorOverride                                 protoreflect.FieldDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateUserApprovals = File_badges_tx_proto.Messages().ByName("MsgUpdateUserApprovals")
	fd_MsgUpdateUserApprovals_creator = md_MsgUpdateUserApprovals.Fields().ByName("creator")
	fd_MsgUpdateUserApprovals_collectionId = md_MsgUpdateUserApprovals.Fields().ByName("collectionId")
	fd_MsgUpdateUserApprovals_updateOutgoingApprovals = md_MsgUpdateUserApprovals.Fields().ByName("updateOutgoingApprovals")
	fd_MsgUpdateUserApprovals_outgoingApprovals = md_MsgUpdateUserApprovals.Fields().ByName("outgoingApprovals")
	fd_MsgUpdateUserApprovals_updateIncomingApprovals = md_MsgUpdateUserApprovals.Fields().ByName("updateIncomingApprovals")
	fd_MsgUpdateUserApprovals_incomingApprovals = md_MsgUpdateUserApprovals.Fields().ByName("incomingApprovals")
	fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedOutgoingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("updateAutoApproveSelfInitiatedOutgoingTransfers")
	fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedOutgoingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("autoApproveSelfInitiatedOutgoingTransfers")
	fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedIncomingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("updateAutoApproveSelfInitiatedIncomingTransfers")
	fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedIncomingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("autoApproveSelfInitiatedIncomingTransfers")
	fd_MsgUpdateUserApprovals_updateAutoApproveAllIncomingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("updateAutoApproveAllIncomingTransfers")
	fd_MsgUpdateUserApprovals_autoApproveAllIncomingTransfers = md_MsgUpdateUserApprovals.Fields().ByName("autoApproveAllIncomingTransfers")
	fd_MsgUpdateUserApprovals_updateUserPermissions = md_MsgUpdateUserApprovals.Fields().ByName("updateUserPermissions")
	fd_MsgUpdateUserApprovals_userPermissions = md_MsgUpdateUserApprovals.Fields().ByName("userPermissions")
	fd_MsgUpdateUserApprovals_creatorOverride = md_MsgUpdateUserApprovals.Fields().ByName("creatorOverride")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateUserApprovals)(nil)

type fastReflection_MsgUpdateUserApprovals MsgUpdateUserApprovals

func (x *MsgUpdateUserApprovals) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserApprovals)(x)
}

func (x *MsgUpdateUserApprovals) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateUserApprovals_messageType fastReflection_MsgUpdateUserApprovals_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateUserApprovals_messageType{}

type fastReflection_MsgUpdateUserApprovals_messageType struct{}

func (x fastReflection_MsgUpdateUserApprovals_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserApprovals)(nil)
}
func (x fastReflection_MsgUpdateUserApprovals_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserApprovals)
}
func (x fastReflection_MsgUpdateUserApprovals_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserApprovals
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateUserApprovals) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserApprovals
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateUserApprovals) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateUserApprovals_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateUserApprovals) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserApprovals)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateUserApprovals) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateUserApprovals)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateUserApprovals) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateUserApprovals_creator, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_MsgUpdateUserApprovals_collectionId, value) {
			return
		}
	}
	if x.UpdateOutgoingApprovals != false {
		value := protoreflect.ValueOfBool(x.UpdateOutgoingApprovals)
		if !f(fd_MsgUpdateUserApprovals_updateOutgoingApprovals, value) {
			return
		}
	}
	if len(x.OutgoingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateUserApprovals_4_list{list: &x.OutgoingApprovals})
		if !f(fd_MsgUpdateUserApprovals_outgoingApprovals, value) {
			return
		}
	}
	if x.UpdateIncomingApprovals != false {
		value := protoreflect.ValueOfBool(x.UpdateIncomingApprovals)
		if !f(fd_MsgUpdateUserApprovals_updateIncomingApprovals, value) {
			return
		}
	}
	if len(x.IncomingApprovals) != 0 {
		value := protoreflect.ValueOfList(&_MsgUpdateUserApprovals_6_list{list: &x.IncomingApprovals})
		if !f(fd_MsgUpdateUserApprovals_incomingApprovals, value) {
			return
		}
	}
	if x.UpdateAutoApproveSelfInitiatedOutgoingTransfers != false {
		value := protoreflect.ValueOfBool(x.UpdateAutoApproveSelfInitiatedOutgoingTransfers)
		if !f(fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedOutgoingTransfers, value) {
			return
		}
	}
	if x.AutoApproveSelfInitiatedOutgoingTransfers != false {
		value := protoreflect.ValueOfBool(x.AutoApproveSelfInitiatedOutgoingTransfers)
		if !f(fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedOutgoingTransfers, value) {
			return
		}
	}
	if x.UpdateAutoApproveSelfInitiatedIncomingTransfers != false {
		value := protoreflect.ValueOfBool(x.UpdateAutoApproveSelfInitiatedIncomingTransfers)
		if !f(fd_MsgUpdateUserApprovals_updateAutoApproveSelfInitiatedIncomingTransfers, value) {
			return
		}
	}
	if x.AutoApproveSelfInitiatedIncomingTransfers != false {
		value := protoreflect.ValueOfBool(x.AutoApproveSelfInitiatedIncomingTransfers)
		if !f(fd_MsgUpdateUserApprovals_autoApproveSelfInitiatedIncomingTransfers, value) {
			return
		}
	}
	if x.UpdateAutoApproveAllIncomingTransfers != false {
		value := protoreflect.ValueOfBool(x.UpdateAutoApproveAllIncomingTransfers)
		if !f(fd_MsgUpdateUserApprovals_updateAutoApproveAllIncomingTransfers, value) {
			return
		}
	}
	if x.AutoApproveAllIncomingTransfers != false {
		value := protoreflect.ValueOfBool(x.AutoApproveAllIncomingTransfers)
		if !f(fd_MsgUpdateUserApprovals_autoApproveAllIncomingTransfers, value) {
			return
		}
	}
	if x.UpdateUserPermissions != false {
		value := protoreflect.ValueOfBool(x.UpdateUserPermissions)
		if !f(fd_MsgUpdateUserApprovals_updateUserPermissions, value) {
			return
		}
	}
	if x.UserPermissions != nil {
		value := protoreflect.ValueOfMessage(x.UserPermissions.ProtoReflect())
		if !f(fd_MsgUpdateUserApprovals_userPermissions, value) {
			return
		}
	}
	if x.CreatorOverride != "" {
		value := protoreflect.ValueOfString(x.CreatorOverride)
		if !f(fd_MsgUpdateUserApprovals_creatorOverride, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateUserApprovals) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "badges.MsgUpdateUserApprovals.creator":
		return x.Creator != ""
	case "badges.MsgUpdateUserApprovals.collectionId":
		return x.CollectionId != ""
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		return x.UpdateOutgoingApprovals != false
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		return len(x.OutgoingApprovals) != 0
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		return x.UpdateIncomingApprovals != false
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		return len(x.IncomingApprovals) != 0
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		return x.UpdateAutoApproveSelfInitiatedOutgoingTransfers != false
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		return x.AutoApproveSelfInitiatedOutgoingTransfers != false
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		return x.UpdateAutoApproveSelfInitiatedIncomingTransfers != false
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		return x.AutoApproveSelfInitiatedIncomingTransfers != false
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		return x.UpdateAutoApproveAllIncomingTransfers != false
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		return x.AutoApproveAllIncomingTransfers != false
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		return x.UpdateUserPermissions != false
	case "badges.MsgUpdateUserApprovals.userPermissions":
		return x.UserPermissions != nil
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		return x.CreatorOverride != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovals) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "badges.MsgUpdateUserApprovals.creator":
		x.Creator = ""
	case "badges.MsgUpdateUserApprovals.collectionId":
		x.CollectionId = ""
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		x.UpdateOutgoingApprovals = false
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		x.OutgoingApprovals = nil
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		x.UpdateIncomingApprovals = false
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		x.IncomingApprovals = nil
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		x.UpdateAutoApproveSelfInitiatedOutgoingTransfers = false
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		x.AutoApproveSelfInitiatedOutgoingTransfers = false
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		x.UpdateAutoApproveSelfInitiatedIncomingTransfers = false
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		x.AutoApproveSelfInitiatedIncomingTransfers = false
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		x.UpdateAutoApproveAllIncomingTransfers = false
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		x.AutoApproveAllIncomingTransfers = false
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		x.UpdateUserPermissions = false
	case "badges.MsgUpdateUserApprovals.userPermissions":
		x.UserPermissions = nil
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		x.CreatorOverride = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateUserApprovals) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "badges.MsgUpdateUserApprovals.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "badges.MsgUpdateUserApprovals.collectionId":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		value := x.UpdateOutgoingApprovals
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		if len(x.OutgoingApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateUserApprovals_4_list{})
		}
		listValue := &_MsgUpdateUserApprovals_4_list{list: &x.OutgoingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		value := x.UpdateIncomingApprovals
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		if len(x.IncomingApprovals) == 0 {
			return protoreflect.ValueOfList(&_MsgUpdateUserApprovals_6_list{})
		}
		listValue := &_MsgUpdateUserApprovals_6_list{list: &x.IncomingApprovals}
		return protoreflect.ValueOfList(listValue)
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		value := x.UpdateAutoApproveSelfInitiatedOutgoingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		value := x.AutoApproveSelfInitiatedOutgoingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		value := x.UpdateAutoApproveSelfInitiatedIncomingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		value := x.AutoApproveSelfInitiatedIncomingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		value := x.UpdateAutoApproveAllIncomingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		value := x.AutoApproveAllIncomingTransfers
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		value := x.UpdateUserPermissions
		return protoreflect.ValueOfBool(value)
	case "badges.MsgUpdateUserApprovals.userPermissions":
		value := x.UserPermissions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		value := x.CreatorOverride
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovals) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "badges.MsgUpdateUserApprovals.creator":
		x.Creator = value.Interface().(string)
	case "badges.MsgUpdateUserApprovals.collectionId":
		x.CollectionId = value.Interface().(string)
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		x.UpdateOutgoingApprovals = value.Bool()
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		lv := value.List()
		clv := lv.(*_MsgUpdateUserApprovals_4_list)
		x.OutgoingApprovals = *clv.list
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		x.UpdateIncomingApprovals = value.Bool()
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		lv := value.List()
		clv := lv.(*_MsgUpdateUserApprovals_6_list)
		x.IncomingApprovals = *clv.list
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		x.UpdateAutoApproveSelfInitiatedOutgoingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		x.AutoApproveSelfInitiatedOutgoingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		x.UpdateAutoApproveSelfInitiatedIncomingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		x.AutoApproveSelfInitiatedIncomingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		x.UpdateAutoApproveAllIncomingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		x.AutoApproveAllIncomingTransfers = value.Bool()
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		x.UpdateUserPermissions = value.Bool()
	case "badges.MsgUpdateUserApprovals.userPermissions":
		x.UserPermissions = value.Message().Interface().(*UserPermissions)
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		x.CreatorOverride = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovals) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		if x.OutgoingApprovals == nil {
			x.OutgoingApprovals = []*UserOutgoingApproval{}
		}
		value := &_MsgUpdateUserApprovals_4_list{list: &x.OutgoingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		if x.IncomingApprovals == nil {
			x.IncomingApprovals = []*UserIncomingApproval{}
		}
		value := &_MsgUpdateUserApprovals_6_list{list: &x.IncomingApprovals}
		return protoreflect.ValueOfList(value)
	case "badges.MsgUpdateUserApprovals.userPermissions":
		if x.UserPermissions == nil {
			x.UserPermissions = new(UserPermissions)
		}
		return protoreflect.ValueOfMessage(x.UserPermissions.ProtoReflect())
	case "badges.MsgUpdateUserApprovals.creator":
		panic(fmt.Errorf("field creator of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.collectionId":
		panic(fmt.Errorf("field collectionId of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		panic(fmt.Errorf("field updateOutgoingApprovals of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		panic(fmt.Errorf("field updateIncomingApprovals of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		panic(fmt.Errorf("field updateAutoApproveSelfInitiatedOutgoingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		panic(fmt.Errorf("field autoApproveSelfInitiatedOutgoingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		panic(fmt.Errorf("field updateAutoApproveSelfInitiatedIncomingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		panic(fmt.Errorf("field autoApproveSelfInitiatedIncomingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		panic(fmt.Errorf("field updateAutoApproveAllIncomingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		panic(fmt.Errorf("field autoApproveAllIncomingTransfers of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		panic(fmt.Errorf("field updateUserPermissions of message badges.MsgUpdateUserApprovals is not mutable"))
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		panic(fmt.Errorf("field creatorOverride of message badges.MsgUpdateUserApprovals is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateUserApprovals) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "badges.MsgUpdateUserApprovals.creator":
		return protoreflect.ValueOfString("")
	case "badges.MsgUpdateUserApprovals.collectionId":
		return protoreflect.ValueOfString("")
	case "badges.MsgUpdateUserApprovals.updateOutgoingApprovals":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.outgoingApprovals":
		list := []*UserOutgoingApproval{}
		return protoreflect.ValueOfList(&_MsgUpdateUserApprovals_4_list{list: &list})
	case "badges.MsgUpdateUserApprovals.updateIncomingApprovals":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.incomingApprovals":
		list := []*UserIncomingApproval{}
		return protoreflect.ValueOfList(&_MsgUpdateUserApprovals_6_list{list: &list})
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedOutgoingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedOutgoingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.updateAutoApproveSelfInitiatedIncomingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.autoApproveSelfInitiatedIncomingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.updateAutoApproveAllIncomingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.autoApproveAllIncomingTransfers":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.updateUserPermissions":
		return protoreflect.ValueOfBool(false)
	case "badges.MsgUpdateUserApprovals.userPermissions":
		m := new(UserPermissions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "badges.MsgUpdateUserApprovals.creatorOverride":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovals"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovals does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateUserApprovals) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateUserApprovals", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateUserApprovals) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovals) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateUserApprovals) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateUserApprovals) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateUserApprovals)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdateOutgoingApprovals {
			n += 2
		}
		if len(x.OutgoingApprovals) > 0 {
			for _, e := range x.OutgoingApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateIncomingApprovals {
			n += 2
		}
		if len(x.IncomingApprovals) > 0 {
			for _, e := range x.IncomingApprovals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.UpdateAutoApproveSelfInitiatedOutgoingTransfers {
			n += 2
		}
		if x.AutoApproveSelfInitiatedOutgoingTransfers {
			n += 2
		}
		if x.UpdateAutoApproveSelfInitiatedIncomingTransfers {
			n += 2
		}
		if x.AutoApproveSelfInitiatedIncomingTransfers {
			n += 2
		}
		if x.UpdateAutoApproveAllIncomingTransfers {
			n += 2
		}
		if x.AutoApproveAllIncomingTransfers {
			n += 2
		}
		if x.UpdateUserPermissions {
			n += 2
		}
		if x.UserPermissions != nil {
			l = options.Size(x.UserPermissions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CreatorOverride)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserApprovals)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CreatorOverride) > 0 {
			i -= len(x.CreatorOverride)
			copy(dAtA[i:], x.CreatorOverride)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreatorOverride)))
			i--
			dAtA[i] = 0x7a
		}
		if x.UserPermissions != nil {
			encoded, err := options.Marshal(x.UserPermissions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x72
		}
		if x.UpdateUserPermissions {
			i--
			if x.UpdateUserPermissions {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x68
		}
		if x.AutoApproveAllIncomingTransfers {
			i--
			if x.AutoApproveAllIncomingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x60
		}
		if x.UpdateAutoApproveAllIncomingTransfers {
			i--
			if x.UpdateAutoApproveAllIncomingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if x.AutoApproveSelfInitiatedIncomingTransfers {
			i--
			if x.AutoApproveSelfInitiatedIncomingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x50
		}
		if x.UpdateAutoApproveSelfInitiatedIncomingTransfers {
			i--
			if x.UpdateAutoApproveSelfInitiatedIncomingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x48
		}
		if x.AutoApproveSelfInitiatedOutgoingTransfers {
			i--
			if x.AutoApproveSelfInitiatedOutgoingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.UpdateAutoApproveSelfInitiatedOutgoingTransfers {
			i--
			if x.UpdateAutoApproveSelfInitiatedOutgoingTransfers {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if len(x.IncomingApprovals) > 0 {
			for iNdEx := len(x.IncomingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IncomingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.UpdateIncomingApprovals {
			i--
			if x.UpdateIncomingApprovals {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if len(x.OutgoingApprovals) > 0 {
			for iNdEx := len(x.OutgoingApprovals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutgoingApprovals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.UpdateOutgoingApprovals {
			i--
			if x.UpdateOutgoingApprovals {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserApprovals)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserApprovals: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserApprovals: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateOutgoingApprovals", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateOutgoingApprovals = bool(v != 0)
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutgoingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutgoingApprovals = append(x.OutgoingApprovals, &UserOutgoingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutgoingApprovals[len(x.OutgoingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateIncomingApprovals", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateIncomingApprovals = bool(v != 0)
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IncomingApprovals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IncomingApprovals = append(x.IncomingApprovals, &UserIncomingApproval{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IncomingApprovals[len(x.IncomingApprovals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateAutoApproveSelfInitiatedOutgoingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateAutoApproveSelfInitiatedOutgoingTransfers = bool(v != 0)
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AutoApproveSelfInitiatedOutgoingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.AutoApproveSelfInitiatedOutgoingTransfers = bool(v != 0)
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateAutoApproveSelfInitiatedIncomingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateAutoApproveSelfInitiatedIncomingTransfers = bool(v != 0)
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AutoApproveSelfInitiatedIncomingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.AutoApproveSelfInitiatedIncomingTransfers = bool(v != 0)
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateAutoApproveAllIncomingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateAutoApproveAllIncomingTransfers = bool(v != 0)
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AutoApproveAllIncomingTransfers", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.AutoApproveAllIncomingTransfers = bool(v != 0)
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateUserPermissions", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateUserPermissions = bool(v != 0)
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserPermissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UserPermissions == nil {
					x.UserPermissions = &UserPermissions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UserPermissions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatorOverride", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreatorOverride = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateUserApprovalsResponse protoreflect.MessageDescriptor
)

func init() {
	file_badges_tx_proto_init()
	md_MsgUpdateUserApprovalsResponse = File_badges_tx_proto.Messages().ByName("MsgUpdateUserApprovalsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateUserApprovalsResponse)(nil)

type fastReflection_MsgUpdateUserApprovalsResponse MsgUpdateUserApprovalsResponse

func (x *MsgUpdateUserApprovalsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserApprovalsResponse)(x)
}

func (x *MsgUpdateUserApprovalsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_badges_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateUserApprovalsResponse_messageType fastReflection_MsgUpdateUserApprovalsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateUserApprovalsResponse_messageType{}

type fastReflection_MsgUpdateUserApprovalsResponse_messageType struct{}

func (x fastReflection_MsgUpdateUserApprovalsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateUserApprovalsResponse)(nil)
}
func (x fastReflection_MsgUpdateUserApprovalsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserApprovalsResponse)
}
func (x fastReflection_MsgUpdateUserApprovalsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserApprovalsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateUserApprovalsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateUserApprovalsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateUserApprovalsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateUserApprovalsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: badges.MsgUpdateUserApprovalsResponse"))
		}
		panic(fmt.Errorf("message badges.MsgUpdateUserApprovalsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in badges.MsgUpdateUserApprovalsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateUserApprovalsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateUserApprovalsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserApprovalsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateUserApprovalsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserApprovalsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateUserApprovalsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: badges/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the module parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{1}
}

// Used for WASM bindings and JSON parsing
type BadgeCustomMsgType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateAddressListsMsg        *MsgCreateAddressLists        `protobuf:"bytes,1,opt,name=createAddressListsMsg,proto3" json:"createAddressListsMsg,omitempty"`
	UniversalUpdateCollectionMsg *MsgUniversalUpdateCollection `protobuf:"bytes,2,opt,name=universalUpdateCollectionMsg,proto3" json:"universalUpdateCollectionMsg,omitempty"`
	DeleteCollectionMsg          *MsgDeleteCollection          `protobuf:"bytes,3,opt,name=deleteCollectionMsg,proto3" json:"deleteCollectionMsg,omitempty"`
	TransferBadgesMsg            *MsgTransferBadges            `protobuf:"bytes,4,opt,name=transferBadgesMsg,proto3" json:"transferBadgesMsg,omitempty"`
	UpdateUserApprovalsMsg       *MsgUpdateUserApprovals       `protobuf:"bytes,5,opt,name=updateUserApprovalsMsg,proto3" json:"updateUserApprovalsMsg,omitempty"`
	UpdateCollectionMsg          *MsgUpdateCollection          `protobuf:"bytes,6,opt,name=updateCollectionMsg,proto3" json:"updateCollectionMsg,omitempty"`
	CreateCollectionMsg          *MsgCreateCollection          `protobuf:"bytes,7,opt,name=createCollectionMsg,proto3" json:"createCollectionMsg,omitempty"`
}

func (x *BadgeCustomMsgType) Reset() {
	*x = BadgeCustomMsgType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeCustomMsgType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeCustomMsgType) ProtoMessage() {}

// Deprecated: Use BadgeCustomMsgType.ProtoReflect.Descriptor instead.
func (*BadgeCustomMsgType) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{2}
}

func (x *BadgeCustomMsgType) GetCreateAddressListsMsg() *MsgCreateAddressLists {
	if x != nil {
		return x.CreateAddressListsMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetUniversalUpdateCollectionMsg() *MsgUniversalUpdateCollection {
	if x != nil {
		return x.UniversalUpdateCollectionMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetDeleteCollectionMsg() *MsgDeleteCollection {
	if x != nil {
		return x.DeleteCollectionMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetTransferBadgesMsg() *MsgTransferBadges {
	if x != nil {
		return x.TransferBadgesMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetUpdateUserApprovalsMsg() *MsgUpdateUserApprovals {
	if x != nil {
		return x.UpdateUserApprovalsMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetUpdateCollectionMsg() *MsgUpdateCollection {
	if x != nil {
		return x.UpdateCollectionMsg
	}
	return nil
}

func (x *BadgeCustomMsgType) GetCreateCollectionMsg() *MsgCreateCollection {
	if x != nil {
		return x.CreateCollectionMsg
	}
	return nil
}

// MsgUniversalUpdateCollection is used to define MsgServer types for all requests and responses for Msgs of the badges module.
// It is a universal interface that can be used for both creating and updating collections.
// We have it defined for legacy purposes, but it is recommended to use MsgCreateCollection and MsgUpdateCollection instead.
type MsgUniversalUpdateCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// ID of the collection (0 for new collection).
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// Type of balances "Standard" or "Off-Chain - Indexed" or "Off-Chain - Non-Indexed" or "Non-Public".
	BalancesType string `protobuf:"bytes,3,opt,name=balancesType,proto3" json:"balancesType,omitempty"`
	// The default balances for the user
	DefaultBalances *UserBalanceStore `protobuf:"bytes,4,opt,name=defaultBalances,proto3" json:"defaultBalances,omitempty"`
	// Indicates if the valid badge IDs should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateValidBadgeIds bool `protobuf:"varint,5,opt,name=updateValidBadgeIds,proto3" json:"updateValidBadgeIds,omitempty"`
	// New badge IDs to add to this collection
	ValidBadgeIds []*UintRange `protobuf:"bytes,6,rep,name=validBadgeIds,proto3" json:"validBadgeIds,omitempty"`
	// Indicates if collection permissions should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionPermissions bool `protobuf:"varint,7,opt,name=updateCollectionPermissions,proto3" json:"updateCollectionPermissions,omitempty"`
	// New collection permissions to set.
	CollectionPermissions *CollectionPermissions `protobuf:"bytes,8,opt,name=collectionPermissions,proto3" json:"collectionPermissions,omitempty"`
	// Indicates if the manager timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateManagerTimeline bool `protobuf:"varint,9,opt,name=updateManagerTimeline,proto3" json:"updateManagerTimeline,omitempty"`
	// New manager timeline to set.
	ManagerTimeline []*ManagerTimeline `protobuf:"bytes,10,rep,name=managerTimeline,proto3" json:"managerTimeline,omitempty"`
	// Indicates if the collection metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionMetadataTimeline bool `protobuf:"varint,11,opt,name=updateCollectionMetadataTimeline,proto3" json:"updateCollectionMetadataTimeline,omitempty"`
	// New collection metadata timeline to set.
	CollectionMetadataTimeline []*CollectionMetadataTimeline `protobuf:"bytes,12,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	// Indicates if the badge metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateBadgeMetadataTimeline bool `protobuf:"varint,13,opt,name=updateBadgeMetadataTimeline,proto3" json:"updateBadgeMetadataTimeline,omitempty"`
	// New badge metadata timeline to set.
	BadgeMetadataTimeline []*BadgeMetadataTimeline `protobuf:"bytes,14,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	// Indicates if the off-chain balances metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateOffChainBalancesMetadataTimeline bool `protobuf:"varint,15,opt,name=updateOffChainBalancesMetadataTimeline,proto3" json:"updateOffChainBalancesMetadataTimeline,omitempty"`
	// New off-chain balances metadata timeline to set.
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,16,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	// Indicates if the custom data timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCustomDataTimeline bool `protobuf:"varint,17,opt,name=updateCustomDataTimeline,proto3" json:"updateCustomDataTimeline,omitempty"`
	// New custom data timeline to set.
	CustomDataTimeline []*CustomDataTimeline `protobuf:"bytes,18,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	// Indicates if collection approvals should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionApprovals bool `protobuf:"varint,21,opt,name=updateCollectionApprovals,proto3" json:"updateCollectionApprovals,omitempty"`
	// New collection approvals to set.
	CollectionApprovals []*CollectionApproval `protobuf:"bytes,22,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	// Indicates if the standards timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateStandardsTimeline bool `protobuf:"varint,23,opt,name=updateStandardsTimeline,proto3" json:"updateStandardsTimeline,omitempty"`
	// New standards timeline to set.
	StandardsTimeline []*StandardsTimeline `protobuf:"bytes,24,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
	// Indicates if the isArchived timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateIsArchivedTimeline bool `protobuf:"varint,25,opt,name=updateIsArchivedTimeline,proto3" json:"updateIsArchivedTimeline,omitempty"`
	// New isArchived timeline to set.
	IsArchivedTimeline []*IsArchivedTimeline `protobuf:"bytes,26,rep,name=isArchivedTimeline,proto3" json:"isArchivedTimeline,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,27,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgUniversalUpdateCollection) Reset() {
	*x = MsgUniversalUpdateCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollection) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollection.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollection) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgUniversalUpdateCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUniversalUpdateCollection) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUniversalUpdateCollection) GetBalancesType() string {
	if x != nil {
		return x.BalancesType
	}
	return ""
}

func (x *MsgUniversalUpdateCollection) GetDefaultBalances() *UserBalanceStore {
	if x != nil {
		return x.DefaultBalances
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateValidBadgeIds() bool {
	if x != nil {
		return x.UpdateValidBadgeIds
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetValidBadgeIds() []*UintRange {
	if x != nil {
		return x.ValidBadgeIds
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateCollectionPermissions() bool {
	if x != nil {
		return x.UpdateCollectionPermissions
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetCollectionPermissions() *CollectionPermissions {
	if x != nil {
		return x.CollectionPermissions
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateManagerTimeline() bool {
	if x != nil {
		return x.UpdateManagerTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetManagerTimeline() []*ManagerTimeline {
	if x != nil {
		return x.ManagerTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateCollectionMetadataTimeline() bool {
	if x != nil {
		return x.UpdateCollectionMetadataTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateBadgeMetadataTimeline() bool {
	if x != nil {
		return x.UpdateBadgeMetadataTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateOffChainBalancesMetadataTimeline() bool {
	if x != nil {
		return x.UpdateOffChainBalancesMetadataTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateCustomDataTimeline() bool {
	if x != nil {
		return x.UpdateCustomDataTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateCollectionApprovals() bool {
	if x != nil {
		return x.UpdateCollectionApprovals
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateStandardsTimeline() bool {
	if x != nil {
		return x.UpdateStandardsTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetUpdateIsArchivedTimeline() bool {
	if x != nil {
		return x.UpdateIsArchivedTimeline
	}
	return false
}

func (x *MsgUniversalUpdateCollection) GetIsArchivedTimeline() []*IsArchivedTimeline {
	if x != nil {
		return x.IsArchivedTimeline
	}
	return nil
}

func (x *MsgUniversalUpdateCollection) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgUniversalUpdateCollectionResponse is the response to MsgUniversalUpdateCollection.
type MsgUniversalUpdateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the badge collection.
	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (x *MsgUniversalUpdateCollectionResponse) Reset() {
	*x = MsgUniversalUpdateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUniversalUpdateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUniversalUpdateCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgUniversalUpdateCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgUniversalUpdateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgUniversalUpdateCollectionResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// MsgUpdateCollection is used to update a collection.
type MsgUpdateCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// ID of the collection (0 for new collection).
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// Indicates if the valid badge IDs should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateValidBadgeIds bool `protobuf:"varint,3,opt,name=updateValidBadgeIds,proto3" json:"updateValidBadgeIds,omitempty"`
	// New badge IDs to add to this collection
	ValidBadgeIds []*UintRange `protobuf:"bytes,4,rep,name=validBadgeIds,proto3" json:"validBadgeIds,omitempty"`
	// Indicates if collection permissions should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionPermissions bool `protobuf:"varint,7,opt,name=updateCollectionPermissions,proto3" json:"updateCollectionPermissions,omitempty"`
	// New collection permissions to set.
	CollectionPermissions *CollectionPermissions `protobuf:"bytes,8,opt,name=collectionPermissions,proto3" json:"collectionPermissions,omitempty"`
	// Indicates if the manager timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateManagerTimeline bool `protobuf:"varint,9,opt,name=updateManagerTimeline,proto3" json:"updateManagerTimeline,omitempty"`
	// New manager timeline to set.
	ManagerTimeline []*ManagerTimeline `protobuf:"bytes,10,rep,name=managerTimeline,proto3" json:"managerTimeline,omitempty"`
	// Indicates if the collection metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionMetadataTimeline bool `protobuf:"varint,11,opt,name=updateCollectionMetadataTimeline,proto3" json:"updateCollectionMetadataTimeline,omitempty"`
	// New collection metadata timeline to set.
	CollectionMetadataTimeline []*CollectionMetadataTimeline `protobuf:"bytes,12,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	// Indicates if the badge metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateBadgeMetadataTimeline bool `protobuf:"varint,13,opt,name=updateBadgeMetadataTimeline,proto3" json:"updateBadgeMetadataTimeline,omitempty"`
	// New badge metadata timeline to set.
	BadgeMetadataTimeline []*BadgeMetadataTimeline `protobuf:"bytes,14,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	// Indicates if the off-chain balances metadata timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateOffChainBalancesMetadataTimeline bool `protobuf:"varint,15,opt,name=updateOffChainBalancesMetadataTimeline,proto3" json:"updateOffChainBalancesMetadataTimeline,omitempty"`
	// New off-chain balances metadata timeline to set.
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,16,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	// Indicates if the custom data timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCustomDataTimeline bool `protobuf:"varint,17,opt,name=updateCustomDataTimeline,proto3" json:"updateCustomDataTimeline,omitempty"`
	// New custom data timeline to set.
	CustomDataTimeline []*CustomDataTimeline `protobuf:"bytes,18,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	// Indicates if collection approvals should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateCollectionApprovals bool `protobuf:"varint,21,opt,name=updateCollectionApprovals,proto3" json:"updateCollectionApprovals,omitempty"`
	// New collection approvals to set.
	CollectionApprovals []*CollectionApproval `protobuf:"bytes,22,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	// Indicates if the standards timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateStandardsTimeline bool `protobuf:"varint,23,opt,name=updateStandardsTimeline,proto3" json:"updateStandardsTimeline,omitempty"`
	// New standards timeline to set.
	StandardsTimeline []*StandardsTimeline `protobuf:"bytes,24,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
	// Indicates if the isArchived timeline should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateIsArchivedTimeline bool `protobuf:"varint,27,opt,name=updateIsArchivedTimeline,proto3" json:"updateIsArchivedTimeline,omitempty"`
	// New isArchived timeline to set.
	IsArchivedTimeline []*IsArchivedTimeline `protobuf:"bytes,28,rep,name=isArchivedTimeline,proto3" json:"isArchivedTimeline,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,29,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgUpdateCollection) Reset() {
	*x = MsgUpdateCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateCollection) ProtoMessage() {}

// Deprecated: Use MsgUpdateCollection.ProtoReflect.Descriptor instead.
func (*MsgUpdateCollection) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgUpdateCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateCollection) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUpdateCollection) GetUpdateValidBadgeIds() bool {
	if x != nil {
		return x.UpdateValidBadgeIds
	}
	return false
}

func (x *MsgUpdateCollection) GetValidBadgeIds() []*UintRange {
	if x != nil {
		return x.ValidBadgeIds
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateCollectionPermissions() bool {
	if x != nil {
		return x.UpdateCollectionPermissions
	}
	return false
}

func (x *MsgUpdateCollection) GetCollectionPermissions() *CollectionPermissions {
	if x != nil {
		return x.CollectionPermissions
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateManagerTimeline() bool {
	if x != nil {
		return x.UpdateManagerTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetManagerTimeline() []*ManagerTimeline {
	if x != nil {
		return x.ManagerTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateCollectionMetadataTimeline() bool {
	if x != nil {
		return x.UpdateCollectionMetadataTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateBadgeMetadataTimeline() bool {
	if x != nil {
		return x.UpdateBadgeMetadataTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateOffChainBalancesMetadataTimeline() bool {
	if x != nil {
		return x.UpdateOffChainBalancesMetadataTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateCustomDataTimeline() bool {
	if x != nil {
		return x.UpdateCustomDataTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateCollectionApprovals() bool {
	if x != nil {
		return x.UpdateCollectionApprovals
	}
	return false
}

func (x *MsgUpdateCollection) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateStandardsTimeline() bool {
	if x != nil {
		return x.UpdateStandardsTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetUpdateIsArchivedTimeline() bool {
	if x != nil {
		return x.UpdateIsArchivedTimeline
	}
	return false
}

func (x *MsgUpdateCollection) GetIsArchivedTimeline() []*IsArchivedTimeline {
	if x != nil {
		return x.IsArchivedTimeline
	}
	return nil
}

func (x *MsgUpdateCollection) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgUpdateCollectionResponse is the response to MsgUpdateCollection.
type MsgUpdateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the badge collection.
	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (x *MsgUpdateCollectionResponse) Reset() {
	*x = MsgUpdateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgUpdateCollectionResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// MsgCreateCollection is used to create a new collection.
type MsgCreateCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Type of balances "Standard" or "Off-Chain - Indexed" or "Off-Chain - Non-Indexed" or "Non-Public".
	BalancesType string `protobuf:"bytes,2,opt,name=balancesType,proto3" json:"balancesType,omitempty"`
	// The default balances for the user
	DefaultBalances *UserBalanceStore `protobuf:"bytes,4,opt,name=defaultBalances,proto3" json:"defaultBalances,omitempty"`
	// New badge IDs to add to this collection
	ValidBadgeIds []*UintRange `protobuf:"bytes,5,rep,name=validBadgeIds,proto3" json:"validBadgeIds,omitempty"`
	// Collection permissions.
	CollectionPermissions *CollectionPermissions `protobuf:"bytes,6,opt,name=collectionPermissions,proto3" json:"collectionPermissions,omitempty"`
	// Manager timeline entries.
	ManagerTimeline []*ManagerTimeline `protobuf:"bytes,7,rep,name=managerTimeline,proto3" json:"managerTimeline,omitempty"`
	// Collection metadata timeline entries.
	CollectionMetadataTimeline []*CollectionMetadataTimeline `protobuf:"bytes,8,rep,name=collectionMetadataTimeline,proto3" json:"collectionMetadataTimeline,omitempty"`
	// Badge metadata timeline entries.
	BadgeMetadataTimeline []*BadgeMetadataTimeline `protobuf:"bytes,9,rep,name=badgeMetadataTimeline,proto3" json:"badgeMetadataTimeline,omitempty"`
	// Off-chain balances metadata timeline entries.
	OffChainBalancesMetadataTimeline []*OffChainBalancesMetadataTimeline `protobuf:"bytes,10,rep,name=offChainBalancesMetadataTimeline,proto3" json:"offChainBalancesMetadataTimeline,omitempty"`
	// Custom data timeline entries.
	CustomDataTimeline []*CustomDataTimeline `protobuf:"bytes,11,rep,name=customDataTimeline,proto3" json:"customDataTimeline,omitempty"`
	// Collection approvals.
	CollectionApprovals []*CollectionApproval `protobuf:"bytes,12,rep,name=collectionApprovals,proto3" json:"collectionApprovals,omitempty"`
	// Standards timeline entries.
	StandardsTimeline []*StandardsTimeline `protobuf:"bytes,13,rep,name=standardsTimeline,proto3" json:"standardsTimeline,omitempty"`
	// isArchived timeline entries.
	IsArchivedTimeline []*IsArchivedTimeline `protobuf:"bytes,14,rep,name=isArchivedTimeline,proto3" json:"isArchivedTimeline,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,15,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgCreateCollection) Reset() {
	*x = MsgCreateCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCollection) ProtoMessage() {}

// Deprecated: Use MsgCreateCollection.ProtoReflect.Descriptor instead.
func (*MsgCreateCollection) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgCreateCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateCollection) GetBalancesType() string {
	if x != nil {
		return x.BalancesType
	}
	return ""
}

func (x *MsgCreateCollection) GetDefaultBalances() *UserBalanceStore {
	if x != nil {
		return x.DefaultBalances
	}
	return nil
}

func (x *MsgCreateCollection) GetValidBadgeIds() []*UintRange {
	if x != nil {
		return x.ValidBadgeIds
	}
	return nil
}

func (x *MsgCreateCollection) GetCollectionPermissions() *CollectionPermissions {
	if x != nil {
		return x.CollectionPermissions
	}
	return nil
}

func (x *MsgCreateCollection) GetManagerTimeline() []*ManagerTimeline {
	if x != nil {
		return x.ManagerTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetCollectionMetadataTimeline() []*CollectionMetadataTimeline {
	if x != nil {
		return x.CollectionMetadataTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetBadgeMetadataTimeline() []*BadgeMetadataTimeline {
	if x != nil {
		return x.BadgeMetadataTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetOffChainBalancesMetadataTimeline() []*OffChainBalancesMetadataTimeline {
	if x != nil {
		return x.OffChainBalancesMetadataTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetCustomDataTimeline() []*CustomDataTimeline {
	if x != nil {
		return x.CustomDataTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetCollectionApprovals() []*CollectionApproval {
	if x != nil {
		return x.CollectionApprovals
	}
	return nil
}

func (x *MsgCreateCollection) GetStandardsTimeline() []*StandardsTimeline {
	if x != nil {
		return x.StandardsTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetIsArchivedTimeline() []*IsArchivedTimeline {
	if x != nil {
		return x.IsArchivedTimeline
	}
	return nil
}

func (x *MsgCreateCollection) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgCreateCollectionResponse is the response to MsgCreateCollection.
type MsgCreateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the badge collection.
	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (x *MsgCreateCollectionResponse) Reset() {
	*x = MsgCreateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgCreateCollectionResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// MsgCreateAddressLists is used to create address lists.
type MsgCreateAddressLists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Address lists to create.
	AddressLists []*AddressList `protobuf:"bytes,2,rep,name=addressLists,proto3" json:"addressLists,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,3,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgCreateAddressLists) Reset() {
	*x = MsgCreateAddressLists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateAddressLists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateAddressLists) ProtoMessage() {}

// Deprecated: Use MsgCreateAddressLists.ProtoReflect.Descriptor instead.
func (*MsgCreateAddressLists) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgCreateAddressLists) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateAddressLists) GetAddressLists() []*AddressList {
	if x != nil {
		return x.AddressLists
	}
	return nil
}

func (x *MsgCreateAddressLists) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgCreateAddressListsResponse is the response to MsgCreateAddressLists.
type MsgCreateAddressListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateAddressListsResponse) Reset() {
	*x = MsgCreateAddressListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateAddressListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateAddressListsResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateAddressListsResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateAddressListsResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{10}
}

// MsgTransferBadges is used to transfer badges.
type MsgTransferBadges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// ID of the collection.
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// Transfers to execute.
	Transfers []*Transfer `protobuf:"bytes,3,rep,name=transfers,proto3" json:"transfers,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,4,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgTransferBadges) Reset() {
	*x = MsgTransferBadges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferBadges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferBadges) ProtoMessage() {}

// Deprecated: Use MsgTransferBadges.ProtoReflect.Descriptor instead.
func (*MsgTransferBadges) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgTransferBadges) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgTransferBadges) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgTransferBadges) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *MsgTransferBadges) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgTransferBadgesResponse is the response to MsgTransferBadges.
type MsgTransferBadgesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgTransferBadgesResponse) Reset() {
	*x = MsgTransferBadgesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferBadgesResponse) ProtoMessage() {}

// Deprecated: Use MsgTransferBadgesResponse.ProtoReflect.Descriptor instead.
func (*MsgTransferBadgesResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{12}
}

// MsgDeleteCollection is used to delete a collection.
type MsgDeleteCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// ID of the collection.
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,3,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgDeleteCollection) Reset() {
	*x = MsgDeleteCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteCollection) ProtoMessage() {}

// Deprecated: Use MsgDeleteCollection.ProtoReflect.Descriptor instead.
func (*MsgDeleteCollection) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgDeleteCollection) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteCollection) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgDeleteCollection) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgDeleteCollectionResponse is the response to MsgDeleteCollection.
type MsgDeleteCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteCollectionResponse) Reset() {
	*x = MsgDeleteCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteCollectionResponse) ProtoMessage() {}

// Deprecated: Use MsgDeleteCollectionResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteCollectionResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{14}
}

// MsgUpdateUserApprovals is used to update user approvals.
type MsgUpdateUserApprovals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the creator.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// ID of the collection.
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// Indicates if outgoing approvals should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateOutgoingApprovals bool `protobuf:"varint,3,opt,name=updateOutgoingApprovals,proto3" json:"updateOutgoingApprovals,omitempty"`
	// New outgoing approvals to set.
	OutgoingApprovals []*UserOutgoingApproval `protobuf:"bytes,4,rep,name=outgoingApprovals,proto3" json:"outgoingApprovals,omitempty"`
	// Indicates if incoming approvals should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateIncomingApprovals bool `protobuf:"varint,5,opt,name=updateIncomingApprovals,proto3" json:"updateIncomingApprovals,omitempty"`
	// New incoming approvals to set.
	IncomingApprovals []*UserIncomingApproval `protobuf:"bytes,6,rep,name=incomingApprovals,proto3" json:"incomingApprovals,omitempty"`
	// Indicates if auto-approve settings for self-initiated outgoing transfers should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateAutoApproveSelfInitiatedOutgoingTransfers bool `protobuf:"varint,7,opt,name=updateAutoApproveSelfInitiatedOutgoingTransfers,proto3" json:"updateAutoApproveSelfInitiatedOutgoingTransfers,omitempty"`
	// Auto-approve setting for self-initiated outgoing transfers.
	AutoApproveSelfInitiatedOutgoingTransfers bool `protobuf:"varint,8,opt,name=autoApproveSelfInitiatedOutgoingTransfers,proto3" json:"autoApproveSelfInitiatedOutgoingTransfers,omitempty"`
	// Indicates if auto-approve settings for self-initiated incoming transfers should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateAutoApproveSelfInitiatedIncomingTransfers bool `protobuf:"varint,9,opt,name=updateAutoApproveSelfInitiatedIncomingTransfers,proto3" json:"updateAutoApproveSelfInitiatedIncomingTransfers,omitempty"`
	// Auto-approve setting for self-initiated incoming transfers.
	AutoApproveSelfInitiatedIncomingTransfers bool `protobuf:"varint,10,opt,name=autoApproveSelfInitiatedIncomingTransfers,proto3" json:"autoApproveSelfInitiatedIncomingTransfers,omitempty"`
	// Indicates if auto-approve settings for all incoming transfers should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateAutoApproveAllIncomingTransfers bool `protobuf:"varint,11,opt,name=updateAutoApproveAllIncomingTransfers,proto3" json:"updateAutoApproveAllIncomingTransfers,omitempty"`
	// Auto-approve setting for all incoming transfers.
	AutoApproveAllIncomingTransfers bool `protobuf:"varint,12,opt,name=autoApproveAllIncomingTransfers,proto3" json:"autoApproveAllIncomingTransfers,omitempty"`
	// Indicates if user permissions should be updated. If true, we set to value in this Msg. If false, we keep existing value.
	UpdateUserPermissions bool `protobuf:"varint,13,opt,name=updateUserPermissions,proto3" json:"updateUserPermissions,omitempty"`
	// New user permissions to set.
	UserPermissions *UserPermissions `protobuf:"bytes,14,opt,name=userPermissions,proto3" json:"userPermissions,omitempty"`
	// Address of the original creator. Used for CosmWASM purposes.
	// IMPORTANT: We will override but we must trust the original creator address.
	CreatorOverride string `protobuf:"bytes,15,opt,name=creatorOverride,proto3" json:"creatorOverride,omitempty"`
}

func (x *MsgUpdateUserApprovals) Reset() {
	*x = MsgUpdateUserApprovals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserApprovals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserApprovals) ProtoMessage() {}

// Deprecated: Use MsgUpdateUserApprovals.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserApprovals) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgUpdateUserApprovals) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserApprovals) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MsgUpdateUserApprovals) GetUpdateOutgoingApprovals() bool {
	if x != nil {
		return x.UpdateOutgoingApprovals
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetOutgoingApprovals() []*UserOutgoingApproval {
	if x != nil {
		return x.OutgoingApprovals
	}
	return nil
}

func (x *MsgUpdateUserApprovals) GetUpdateIncomingApprovals() bool {
	if x != nil {
		return x.UpdateIncomingApprovals
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetIncomingApprovals() []*UserIncomingApproval {
	if x != nil {
		return x.IncomingApprovals
	}
	return nil
}

func (x *MsgUpdateUserApprovals) GetUpdateAutoApproveSelfInitiatedOutgoingTransfers() bool {
	if x != nil {
		return x.UpdateAutoApproveSelfInitiatedOutgoingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetAutoApproveSelfInitiatedOutgoingTransfers() bool {
	if x != nil {
		return x.AutoApproveSelfInitiatedOutgoingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetUpdateAutoApproveSelfInitiatedIncomingTransfers() bool {
	if x != nil {
		return x.UpdateAutoApproveSelfInitiatedIncomingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetAutoApproveSelfInitiatedIncomingTransfers() bool {
	if x != nil {
		return x.AutoApproveSelfInitiatedIncomingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetUpdateAutoApproveAllIncomingTransfers() bool {
	if x != nil {
		return x.UpdateAutoApproveAllIncomingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetAutoApproveAllIncomingTransfers() bool {
	if x != nil {
		return x.AutoApproveAllIncomingTransfers
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetUpdateUserPermissions() bool {
	if x != nil {
		return x.UpdateUserPermissions
	}
	return false
}

func (x *MsgUpdateUserApprovals) GetUserPermissions() *UserPermissions {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

func (x *MsgUpdateUserApprovals) GetCreatorOverride() string {
	if x != nil {
		return x.CreatorOverride
	}
	return ""
}

// MsgUpdateUserApprovalsResponse is the response to MsgUpdateUserApprovals.
type MsgUpdateUserApprovalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserApprovalsResponse) Reset() {
	*x = MsgUpdateUserApprovalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badges_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserApprovalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserApprovalsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateUserApprovalsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserApprovalsResponse) Descriptor() ([]byte, []int) {
	return file_badges_tx_proto_rawDescGZIP(), []int{16}
}

var File_badges_tx_proto protoreflect.FileDescriptor

var file_badges_tx_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f,
	0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x29, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x16, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe1,
	0x04, 0x0a, 0x12, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x68, 0x0a, 0x1c, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x73, 0x67, 0x12, 0x47, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x56, 0x0a, 0x16,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x52, 0x16, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x73, 0x4d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x73, 0x67, 0x22, 0xde, 0x0d, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e,
	0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x41, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x62,
	0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x26, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x74, 0x0a, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x3c, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x4c, 0x0a,
	0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a,
	0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x73,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x3a, 0x31, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7,
	0xb0, 0x2a, 0x20, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x24, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe4, 0x0c,
	0x0a, 0x13, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55,
	0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x1b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53,
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x15, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x20,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x62, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x1b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53,
	0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x15, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x26, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x26, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x74, 0x0a, 0x20, 0x6f,
	0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4f,
	0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x20, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x3a, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x47, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x69, 0x73,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x28, 0x82, 0xe7, 0xb0, 0x2a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x17, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9a, 0x08, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a,
	0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x62, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x74, 0x0a, 0x20, 0x6f, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x20, 0x6f,
	0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x4a, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x12, 0x69, 0x73, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x28, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x17, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x2a, 0x82, 0xe7, 0xb0, 0x2a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x19, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x3a, 0x26, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x15, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4d,
	0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x28, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x17, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xf0, 0x08, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73,
	0x12, 0x4a, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x11, 0x6f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52,
	0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x12, 0x68, 0x0a, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65,
	0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x29,
	0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x29, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x68, 0x0a, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x29, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x29, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x54, 0x0a, 0x25, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x25, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x1f, 0x61, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1f, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x2b, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd4, 0x05, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x48, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1f, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x19, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2c, 0x2e, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x2e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x1a, 0x25, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x1a, 0x21, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x1a, 0x26, 0x2e, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x23, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x23, 0x2e, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x23, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0x68, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x19, 0x62, 0x69, 0x74, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0xa2,
	0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0xca, 0x02,
	0x06, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0xe2, 0x02, 0x12, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badges_tx_proto_rawDescOnce sync.Once
	file_badges_tx_proto_rawDescData = file_badges_tx_proto_rawDesc
)

func file_badges_tx_proto_rawDescGZIP() []byte {
	file_badges_tx_proto_rawDescOnce.Do(func() {
		file_badges_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_badges_tx_proto_rawDescData)
	})
	return file_badges_tx_proto_rawDescData
}

var file_badges_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_badges_tx_proto_goTypes = []interface{}{
	(*MsgUpdateParams)(nil),                      // 0: badges.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),              // 1: badges.MsgUpdateParamsResponse
	(*BadgeCustomMsgType)(nil),                   // 2: badges.BadgeCustomMsgType
	(*MsgUniversalUpdateCollection)(nil),         // 3: badges.MsgUniversalUpdateCollection
	(*MsgUniversalUpdateCollectionResponse)(nil), // 4: badges.MsgUniversalUpdateCollectionResponse
	(*MsgUpdateCollection)(nil),                  // 5: badges.MsgUpdateCollection
	(*MsgUpdateCollectionResponse)(nil),          // 6: badges.MsgUpdateCollectionResponse
	(*MsgCreateCollection)(nil),                  // 7: badges.MsgCreateCollection
	(*MsgCreateCollectionResponse)(nil),          // 8: badges.MsgCreateCollectionResponse
	(*MsgCreateAddressLists)(nil),                // 9: badges.MsgCreateAddressLists
	(*MsgCreateAddressListsResponse)(nil),        // 10: badges.MsgCreateAddressListsResponse
	(*MsgTransferBadges)(nil),                    // 11: badges.MsgTransferBadges
	(*MsgTransferBadgesResponse)(nil),            // 12: badges.MsgTransferBadgesResponse
	(*MsgDeleteCollection)(nil),                  // 13: badges.MsgDeleteCollection
	(*MsgDeleteCollectionResponse)(nil),          // 14: badges.MsgDeleteCollectionResponse
	(*MsgUpdateUserApprovals)(nil),               // 15: badges.MsgUpdateUserApprovals
	(*MsgUpdateUserApprovalsResponse)(nil),       // 16: badges.MsgUpdateUserApprovalsResponse
	(*Params)(nil),                               // 17: badges.Params
	(*UserBalanceStore)(nil),                     // 18: badges.UserBalanceStore
	(*UintRange)(nil),                            // 19: badges.UintRange
	(*CollectionPermissions)(nil),                // 20: badges.CollectionPermissions
	(*ManagerTimeline)(nil),                      // 21: badges.ManagerTimeline
	(*CollectionMetadataTimeline)(nil),           // 22: badges.CollectionMetadataTimeline
	(*BadgeMetadataTimeline)(nil),                // 23: badges.BadgeMetadataTimeline
	(*OffChainBalancesMetadataTimeline)(nil),     // 24: badges.OffChainBalancesMetadataTimeline
	(*CustomDataTimeline)(nil),                   // 25: badges.CustomDataTimeline
	(*CollectionApproval)(nil),                   // 26: badges.CollectionApproval
	(*StandardsTimeline)(nil),                    // 27: badges.StandardsTimeline
	(*IsArchivedTimeline)(nil),                   // 28: badges.IsArchivedTimeline
	(*AddressList)(nil),                          // 29: badges.AddressList
	(*Transfer)(nil),                             // 30: badges.Transfer
	(*UserOutgoingApproval)(nil),                 // 31: badges.UserOutgoingApproval
	(*UserIncomingApproval)(nil),                 // 32: badges.UserIncomingApproval
	(*UserPermissions)(nil),                      // 33: badges.UserPermissions
}
var file_badges_tx_proto_depIdxs = []int32{
	17, // 0: badges.MsgUpdateParams.params:type_name -> badges.Params
	9,  // 1: badges.BadgeCustomMsgType.createAddressListsMsg:type_name -> badges.MsgCreateAddressLists
	3,  // 2: badges.BadgeCustomMsgType.universalUpdateCollectionMsg:type_name -> badges.MsgUniversalUpdateCollection
	13, // 3: badges.BadgeCustomMsgType.deleteCollectionMsg:type_name -> badges.MsgDeleteCollection
	11, // 4: badges.BadgeCustomMsgType.transferBadgesMsg:type_name -> badges.MsgTransferBadges
	15, // 5: badges.BadgeCustomMsgType.updateUserApprovalsMsg:type_name -> badges.MsgUpdateUserApprovals
	5,  // 6: badges.BadgeCustomMsgType.updateCollectionMsg:type_name -> badges.MsgUpdateCollection
	7,  // 7: badges.BadgeCustomMsgType.createCollectionMsg:type_name -> badges.MsgCreateCollection
	18, // 8: badges.MsgUniversalUpdateCollection.defaultBalances:type_name -> badges.UserBalanceStore
	19, // 9: badges.MsgUniversalUpdateCollection.validBadgeIds:type_name -> badges.UintRange
	20, // 10: badges.MsgUniversalUpdateCollection.collectionPermissions:type_name -> badges.CollectionPermissions
	21, // 11: badges.MsgUniversalUpdateCollection.managerTimeline:type_name -> badges.ManagerTimeline
	22, // 12: badges.MsgUniversalUpdateCollection.collectionMetadataTimeline:type_name -> badges.CollectionMetadataTimeline
	23, // 13: badges.MsgUniversalUpdateCollection.badgeMetadataTimeline:type_name -> badges.BadgeMetadataTimeline
	24, // 14: badges.MsgUniversalUpdateCollection.offChainBalancesMetadataTimeline:type_name -> badges.OffChainBalancesMetadataTimeline
	25, // 15: badges.MsgUniversalUpdateCollection.customDataTimeline:type_name -> badges.CustomDataTimeline
	26, // 16: badges.MsgUniversalUpdateCollection.collectionApprovals:type_name -> badges.CollectionApproval
	27, // 17: badges.MsgUniversalUpdateCollection.standardsTimeline:type_name -> badges.StandardsTimeline
	28, // 18: badges.MsgUniversalUpdateCollection.isArchivedTimeline:type_name -> badges.IsArchivedTimeline
	19, // 19: badges.MsgUpdateCollection.validBadgeIds:type_name -> badges.UintRange
	20, // 20: badges.MsgUpdateCollection.collectionPermissions:type_name -> badges.CollectionPermissions
	21, // 21: badges.MsgUpdateCollection.managerTimeline:type_name -> badges.ManagerTimeline
	22, // 22: badges.MsgUpdateCollection.collectionMetadataTimeline:type_name -> badges.CollectionMetadataTimeline
	23, // 23: badges.MsgUpdateCollection.badgeMetadataTimeline:type_name -> badges.BadgeMetadataTimeline
	24, // 24: badges.MsgUpdateCollection.offChainBalancesMetadataTimeline:type_name -> badges.OffChainBalancesMetadataTimeline
	25, // 25: badges.MsgUpdateCollection.customDataTimeline:type_name -> badges.CustomDataTimeline
	26, // 26: badges.MsgUpdateCollection.collectionApprovals:type_name -> badges.CollectionApproval
	27, // 27: badges.MsgUpdateCollection.standardsTimeline:type_name -> badges.StandardsTimeline
	28, // 28: badges.MsgUpdateCollection.isArchivedTimeline:type_name -> badges.IsArchivedTimeline
	18, // 29: badges.MsgCreateCollection.defaultBalances:type_name -> badges.UserBalanceStore
	19, // 30: badges.MsgCreateCollection.validBadgeIds:type_name -> badges.UintRange
	20, // 31: badges.MsgCreateCollection.collectionPermissions:type_name -> badges.CollectionPermissions
	21, // 32: badges.MsgCreateCollection.managerTimeline:type_name -> badges.ManagerTimeline
	22, // 33: badges.MsgCreateCollection.collectionMetadataTimeline:type_name -> badges.CollectionMetadataTimeline
	23, // 34: badges.MsgCreateCollection.badgeMetadataTimeline:type_name -> badges.BadgeMetadataTimeline
	24, // 35: badges.MsgCreateCollection.offChainBalancesMetadataTimeline:type_name -> badges.OffChainBalancesMetadataTimeline
	25, // 36: badges.MsgCreateCollection.customDataTimeline:type_name -> badges.CustomDataTimeline
	26, // 37: badges.MsgCreateCollection.collectionApprovals:type_name -> badges.CollectionApproval
	27, // 38: badges.MsgCreateCollection.standardsTimeline:type_name -> badges.StandardsTimeline
	28, // 39: badges.MsgCreateCollection.isArchivedTimeline:type_name -> badges.IsArchivedTimeline
	29, // 40: badges.MsgCreateAddressLists.addressLists:type_name -> badges.AddressList
	30, // 41: badges.MsgTransferBadges.transfers:type_name -> badges.Transfer
	31, // 42: badges.MsgUpdateUserApprovals.outgoingApprovals:type_name -> badges.UserOutgoingApproval
	32, // 43: badges.MsgUpdateUserApprovals.incomingApprovals:type_name -> badges.UserIncomingApproval
	33, // 44: badges.MsgUpdateUserApprovals.userPermissions:type_name -> badges.UserPermissions
	0,  // 45: badges.Msg.UpdateParams:input_type -> badges.MsgUpdateParams
	3,  // 46: badges.Msg.UniversalUpdateCollection:input_type -> badges.MsgUniversalUpdateCollection
	9,  // 47: badges.Msg.CreateAddressLists:input_type -> badges.MsgCreateAddressLists
	11, // 48: badges.Msg.TransferBadges:input_type -> badges.MsgTransferBadges
	15, // 49: badges.Msg.UpdateUserApprovals:input_type -> badges.MsgUpdateUserApprovals
	13, // 50: badges.Msg.DeleteCollection:input_type -> badges.MsgDeleteCollection
	5,  // 51: badges.Msg.UpdateCollection:input_type -> badges.MsgUpdateCollection
	7,  // 52: badges.Msg.CreateCollection:input_type -> badges.MsgCreateCollection
	1,  // 53: badges.Msg.UpdateParams:output_type -> badges.MsgUpdateParamsResponse
	4,  // 54: badges.Msg.UniversalUpdateCollection:output_type -> badges.MsgUniversalUpdateCollectionResponse
	10, // 55: badges.Msg.CreateAddressLists:output_type -> badges.MsgCreateAddressListsResponse
	12, // 56: badges.Msg.TransferBadges:output_type -> badges.MsgTransferBadgesResponse
	16, // 57: badges.Msg.UpdateUserApprovals:output_type -> badges.MsgUpdateUserApprovalsResponse
	14, // 58: badges.Msg.DeleteCollection:output_type -> badges.MsgDeleteCollectionResponse
	6,  // 59: badges.Msg.UpdateCollection:output_type -> badges.MsgUpdateCollectionResponse
	8,  // 60: badges.Msg.CreateCollection:output_type -> badges.MsgCreateCollectionResponse
	53, // [53:61] is the sub-list for method output_type
	45, // [45:53] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_badges_tx_proto_init() }
func file_badges_tx_proto_init() {
	if File_badges_tx_proto != nil {
		return
	}
	file_badges_params_proto_init()
	file_badges_transfers_proto_init()
	file_badges_balances_proto_init()
	file_badges_permissions_proto_init()
	file_badges_metadata_proto_init()
	file_badges_collections_proto_init()
	file_badges_address_lists_proto_init()
	file_badges_timelines_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_badges_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeCustomMsgType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUniversalUpdateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateAddressLists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateAddressListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferBadges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferBadgesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserApprovals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badges_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserApprovalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badges_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_badges_tx_proto_goTypes,
		DependencyIndexes: file_badges_tx_proto_depIdxs,
		MessageInfos:      file_badges_tx_proto_msgTypes,
	}.Build()
	File_badges_tx_proto = out.File
	file_badges_tx_proto_rawDesc = nil
	file_badges_tx_proto_goTypes = nil
	file_badges_tx_proto_depIdxs = nil
}
