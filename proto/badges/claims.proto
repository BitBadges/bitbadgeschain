syntax = "proto3";
package bitbadges.bitbadgeschain.badges;

// this line is used by starport scaffolding # proto/tx/import
import "badges/balances.proto";
import "badges/ranges.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bitbadges/bitbadgeschain/x/badges/types";

//We will add more fields to this message later (e.g. ZKP proofs)
message Challenge {
  string root = 1;
  string expectedProofLength = 2  [
      (gogoproto.customtype) = "Uint", 
      (gogoproto.nullable) = false
      
    ];
  bool useCreatorAddressAsLeaf = 3;
}

//Defines a claim object. Claims are used to transfer badges via a claiming process.
//Stored in own store. Claimed leaves are also stored in unique store.
message Claim {
  repeated Balance undistributedBalances = 1; //Current balance of the claim store.
  IdRange timeRange = 2; //Time range when the claim is valid.
  string uri = 3; //Optional URI for the claim. Max 100 chars. Often used for IPFS Merkle Tree Information for challenges
  //If >0, then the claim can only be used to claim this number of leaves per address. If 0, then no limit.
  string numClaimsPerAddress = 4  [
      (gogoproto.customtype) = "Uint", 
      (gogoproto.nullable) = false
      
    ];
  

  //Balances for the current claim
  string incrementIdsBy = 5  [
      (gogoproto.customtype) = "Uint", 
      (gogoproto.nullable) = false
      
    ];
  repeated Balance currentClaimAmounts = 6;

  //Challenges for the claim. If empty, then no challenges are required.
  repeated Challenge challenges = 7; 
}
