syntax = "proto3";
package bitbadges.bitbadgeschain.badges;

// this line is used by starport scaffolding # proto/tx/import
import "badges/transfers.proto";
import "badges/balances.proto";
import "badges/permissions.proto";
import "badges/metadata.proto";
import "badges/collections.proto";
import "gogoproto/gogo.proto";
import "badges/address_mappings.proto";
import "badges/timelines.proto";

option go_package = "github.com/bitbadges/bitbadgeschain/x/badges/types";

// Msg defines the Msg service.
service Msg {
  rpc UpdateCollection      (MsgUpdateCollection) returns (MsgUpdateCollectionResponse);
  rpc CreateAddressMappings (MsgCreateAddressMappings) returns (MsgCreateAddressMappingsResponse);
  rpc TransferBadges(MsgTransferBadges) returns (MsgTransferBadgesResponse);
  rpc UpdateUserApprovals(MsgUpdateUserApprovals) returns (MsgUpdateUserApprovalsResponse);
  rpc DeleteCollection(MsgDeleteCollection) returns (MsgDeleteCollectionResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

//Used for WASM bindings and JSON parsing
message BadgeCustomMsgType {
  MsgCreateAddressMappings createAddressMappingsMsg = 1;
  MsgUpdateCollection updateCollectionMsg = 2;
  MsgDeleteCollection deleteCollectionMsg = 3;
  MsgTransferBadges transferBadgesMsg = 4;
  MsgUpdateUserApprovals updateUserApprovalsMsg = 5;
}

//The types defined in these files are used to define the MsgServer types for all requests and responses for Msgs of the badges module.
message MsgUpdateCollection {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false]; //0 for new collection

  //The following section of fields are only allowed to be set upon creation of a new collection.
  string balancesType = 3;

  //Default balance options for newly initiated accounts.
  repeated UserOutgoingApproval defaultOutgoingApprovals = 4; //The user's approved transfers for each badge ID.
  repeated UserIncomingApproval defaultIncomingApprovals = 5; //The user's approved incoming transfers for each badge ID.
  bool defaultAutoApproveSelfInitiatedOutgoingTransfers = 29;
  bool defaultAutoApproveSelfInitiatedIncomingTransfers = 30;
  UserPermissions defaultUserPermissions = 31;

  //The rest of the fields are allowed to be set on creation or update.
  repeated Balance badgesToCreate = 6; 

  bool updateCollectionPermissions = 7;
  CollectionPermissions collectionPermissions = 8;

  bool updateManagerTimeline = 9;
  repeated ManagerTimeline managerTimeline = 10;

  bool updateCollectionMetadataTimeline = 11;
  repeated CollectionMetadataTimeline collectionMetadataTimeline = 12;

  bool updateBadgeMetadataTimeline = 13;
  repeated BadgeMetadataTimeline badgeMetadataTimeline = 14;

  bool updateOffChainBalancesMetadataTimeline = 15;
  repeated OffChainBalancesMetadataTimeline offChainBalancesMetadataTimeline = 16;

  bool updateCustomDataTimeline = 17;
  repeated CustomDataTimeline customDataTimeline = 18;

  bool updateCollectionApprovals = 21;
  repeated CollectionApproval collectionApprovals = 22;

  bool updateStandardsTimeline = 23;
  repeated StandardsTimeline standardsTimeline = 24;

  bool updateContractAddressTimeline = 25;
  repeated ContractAddressTimeline contractAddressTimeline = 26;

  bool updateIsArchivedTimeline = 27;
  repeated IsArchivedTimeline isArchivedTimeline = 28;  
}

message MsgUpdateCollectionResponse {
  string collectionId = 1  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false]; //ID of badge collection
}

message MsgCreateAddressMappings {
  string creator = 1;
  repeated AddressMapping addressMappings = 2;
}

message MsgCreateAddressMappingsResponse {}


//For each amount, for each toAddress, we will attempt to transfer all the badgeIds for the badge with ID badgeId.
message MsgTransferBadges {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated Transfer transfers = 3;
}
message MsgTransferBadgesResponse {}

message MsgDeleteCollection {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
}

message MsgDeleteCollectionResponse {}


message MsgUpdateUserApprovals {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];

  bool updateOutgoingApprovals = 3;
  repeated UserOutgoingApproval outgoingApprovals = 4;

  bool updateIncomingApprovals = 5;
  repeated UserIncomingApproval incomingApprovals = 6;
  
  bool updateAutoApproveSelfInitiatedOutgoingTransfers = 7;
  bool autoApproveSelfInitiatedOutgoingTransfers = 8;

  bool updateAutoApproveSelfInitiatedIncomingTransfers = 9;
  bool autoApproveSelfInitiatedIncomingTransfers = 10;

  bool updateUserPermissions = 11;
  UserPermissions userPermissions = 12;
}

message MsgUpdateUserApprovalsResponse {}

// this line is used by starport scaffolding # proto/tx/message
