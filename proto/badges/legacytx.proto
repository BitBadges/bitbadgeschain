syntax = "proto3";
package badges;

// this line is used by starport scaffolding # proto/tx/import
import "badges/transfers.proto";
import "badges/balances.proto";
import "badges/permissions.proto";
import "badges/metadata.proto";
import "badges/collections.proto";
import "gogoproto/gogo.proto";
import "badges/address_lists.proto";
import "badges/timelines.proto";

option go_package = "github.com/bitbadges/bitbadgeschain/x/badges/types";

//Before switching to the universal Msgs, we had a separate Msg for each action.
//This is the old Msg service definition. It is still used in some parts of the codebase for compatibility.

//The types defined in these files are used to define the MsgServer types for all requests and responses for Msgs of the badges module.
message UserOutgoingApprovalTimeline {
  repeated UserOutgoingApproval outgoingApprovals = 1;
  repeated UintRange timelineTimes = 2;
}

message UserIncomingApprovalTimeline {
  repeated UserIncomingApproval incomingApprovals = 1;
  repeated UintRange timelineTimes = 2;
}

message CollectionApprovalTimeline {
  repeated CollectionApproval collectionApprovals = 1;
  repeated UintRange timelineTimes = 2;
}


message MsgNewCollection {
  // See collections.proto for more details about these MsgNewBadge fields. Defines the badge details. Leave unneeded fields empty.
  string creator = 1; 
  repeated CollectionMetadataTimeline collectionMetadataTimeline = 2;
  repeated BadgeMetadataTimeline badgeMetadataTimeline = 3;
  repeated OffChainBalancesMetadataTimeline offChainBalancesMetadataTimeline = 4;
  repeated CustomDataTimeline customDataTimeline = 5;
  string balancesType = 6 [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated CollectionApproval collectionApprovals = 8;
  CollectionPermissions permissions = 9;
  repeated StandardsTimeline standardsTimeline = 10;

  //Badge supplys and amounts to create. For each idx, we create amounts[idx] badges each with a supply of supplys[idx].
  //If supply[idx] == 0, we assume default supply. amountsToCreate[idx] can't equal 0.
  repeated Balance badgesToCreate = 11;
  repeated Transfer transfers = 12;
  repeated ContractAddressTimeline contractAddressTimeline = 13;
  repeated AddressList addressLists = 14;

  repeated UserOutgoingApproval defaultOutgoingApprovals = 15; //The user's approved transfers for each badge ID.
  repeated UserIncomingApproval defaultIncomingApprovals = 16; //The user's approved incoming transfers for each badge ID.

  bool defaultDisapproveSelfInitiated = 17; 
   //The default balances for the user
   repeated Balance defaultBalances = 18;

}

message MsgNewCollectionResponse {
  string collectionId = 1  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false
  ]; //ID of created badge collecon
}

//This handles both minting more of existing badges and creating new badges.
message MsgMintAndDistributeBadges {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated Balance badgesToCreate = 3;

  repeated Transfer transfers = 4;
  repeated CollectionMetadataTimeline collectionMetadataTimeline = 6; 
  repeated BadgeMetadataTimeline badgeMetadataTimeline = 7;
  repeated OffChainBalancesMetadataTimeline offChainBalancesMetadataTimeline = 8;
  repeated CollectionApproval collectionApprovals = 9;

  repeated AddressList addressLists = 10;
}

message MsgMintAndDistributeBadgesResponse {}

message MsgUniversalUpdateCollectionApprovals {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated CollectionApproval collectionApprovals = 3;
  repeated AddressList addressLists = 4;
}


message MsgUniversalUpdateCollectionApprovalsResponse {}


//Update badge Uris with new URI object, if permitted.
message MsgUpdateMetadata {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated CollectionMetadataTimeline collectionMetadataTimeline = 3; 
  repeated BadgeMetadataTimeline badgeMetadataTimeline = 4;
  repeated OffChainBalancesMetadataTimeline offChainBalancesMetadataTimeline = 5;
  repeated CustomDataTimeline customDataTimeline = 6;
  repeated ContractAddressTimeline contractAddressTimeline = 7;
  repeated StandardsTimeline standardsTimeline = 8;
}

message MsgUpdateMetadataResponse {}

//Update badge permissions with new permissions, if permitted.
message MsgUniversalUpdateCollectionPermissions {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  CollectionPermissions permissions = 3;
  repeated AddressList addressLists = 4;
}

message MsgUniversalUpdateCollectionPermissionsResponse {}

message MsgUpdateUserPermissions {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  UserPermissions permissions = 3;
  repeated AddressList addressLists = 4;
}

message MsgUpdateUserPermissionsResponse {}

//Transfer manager to this address. Recipient must have made a request.
message MsgUpdateManager {
  string creator = 1;
  string collectionId = 2  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated ManagerTimeline managerTimeline = 3;
}

message MsgUpdateManagerResponse {}


message MsgArchiveCollection {
  string creator      = 1;
  string collectionId = 2 [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
  repeated IsArchivedTimeline isArchivedTimeline = 3;
}

message MsgArchiveCollectionResponse {}


// this line is used by starport scaffolding # proto/tx/message
