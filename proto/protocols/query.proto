syntax = "proto3";

package protocols;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "protocols/params.proto";
import "protocols/tx.proto";

option go_package = "github.com/bitbadges/bitbadgeschain/x/protocols/types";

// Query defines the gRPC querier service.
service Query {
  
  
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetProtocolRequest {
  string name = 1;
}

message QueryGetProtocolResponse {
  Protocol protocol = 1 [(gogoproto.nullable) = false];
}

message QueryGetCollectionIdForProtocolRequest {
  string name = 1;
  string address = 2;
}

message QueryGetCollectionIdForProtocolResponse {
  string collection_id = 1  [(gogoproto.customtype) = "Uint", (gogoproto.nullable) = false];
}

