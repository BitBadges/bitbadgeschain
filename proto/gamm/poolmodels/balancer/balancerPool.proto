syntax = "proto3";
// this is a legacy package that requires additional migration logic
// in order to use the correct package. Decision made to use legacy package path
// until clear steps for migration logic and the unknowns for state breaking are
// investigated for changing proto package.
package gamm.poolmodels.balancer;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/bitbadges/bitbadgeschain/x/gamm/poolmodels/balancer";


// PoolParams defined the parameters that will be managed by the pool
// governance in the future. This params are not managed by the chain
// governance. Instead they will be managed by the token holders of the pool.
message PoolParams {
  option (amino.name) = "gamm/BalancerPoolParams";

  string swap_fee = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"swap_fee\"",
    (gogoproto.nullable) = false
  ];
  // N.B.: exit fee is disabled during pool creation in x/poolmanager. While old
  // pools can maintain a non-zero fee. No new pool can be created with non-zero
  // fee anymore
  string exit_fee = 2 [

    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"exit_fee\"",
    (gogoproto.nullable) = false
  ];
}

// Pool asset is an internal struct that combines the amount of the
// token in the pool, and its balancer weight.
// This is an awkward packaging of data,
// and should be revisited in a future state migration.
message PoolAsset {
  // Coins we are talking about,
  // the denomination must be unique amongst all PoolAssets for this pool.
  cosmos.base.v1beta1.Coin token = 1
      [ (gogoproto.moretags) = "yaml:\"token\"", (gogoproto.nullable) = false ];
  // Weight that is not normalized. This weight must be less than 2^50
  string weight = 2 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.nullable) = false
  ];
}

message Pool {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;
  option (cosmos_proto.implements_interface) = "PoolI";
  option (amino.name) = "gamm/BalancerPool";

  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  uint64 id = 2;

  PoolParams pool_params = 3 [
    (gogoproto.moretags) = "yaml:\"balancer_pool_params\"",
    (gogoproto.nullable) = false
  ];


  // sum of all LP tokens sent out
  cosmos.base.v1beta1.Coin total_shares = 4 [
    (gogoproto.moretags) = "yaml:\"total_shares\"",
    (gogoproto.nullable) = false
  ];
  // These are assumed to be sorted by denomiation.
  // They contain the pool asset and the information about the weight
  repeated gamm.poolmodels.balancer.PoolAsset pool_assets = 5 [
    (gogoproto.moretags) = "yaml:\"pool_assets\"",
    (gogoproto.nullable) = false
  ];
  // sum of all non-normalized pool weights
  string total_weight = 6 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"total_weight\"",
    (gogoproto.nullable) = false
  ];
}
